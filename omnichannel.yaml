openapi: 3.0.0
info:
  version: 1.0.0
  title: Omnichannel
# description: |-
#    With the Rocket.Chat [Omnichannel](https://docs.rocket.chat/use-rocket.chat/omnichannel) feature, you can talk to your customers and website visitors, regardless of the channel they choose to connect with you.

#    The Omnichannel endpoints are of two types:

#    * **Endpoints requiring authentication**: The workspace admins and managers use the endpoints that require authentication with a login method.
#    * **Endpoints not requiring authentication**: Visitors can use the endpoints that require no authentication. These endpoints require a visitor `token` which is like an authentication parameter for visitors. Visitors can [register themselves](livechat-endpoints/visitor/register-a-new-livechat-visitor.md) by providing a random unique string as the `token` which can be used for other such endpoints.

#    This section includes the following endpoints:
#    * **Livechat**: Manage livechat users, visitors, conversations, and view analytics.
#    * **Voice Channel**: Initiate and receive [calls](https://docs.rocket.chat/use-rocket.chat/rocket.chat-voice-channel) with visitors.
#    * **Canned Responses**: Create and manage [template messages](https://docs.rocket.chat/use-rocket.chat/omnichannel/canned-responses).
servers:
  - url: https://apiexplorer.support.rocket.chat
paths:
  '/api/v1/livechat/users/{type}':
    post:
      summary: Register New Agent or Manager
      description: |-
        Register a new <a href='https://docs.rocket.chat/use-rocket.chat/omnichannel/agents' target='_blank'>agent</a> or <a href='https://docs.rocket.chat/use-rocket.chat/omnichannel/managers' target='_blank'>manager</a>.
        Permission required: `view-livechat-manager`

        ### Changelog
        | Version      | Description |
        | ------------ | ------------|
        |0.42.0        | Added       |
      operationId: 'post-api-v1-livechat-users-:type'
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: type
          in: path
          description: |-
            The type of user that you want to register. The value can either be `agent` or `manager`.
          required: true
          schema:
            type: string
          example: agent
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The user name that you want to register.
              required:
                - username
            examples:
              Example 1:
                value:
                  username: john.doe
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      _id:
                        type: string
                      username:
                        type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    user:
                      _id: SQafHvoFPuB57NmBD
                      username: john.doe
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''username'' [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Users
    get:
      summary: Get List of Agents or Managers
      description: |-
        * If the `type` is `manager`, permission required: `view-livechat-manager`.
        * If the `type` is `agent`, permission required: at least one of `transfer-livechat-guest` or `edit-omnichannel-contact`.

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |2.2.0             | Added support to pagination       |
        |0.42.0            | Added       |
      operationId: get-api-v1-livechat-users-type
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: type
          in: path
          description: The type of user that you want to register. The value can either be `agent` or `manager`.
          required: true
          schema:
            type: string
          example: agent
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/sort'
        - schema:
            type: string
          in: query
          name: text
          description: Enter the text you want to filter the search result with.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        username:
                          type: string
                        status:
                          type: string
                        statusLivechat:
                          type: string
                        name:
                          type: string
                        emails:
                          type: array
                          items:
                            type: object
                            properties:
                              address:
                                type: string
                              verified:
                                type: boolean
                        livechat:
                          type: string
                        departments:
                          type: array
                          items:
                            type: string
              examples:
                Success Example:
                  value:
                    users:
                      - _id: XLzGrYF9L2miSpPHP
                        username: dialog.bot
                        status: offline
                        statusLivechat: not-available
                        name: Dialog Bot
                        emails:
                          - address: dialog.bot@test.com
                            verified: true
                        livechat: null
                        departments: []
                      - _id: rbAXPnMktTFbNpwtJ
                        username: john.doe
                        status: offline
                        statusLivechat: available
                        name: John Doe
                        emails:
                          - address: john.doe@gmail.com
                            verified: true
                        livechat:
                          maxNumberSimultaneousChat: ''
                        departments:
                          - 64181a0728384134ed600dcc
                      - _id: hFDuCPam7sWziWFYa
                        username: hookdeck.write
                        status: offline
                        statusLivechat: not-available
                        name: Hookdeck Write
                        emails:
                          - address: hookdeckwrite@gmail.com
                            verified: true
                        livechat: null
                        departments: []
                      - _id: stjxrXYBWy3EcDugH
                        username: rocket.agent
                        status: offline
                        statusLivechat: not-available
                        name: Rocket Agent
                        emails:
                          - address: rocket.agent@rocket.chat
                            verified: false
                        livechat:
                          maxNumberSimultaneousChat: ''
                        departments:
                          - 64181a0728384134ed600dcc
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Users
  '/api/v1/livechat/users/{type}/{_id}':
    get:
      summary: Get Agent or Manager Information
      description: |-
        Get information about a particular agent or a manager.
        Permission required: `view-livechat-manager`

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |0.42.0            | Added       |
      operationId: get-api-v1-livechat-users-type-_id
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: type
          in: path
          description: The type of user. The value can either be `agent` or `manager`.
          required: true
          schema:
            type: string
        - name: _id
          in: path
          description: The user ID.
          required: true
          schema:
            type: string
          example: SQafHvoFPuB57NmBD
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      _id:
                        type: string
                      username:
                        type: string
                      name:
                        type: string
                      status:
                        type: string
                      statusLivechat:
                        type: string
                      emails:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                            verified:
                              type: string
                      livechat:
                        type: object
                        properties:
                          maxNumberSimultaneousChat:
                            type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    user:
                      _id: SQafHvoFPuB57NmBD
                      username: john.doe
                      name: John Doe
                      status: offline
                      statusLivechat: available
                      emails:
                        - address: john.doe@test.com
                          verified: 'true'
                      livechat:
                        maxNumberSimultaneousChat: ''
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Users
    delete:
      summary: Remove Agent or Manager
      description: |-
        Remove a user as an agent or a manager.
        Permission required: `view-livechat-manager`

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |0.42.0            | Added       |
      operationId: delete-api-v1-livechat-users-type-_id
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: type
          in: path
          description: The type of user. The value can either be `agent` or `manager`.
          required: true
          schema:
            type: string
        - name: _id
          in: path
          description: The user ID.
          required: true
          schema:
            type: string
          example: SQafHvoFPuB57NmBD
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Users
  '/api/v1/livechat/agent.info/{rid}/{token}':
    get:
      summary: Get Agent Information
      description: |-
        Get the Livechat agent data according to the path variables. To get the `rid` and `token` values, call the <a href="https://developer.rocket.chat/apidocs/get-rooms" target="_blank">Get Rooms</a> endpoint to retrieve the details of all rooms.
      operationId: get-api-v1-livechat-agent
      parameters:
        - name: rid
          in: path
          description: The room ID.
          required: true
          schema:
            type: string
          example: zRAeTszXor8CCPceB
        - name: token
          in: path
          description: The visitor token.
          required: true
          schema:
            type: string
          example: iNKE8a6k6cjbqWhWd
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent:
                    type: object
                    properties:
                      _id:
                        type: string
                      emails:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                            verified:
                              type: boolean
                      status:
                        type: string
                      name:
                        type: string
                      username:
                        type: string
                      livechat:
                        type: object
                        properties:
                          maxNumberSimultaneousChat:
                            type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    agent:
                      _id: XycfA5CetCPuEjqxw
                      emails:
                        - address: agent@rocket.chat
                          verified: true
                      status: online
                      name: testAgent
                      username: test.agent
                      livechat:
                        maxNumberSimultaneousChat: '5'
                    success: true
      tags:
        - Omnichannel Agents
  '/api/v1/livechat/agent.next/{token}':
    get:
      summary: Get Next Agent Information
      description: |-
        Get information about the next available agent for an incoming conversation. This endpoint returns the available agents who have not been assigned to any chat yet. To get the `token` value, call the <a href="https://developer.rocket.chat/apidocs/get-rooms" target="_blank">Get Rooms</a> endpoint to retrieve the details of all rooms.
      operationId: get-api-v1-livechat-agent.next
      parameters:
        - name: token
          in: path
          description: The visitor token.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent:
                    type: object
                    properties:
                      _id:
                        type: string
                      emails:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                            verified:
                              type: boolean
                      name:
                        type: string
                      username:
                        type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    agent:
                      _id: 7Gm3PoFCJWTCJ68XR
                      emails:
                        - address: agent@rocket.chat
                          verified: true
                      name: Livechat Agent
                      username: livechat.agent
                    success: true
      tags:
        - Omnichannel Agents
  /api/v1/omnichannel/agents/available:
    get:
      summary: Get Available Agent Information
      description: |-
        Get information about the currently available agent. Permission required: `manage-agent-extension-association`
      operationId: get-api-v1-omnichannel-agents-available
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/query'
        - name: text
          in: query
          description: The response is the data that contains this text.
          schema:
            type: string
        - name: includeExtension
          in: query
          description: 'The voice channel extension associated with the agent. If you don''t enter any extension number, the endpoint returns a list of all agents who have not been assigned any extensions. For information about extensions, see <a href="https://docs.rocket.chat/docs/associate-agents-with-extensions-in-rocketchat" target="_blank">Associate agents with extensions in Rocket.Chat</a>.'
          schema:
            type: string
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent:
                    type: object
                    properties:
                      _id:
                        type: string
                      username:
                        type: string
                      name:
                        type: string
                      status:
                        type: string
                      statusLivechat:
                        type: string
                      emails:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                            verified:
                              type: boolean
                      livechat:
                        type: object
                        properties:
                          maxNumberSimultaneousChat:
                            type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                     agent:
                       _id: XycfA5CetCPuEjqxw
                       username: test.agent
                       name: agent123
                       status: online
                       statusLivechat: online
                       emails:
                         - address: agent123@rocket.chat
                           verified: true
                       livechat:
                         maxNumberSimultaneousChat: '5'
                     success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Agents
  /api/v1/omnichannel/contact:
    post:
      summary: Register or Update Omnichannel Contact
      description: |-
        > **Note:** This endpoint will be replaced. Refer to the new API documentations for [registering](https://developer.rocket.chat/apidocs/register-omnichannel-contacts) and [updating](https://developer.rocket.chat/apidocs/update-omnichannel-contact) contact for updated usage and features.

        Register a guest user as a new omnichannel contact.
        Permission required: `view-l-room`
      operationId: post-api-v1-omnichannel-contact
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: The contact token. Enter a random unique string as the value. Use this same token to update the contact.
                name:
                  type: string
                  description: The contact name.
                email:
                  type: string
                  description: The contact email.
                phone:
                  type: string
                  description: The contact phone number.
                contactManager:
                  type: object
                  description: The contact manager's user name.
                  properties:
                    username:
                      type: string
              required:
                - token
                - name
            examples:
              Example 1:
                value:
                  token: 434lxd7iss8yh8c4m80wh
                  name: Chris
                  email: chris@gmail.com
                  phone: '+91123456788'
                  contactManager:
                    username: kim.jane
      responses:
        '200':
          description: |-
            OK
            To update a contact, use the contact token created in the response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  contact:
                    type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    contact: 7ipCD6NDtkkRDCiNM
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'Match error: Missing key ''token'''
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Contacts
  /api/v1/omnichannel/contact.search:
    get:
      summary: Search Contacts
      description: |-
        > **Note:** This endpoint will be replaced. Refer to the [new API documentation](https://developer.rocket.chat/apidocs/search-omnichannel-contacts) for updated usage and features.

        Find contacts by name, email, phone number, or any custom field values stored in the database.
        Permission required: `view-l-room`.
        * Encode values having characters like @,+, /and * to avoid breaking the endpoint.
        * To find contacts using custom fields, use the custom query parameter. The custom query parameter must be encoded by <a href="https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams" target="_blank">URLSearchParams</a>.
        For example, to search contacts with premium subscription, the request is as follows:
        ```
        curl --location --globoff 'http://localhost:3000/api/v1/omnichannel/contact.search?custom={%20%22Subscription%22%3A%20%22premium%22%20}' \
        --header 'X-Auth-Token: b5BKhblglC5OU0AfB_Tl9dKmOb0zXUvWK-nhNT_aE8V' \
        --header 'X-User-Id: CkCPNcvsvCDfmWLqC'
        ```
      operationId: get-api-v1-contact.search
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: email
          in: query
          description: The contact's email address.
          schema:
            type: string
        - name: phone
          in: query
          description: The contact's phone number.
          schema:
            type: string
          example: '+1367895436'
        - name: custom
          in: query
          description: The defined custom fields.
          schema:
            type: string
          example: fieldName=value
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contact:
                    type: object
                    properties:
                      _id:
                        type: string
                      username:
                        type: string
                      status:
                        type: string
                      ts:
                        type: string
                      _updatedAt:
                        type: string
                      department:
                        type: string
                      name:
                        type: string
                      token:
                        type: string
                      visitorEmails:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                      lastChat:
                        type: object
                        properties:
                          _id:
                            type: string
                          ts:
                            type: string
                      livechatData:
                        type: object
                        properties:
                          hobby:
                            type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    contact:
                      _id: 62fbed6d337291dc9a68ff89
                      username: guest-16
                      status: online
                      ts: '2022-08-16T19:18:05.380Z'
                      _updatedAt: '2022-08-23T17:58:37.254Z'
                      department: MgzoccgEFHZ856i97
                      name: Kev
                      token: 969X86icKLRduGAKK
                      visitorEmails:
                        - address: email@rocket.chat
                      lastChat:
                        _id: CT5bru2WjJ2EsmGbH
                        ts: '2022-08-16T19:24:35.916Z'
                      livechatData:
                        hobby: gaming
                    success: true
        '400':
          $ref: '#/components/responses/permissionError'
        '401':
          $ref: '#/components/responses/authorizationError'
      tags:
        - Omnichannel Contacts
  /api/v1/omnichannel/contacts:
    post:
      summary: Register Omnichannel Contacts
      tags:
        - Omnichannel Contacts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contactId:
                    type: string
                  success:
                    type: boolean
              examples:
                Example 1:
                  value:
                    contactId: 674eeb4343725ce31dd9bdae
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''emails'' [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: error-contact-manager-not-found
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      operationId: post-api-v1-omnichannel-contacts
      description: |-
        Register a new omnichannel contact.
        Permission required: `create-livechat-contact`

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |6.1.0             | Added       |
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - phones
                - emails
              properties:
                name:
                  type: string
                  description: The contact's name.
                phones:
                  type: array
                  description: An array of the contact's phone number(s).
                  items:
                    type: string
                emails:
                  type: array
                  description: An array of the contact's email address(es).
                  items:
                    type: string
                customFields:
                  type: object
                  description: The custom fields.
                contactManager:
                  type: string
                  description: The contact manager's ID.
            examples:
              Example 1:
                value:
                  name: John
                  phones:
                    - '+123456789'
                  emails:
                    - email@example.com
                  customFileds: {}
                  contactManager: 67dfghjkjhgfdce31dd9bdae
              Example 2:
                value:
                  name: John
                  phones:
                    - '+123456789'
                  emails:
                    - email@example.com
  /api/v1/omnichannel/contacts.update:
    post:
      summary: Update Omnichannel Contact
      tags:
        - Omnichannel Contacts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contact:
                    type: object
                    properties:
                      _id:
                        type: string
                      createdAt:
                        type: string
                      name:
                        type: string
                      emails:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                      phones:
                        type: array
                        items:
                          type: object
                          properties:
                            phoneNumber:
                              type: string
                      channels:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            visitor:
                              type: object
                              properties:
                                visitorId:
                                  type: string
                                source:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                            blocked:
                              type: boolean
                            verified:
                              type: boolean
                            details:
                              type: object
                              properties:
                                type:
                                  type: string
                                destination:
                                  type: string
                            lastChat:
                              type: object
                              properties:
                                _id:
                                  type: string
                                ts:
                                  type: string
                      customFields:
                        type: object
                        properties: {}
                      unknown:
                        type: boolean
                      preRegistration:
                        type: boolean
                      _updatedAt:
                        type: string
                      conflictingFields:
                        type: array
                        items:
                          type: object
                          properties: {}
                      lastChat:
                        type: object
                        properties:
                          _id:
                            type: string
                          ts:
                            type: string
                      contactManager:
                        type: string
                  success:
                    type: boolean
              examples:
                Example 1:
                  value:
                    contact:
                      _id: 67487f45e98719b7908d0f29
                      createdAt: '2024-11-28T14:33:41.487Z'
                      name: John
                      emails:
                        - address: email@example.com
                      phones:
                        - phoneNumber: '+123383883838'
                      channels:
                        - name: widget
                          visitor:
                            visitorId: 67499b2243725ce31dd57fc7
                            source:
                              type: widget
                          blocked: false
                          verified: false
                          details:
                            type: widget
                            destination: example.com
                          lastChat:
                            _id: bC5x3zmBdgtmA4m3W
                            ts: '2024-11-29T10:44:55.016Z'
                      customFields: {}
                      unknown: false
                      preRegistration: false
                      _updatedAt: '2024-11-29T13:31:43.595Z'
                      conflictingFields: []
                      lastChat:
                        _id: bC5x3zmBdgtmA4m3W
                        ts: '2024-11-29T10:44:55.016Z'
                      contactManager: 9sLvmAcQk4EAGdi6e
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''emails'' [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: error-contact-manager-not-found
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      operationId: post-api-v1-omnichannel-contacts.update
      description: |-
        Update omnichannel contact. Permission required: `update-livechat-contact`.

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |6.1.0             | Added       |
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
            examples:
              Example 1:
                value:
                  contactId: 67487f45e98719b7908d0f29
                  name: John
                  phones:
                    - '+123456789'
                  emails:
                    - email@example.com
                  contactManager: 9sLvmAcQk4EAGdi6e
                  customFields: {}
                  wipeConflicts: false
                  
  /api/v1/omnichannel/contacts.conflicts:
    post:
      summary: Resolve Contact Conflicts
      tags:
        - Omnichannel Contacts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      _id:
                        type: string
                      createdAt:
                        type: string
                      name:
                        type: string
                      channels:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            visitor:
                              type: object
                              properties:
                                visitorId:
                                  type: string
                                source:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                            blocked:
                              type: boolean
                            verified:
                              type: boolean
                            details:
                              type: object
                              properties:
                                type:
                                  type: string
                                destination:
                                  type: string
                            lastChat:
                              type: object
                              properties:
                                _id:
                                  type: string
                                ts:
                                  type: string
                            field:
                              type: string
                            value:
                              type: string
                            verifiedAt:
                              type: string
                      customFields:
                        type: object
                        properties:
                          field1:
                            type: string
                          field2:
                            type: string
                      unknown:
                        type: boolean
                      preRegistration:
                        type: boolean
                      _updatedAt:
                        type: string
                      lastChat:
                        type: object
                        properties:
                          _id:
                            type: string
                          ts:
                            type: string
                      activity:
                        type: array
                        items:
                          type: string
                      emails:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                      phones:
                        type: array
                        items:
                          type: object
                          properties: {}
                      conflictingFields:
                        type: array
                        items:
                          type: object
                          properties: {}
                  success:
                    type: boolean
              examples:
                Example 1:
                  value:
                    result:
                      _id: 68341efdd387e3d7509267fb
                      createdAt: '2025-05-26T07:57:49.616Z'
                      name: Jane Doe
                      channels:
                        - name: widget
                          visitor:
                            visitorId: 68341ef9d387e3d7509267fa
                            source:
                              type: widget
                          blocked: false
                          verified: true
                          details:
                            type: widget
                            destination: writing-demo.dev.rocket.chat
                          lastChat:
                            _id: cz5uyBRyKPfoWHBat
                            ts: '2025-05-26T07:57:49.661Z'
                          field: email
                          value: jane.doe@email.com
                          verifiedAt: '2025-05-26T07:58:26.895Z'
                      customFields:
                        field1: field1
                        field2: field2
                      unknown: false
                      preRegistration: false
                      _updatedAt: '2025-05-26T11:35:31.241Z'
                      lastChat:
                        _id: cz5uyBRyKPfoWHBat
                        ts: '2025-05-26T07:57:49.661Z'
                      activity:
                        - 2025-05
                      emails:
                        - address: jane.doe@email.com
                      phones: []
                      conflictingFields: []
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''contactId'' [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: error-contact-has-no-conflicts
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      operationId: post-api-v1-omnichannel-contacts.conflicts
      description: |-
        Use this endpoint to resolve conflicts in a contact's details.
        
        This endpoint works only when a contact has conflicts.
        Conflicts can occur when a verified contact uses another channel to communicate with you. 
        For example, a contact's details (phone number, email address, custom fields) were saved when they 
        accessed the Livechat widget.
        Next time, they use WhatsApp and they provide different details.
        By default, the values are overwritten. 
        If you choose to flag conflicts, the conflicting detail will be displayed and you can decide the values to keep.
        You can flag conflicts in custom fields using the [custom fields endpoints](https://developer.rocket.chat/apidocs/send-custom-field-value) or the [Set Custom Field method](https://developer.rocket.chat/apidocs/livechatwidget-api)
        from the livechat widget API.

        Permission required: `update-livechat-contact`

        ### Changelog
        | Version      | Description | 
        | ---------------- | ------------|
        |7.7.0             | Added       |
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - contactId
              properties:
                contactId:
                  type: string
                  description: The contact's ID.
                name:
                  type: string
                  description: The contact's name.
                customFields:
                  type: object
                  description: You can enter custom fields if you have created any.
                  properties:
                    field1:
                      type: string
                    field2:
                      type: string
                contactManager:
                  type: string
                  description: The contact's assigned agent or manager.
                wipeConflicts:
                  type: boolean
                  description: 'To overwrite the old data with the new details, enter `true`.'
            examples:
              Example 1:
                value:
                  contactId: 68135a22e384b3ad127c7dbc
                  name: John Doe
                  customFields:
                    field1: field1
                    field2: field2
                  contactManager: test.agent
                  wipeConflicts: false

  /api/v1/omnichannel/contacts.get:
    get:
      summary: Get Omnichannel Contact
      tags:
        - Omnichannel Contacts
      description: |
        Retrieve a single omnichannel contact by its unique `contactId`.

        Required permission: `view-livechat-contact`.
      operationId: get-api-v1-omnichannel-contacts.get
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: contactId
          in: query
          description: The contact's unique ID.
          required: true
          schema:
            type: string
            example: 673c76df47a6c9b89dd263d8
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contact:
                    type: object
                    properties:
                      _id:
                        type: string
                      createdAt:
                        type: string
                      name:
                        type: string
                      channels:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            visitor:
                              type: object
                              properties:
                                visitorId:
                                  type: string
                                source:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                            blocked:
                              type: boolean
                            verified:
                              type: boolean
                            details:
                              type: object
                              properties:
                                type:
                                  type: string
                                destination:
                                  type: string
                            lastChat:
                              type: object
                              properties:
                                _id:
                                  type: string
                                ts:
                                  type: string
                            field:
                              type: string
                            value:
                              type: string
                            verifiedAt:
                              type: string
                      customFields:
                        type: object
                        properties:
                          social-number:
                            type: string
                          address:
                            type: string
                          zip-code:
                            type: string
                      unknown:
                        type: boolean
                      _updatedAt:
                        type: string
                      lastChat:
                        type: object
                        properties:
                          _id:
                            type: string
                          ts:
                            type: string
                      conflictingFields:
                        type: array
                        items:
                          type: object
                          properties: {}
                      emails:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                      contactManager:
                        type: string
                      phones:
                        type: array
                        items:
                          type: object
                          properties: {}
                  success:
                    type: boolean
              examples:
                Example:
                  value:
                    contact:
                      _id: 673c76df47a6c9b89dd263d8
                      createdAt: '2024-11-19T11:30:39.710Z'
                      name: John Doe
                      channels:
                        - name: widget
                          visitor:
                            visitorId: 673c76df1e2e6feb77939c70
                            source:
                              type: widget
                          blocked: false
                          verified: true
                          details:
                            type: widget
                            destination: example.com
                          lastChat:
                            _id: ixnGsLNT8rTL9eYY3
                            ts: '2024-11-19T11:30:39.724Z'
                          field: email
                          value: mail@example.com
                          verifiedAt: '2024-11-19T11:31:58.997Z'
                      customFields:
                        social-number: 123456-12345
                        address: P.O. Box 123 3456 Home Rd. Somewhere in the world
                        zip-code: 123456-099
                      unknown: false
                      _updatedAt: '2024-11-19T11:33:55.424Z'
                      lastChat:
                        _id: ixnGsLNT8rTL9eYY3
                        ts: '2024-11-19T11:30:39.724Z'
                      conflictingFields: []
                      emails:
                        - address: mail@example.com
                      contactManager: cbTgcixmLxYSdFmmZ
                      phones: []
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Required Parameter:
                  value:
                    success: false
                    error: |-
                      error: must have required property 'contactId' [invalid-params]
                    errorType: invalid-params
                Empty contact:
                  value:
                    success: false
                    error: |-
                      must pass "isNotEmpty" keyword validation [invalid-params]
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/omnichannel/contacts.search:
    get:
      summary: Search Omnichannel Contacts
      tags:
        - Omnichannel Contacts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contacts:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        createdAt:
                          type: string
                        name:
                          type: string
                        emails:
                          type: array
                          items:
                            type: object
                            properties:
                              address:
                                type: string
                        phones:
                          type: array
                          items:
                            type: object
                            properties: {}
                        channels:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              visitor:
                                type: object
                                properties:
                                  visitorId:
                                    type: string
                                  source:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                              blocked:
                                type: boolean
                              verified:
                                type: boolean
                              details:
                                type: object
                                properties:
                                  type:
                                    type: string
                                  destination:
                                    type: string
                              lastChat:
                                type: object
                                properties:
                                  _id:
                                    type: string
                                  ts:
                                    type: string
                        customFields:
                          type: object
                          properties:
                            social-number:
                              type: string
                        unknown:
                          type: boolean
                        _updatedAt:
                          type: string
                        conflictingFields:
                          type: array
                          items:
                            type: object
                            properties: {}
                        lastChat:
                          type: object
                          properties:
                            _id:
                              type: string
                            ts:
                              type: string
                        contactManager:
                          type: object
                          properties:
                            _id:
                              type: string
                            name:
                              type: string
                            username:
                              type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Example 1:
                  value:
                    contacts:
                      - _id: 673be1711e2e6feb77939a7b
                        createdAt: '2024-11-19T00:53:05.468Z'
                        name: Boris Doe
                        emails:
                          - address: boris@doe.com
                        phones: []
                        channels:
                          - name: widget
                            visitor:
                              visitorId: 673be2101e2e6feb77939a7f
                              source:
                                type: widget
                            blocked: false
                            verified: false
                            details:
                              type: widget
                              destination: example.com
                            lastChat:
                              _id: NMee5zFPv62N7RAhh
                              ts: '2024-11-19T00:55:46.723Z'
                        customFields:
                          social-number: 45600-00
                        unknown: false
                        _updatedAt: '2024-11-19T00:56:43.140Z'
                        conflictingFields: []
                        lastChat:
                          _id: NMee5zFPv62N7RAhh
                          ts: '2024-11-19T00:55:46.723Z'
                        contactManager:
                          _id: mAwAgmNndK7SHnQ89
                          name: Jane
                          username: Jane
                    count: 1
                    offset: 0
                    total: 1
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must be number [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: 'must be boolean [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      operationId: get-api-v1-omnichannel-contacts.search
      description: |-
        Retrieve a list of omnichannel contacts based on search criteria like name, email or phone number.
        Permission required: `view-livechat-contact`.

        **Note**: Ensure to URL-encode special characters such as `@`, `+`, `/`, and `*` in query parameters to prevent issues with the endpoint. For example, encode email addresses as `mail%40example.com` instead of `mail@example.com`.
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/sort'
        - schema:
            type: string
            example: John
          in: query
          name: searchText
          description: Text to search for in contact details.
        - schema:
            type: boolean
            example: false
          in: query
          name: unknown
          description: Filter by contact's unknown status.
  /api/v1/omnichannel/contacts.channels:
    get:
      summary: Get channels grouped by contact name
      tags:
        - Omnichannel Contacts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  channels:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        visitor:
                          type: object
                          properties:
                            visitorId:
                              type: string
                            source:
                              type: object
                              properties:
                                type:
                                  type: string
                        blocked:
                          type: boolean
                        verified:
                          type: boolean
                        details:
                          type: object
                          properties:
                            type:
                              type: string
                            destination:
                              type: string
                        lastChat:
                          type: object
                          properties:
                            _id:
                              type: string
                            ts:
                              type: string
                        field:
                          type: string
                        value:
                          type: string
                        verifiedAt:
                          type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    channels:
                      - name: widget
                        visitor:
                          visitorId: 234567987655weygcbg
                          source:
                            type: widget
                        blocked: false
                        verified: true
                        details:
                          type: widget
                          destination: example.com
                        lastChat:
                          _id: sdfgjhgfdfeG
                          ts: '2024-11-22T14:53:36.500Z'
                        field: email
                        value: example@mail.com
                        verifiedAt: '2024-11-22T14:55:21.354Z'
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Bad Request Example:
                  value:
                    success: false
                    error: 'must have required property ''contactId'' [invalid-params]'
                    errorType: invalid-params
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
              examples:
                'Unauthorized Example ':
                  value:
                    status: error
                    message: You must be logged in to do this.
      operationId: get-api-v1-omnichannel-contacts.channels
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - schema:
            type: string
            example: 673653b997f0fbcd657f0ebf
          in: query
          name: contactId
          required: true
          description: The contact's ID.
      description: |-
        Get channels grouped by contact name.
        Permission required: `view-livechat-contact`.

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |6.1.0             | Added       |
  /api/v1/omnichannel/contacts.history:
    get:
      summary: Get Contact History
      tags:
        - Omnichannel Contacts
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''contactId'' [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'User does not have the permissions required for this action [error-unauthorized]'
      operationId: get-api-v1-omnichannel-contacts.history
      description: |-
        Get contact's history. Permission required: `view-livechat-contact-history`.

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |6.1.0             | Added       |
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/sort'
        - schema:
            type: string
            example: 673653b997f0fbcd657f0ebf
          in: query
          name: contactId
          required: true
          description: The contact's ID.
        - schema:
            type: string
            example: widget
          in: query
          name: source
          description: The source of the contact's interaction with your organization.
  /api/v1/omnichannel/contacts.checkExistence:
    get:
      summary: Check Contacts Existence
      tags:
        - Omnichannel Contacts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
                  success:
                    type: boolean
              examples:
                Contact found:
                  value:
                    exists: true
                    success: true
                contact not found:
                  value:
                    exists: false
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Error from missing query parameters:
                  value:
                    success: false
                    error: |-
                      must have required property 'contactId'
                       must have required property 'email'
                       must have required property 'phone'
                       must match exactly one schema in oneOf [invalid-params]
                    errorType: invalid-params
      operationId: get-api-v1-omnichannel-contacts.checkExistence
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: contactId
          in: query
          description: The contact's unique ID.
          required: false
          schema:
            type: string
            example: 673c76df47a6c9b89dd263d8
        - schema:
            type: string
            example: example@mail.com
          in: query
          name: email
          description: The omnichannel contact's email address.
        - schema:
            type: string
            example: '01234567843'
          in: query
          name: phone
          description: Phone number of the omnichannel contact.
      description: |-
        This identifies whether a contact is already registered using a given query parameter such as `email` or `phone` or `contactId`.
        **Note**: You must provide only one of the parameters in the request.

        **Required permission**: `view-livechat-contact`.

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |7.2.0             | Added       |
  /api/v1/livechat/analytics/agent-overview:
    get:
      summary: Get Agent Analytics Overview
      description: |-
        Get the analytics overview for the agents in your workspace.
        Permission required: `view-livechat-manager`

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |6.4.0             | Added       |
      operationId: get-api-v1-livechat-analytics-agent-overview
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: name
          in: query
          description: |-
            The data that you want to get. The available options are:
            * `Total_conversations`
            * `Avg_chat_duration`
            * `Total_messages`
            * `Avg_first_response_time`
            * `Best_first_response_time`
            * `Avg_response_time`
            * `Avg_reaction_time`
          required: true
          schema:
            type: string
        - name: from
          in: query
          description: The start date
          required: true
          schema:
            type: string
          example: '2019-05-22T12:11:45.392Z'
        - name: to
          in: query
          description: The end date
          required: true
          schema:
            type: string
          example: '2023-05-22T12:11:45.392Z'
        - name: departmentId
          in: query
          description: The department ID to return results for.
          schema:
            type: string
          example: The department ID to return results for.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  head:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    head:
                      - name: Agent
                      - name: Total_messages
                    data:
                      - name: kim
                        value: '25'
                      - name: jane
                        value: '50'
                      - name: baek
                        value: '44'
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''name'' [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: 'must have required property ''from'' [invalid-params]'
                    errorType: invalid-params
                Example 3:
                  value:
                    success: false
                    error: 'must have required property ''to'' [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Statistics
  /api/v1/livechat/analytics/overview:
    get:
      summary: Get Analytics Overview
      description: |-
        Get the overview of omnichannel analytics in your workspace.
        Permission required: `view-livechat-manager`

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |6.4.0             | Added       |
      operationId: get-api-v1-livechat-analytics-overview
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: name
          in: query
          description: 'The data that you want to get. The available options are: `Productivity`, `Conversations`'
          required: true
          schema:
            type: string
          example: Conversations
        - name: from
          in: query
          description: The start date
          required: true
          schema:
            type: string
          example: '2019-05-22T12:11:45.392Z'
        - name: to
          in: query
          description: The end date
          required: true
          schema:
            type: string
          example: '2023-05-22T12:11:45.392Z'
        - name: departmentId
          in: query
          description: The department ID to return results for.
          schema:
            type: string
          example: jsi9w0oakusss
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    title:
                      type: string
                    value:
                      oneOf:
                        - type: string
                        - type: integer
              examples:
                Success Example:
                  value:
                    - title: Total_conversations
                      value: 1086
                    - title: Open_conversations
                      value: 119
                    - title: On_Hold_conversations
                      value: 1
                    - title: Total_messages
                      value: 4892
                    - title: Busiest_day
                      value: Tuesday
                    - title: Conversations_per_day
                      value: '0.74'
                    - title: Busiest_time
                      value: 7AM- 8AM
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''name'' [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: 'must have required property ''from'' [invalid-params]'
                    errorType: invalid-params
                Example 3:
                  value:
                    success: false
                    error: 'must have required property ''to'' [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Statistics
  /api/v1/livechat/config:
    get:
      tags:
        - Livechat
      summary: Get Livechat Configurations
      description: |-
        Get Livechat widget configuration information and additional visitor data.

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |0.70.0             | Added       |
      operationId: get-api-v1-livechat-config
      parameters:
        - name: token
          in: query
          description: The visitor token.
          schema:
            type: string
        - name: department
          in: query
          description: The visitor's department.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  config:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                      settings:
                        type: object
                        properties:
                          registrationForm:
                            type: boolean
                          allowSwitchingDepartments:
                            type: boolean
                          nameFieldRegistrationForm:
                            type: boolean
                          emailFieldRegistrationForm:
                            type: boolean
                          displayOfflineForm:
                            type: boolean
                          videoCall:
                            type: boolean
                          fileUpload:
                            type: boolean
                          language:
                            type: string
                          transcript:
                            type: boolean
                          historyMonitorType:
                            type: string
                          forceAcceptDataProcessingConsent:
                            type: boolean
                          showConnecting:
                            type: boolean
                          agentHiddenInfo:
                            type: boolean
                          clearLocalStorageWhenChatEnded:
                            type: boolean
                          limitTextLength:
                            type: boolean
                      theme:
                        type: object
                        properties:
                          title:
                            type: string
                          color:
                            type: string
                          offlineTitle:
                            type: string
                          offlineColor:
                            type: string
                          actionLinks:
                            type: array
                            items:
                              type: object
                              properties:
                                icon:
                                  type: string
                                i18nLabel:
                                  type: string
                                method_id:
                                  type: string
                                params:
                                  type: string
                      messages:
                        type: object
                        properties:
                          offlineMessage:
                            type: string
                          offlineSuccessMessage:
                            type: string
                          offlineUnavailableMessage:
                            type: string
                          conversationFinishedMessage:
                            type: string
                          transcriptMessage:
                            type: string
                      survey:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              type: string
                          values:
                            type: array
                            items:
                              type: string
                      departments:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            name:
                              type: string
                            showOnRegistration:
                              type: boolean
                            showOnOfflineForm:
                              type: boolean
                            departmentsAllowedToForward:
                              type: array
                              items:
                                type: string
                      online:
                        type: boolean
                      guest:
                        type: object
                        properties:
                          _id:
                            type: string
                          username:
                            type: string
                          token:
                            type: string
                          name:
                            type: string
                      room:
                        type: object
                        properties:
                          _id:
                            type: string
                          servedBy:
                            type: object
                            properties:
                              _id:
                                type: string
                              username:
                                type: string
                          open:
                            type: boolean
                      agent:
                        type: object
                        properties:
                          _id:
                            type: string
                          emails:
                            type: array
                            items:
                              type: object
                              properties:
                                address:
                                  type: string
                                verified:
                                  type: boolean
                          name:
                            type: string
                          username:
                            type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    config:
                      enabled: true
                      settings:
                        registrationForm: true
                        allowSwitchingDepartments: false
                        nameFieldRegistrationForm: true
                        emailFieldRegistrationForm: true
                        displayOfflineForm: true
                        videoCall: false
                        fileUpload: true
                        language: ''
                        transcript: false
                        historyMonitorType: url
                        forceAcceptDataProcessingConsent: false
                        showConnecting: true
                        agentHiddenInfo: false
                        clearLocalStorageWhenChatEnded: false
                        limitTextLength: false
                      theme:
                        title: Rocket.Chat
                        color: '#C1272D'
                        offlineTitle: Leave a message
                        offlineColor: '#666666'
                        actionLinks:
                          - icon: icon-videocam
                            i18nLabel: Accept
                            method_id: createLivechatCall
                            params: ''
                          - icon: icon-cancel
                            i18nLabel: Decline
                            method_id: denyLivechatCall
                            params: ''
                      messages:
                        offlineMessage: ''
                        offlineSuccessMessage: ''
                        offlineUnavailableMessage: ''
                        conversationFinishedMessage: ''
                        transcriptMessage: ''
                      survey:
                        items:
                          - satisfaction
                          - agentKnowledge
                          - agentResposiveness
                          - agentFriendliness
                        values:
                          - '1'
                          - '2'
                          - '3'
                          - '4'
                          - '5'
                      departments:
                        - _id: 652882d8a2f73c7460e18dc4
                          name: Support
                          showOnRegistration: false
                          showOnOfflineForm: false
                          departmentsAllowedToForward: []
                        - _id: 64181a0728384134ed600dcc
                          name: Lost
                          showOnRegistration: false
                          showOnOfflineForm: false
                          departmentsAllowedToForward: []
                      online: true
                      guest:
                        _id: 2KNu66RPCwxA4ncy7
                        username: guest-3
                        token: iNKE8a6k6cjbqWhWd
                        name: Livechat Visitor
                      room:
                        _id: zRAeTszXor8CCPceB
                        servedBy:
                          _id: 7Gm3PoFCJWTCJ68XR
                          username: livechat.agent
                        open: true
                      agent:
                        _id: 7Gm3PoFCJWTCJ68XR
                        emails:
                          - address: agent@rocket.chat
                            verified: true
                        name: Livechat Agent
                        username: livechat.agent
                    success: true
  /api/v1/livechat/rooms:
    get:
      summary: Get List of Omnichannel Rooms
      description: |-
        Retrieves a list of Omnichannel rooms. You can use the available query parameters to filter the response.
        At least one of the following permissions is required:
        * `view-livechat-rooms`
        * `view-l-room`

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |7.0.0             | Remove support of filtering by agent's username |
        |2.4.0             | Added support to the parameter `roomName`|
        |2.0.0             | Added       |
      operationId: get-api-v1-livechat-rooms
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: agents
          in: query
          description: A list of agent IDs.
          schema:
            type: array
            items:
              type: string
          example: '[''b32h3b2hhwb25d'']'
        - name: departmentId
          in: query
          description: The department ID. You can also enter multiple IDs as an array of string values.
          schema:
            type: string
          example: AkzpHAvZpdnuchw2a
        - name: open
          in: query
          description: If it should filter by open/closed rooms.
          schema:
            type: boolean
          example: true
        - name: createdAt
          in: query
          description: An object representing when the room was created (can also be filtered only with `start` or `end`).
          schema:
            type: string
          example: '{"start": "2018-01-26T00:11:22.345Z", "end": "2018-01-26T00:11:22.345Z"}'
        - name: closedAt
          in: query
          description: An object representing when the room was closed (can also be filtered only with `start` or `end`).
          schema:
            type: string
          example: '{"start": "2018-01-26T00:11:22.345Z", "end": "2018-01-26T00:11:22.345Z"}'
        - name: tags
          in: query
          description: A list of tags.
          schema:
            type: string
          example: '[''rocket'', ''chat'']'
        - name: customFields
          in: query
          description: An object with custom fields to be filtered (previously created and populated at custom fields endpoints)
          schema:
            type: string
          example: '{"docId": "aobEdbYhXfu5hkeqG"}'
        - name: roomName
          in: query
          description: The room's name.
          schema:
            type: string
          example: room-name
        - schema:
            type: boolean
          in: query
          name: onhold
          description: Whether you want to include rooms that are on hold or not.
        - schema:
            type: string
          in: query
          name: queued
          description: Whether you want to include queued rooms or not.
        - schema:
            type: array
            items:
              type: string
          example: '[''b32h3b2hhwb25d'', ''b32h3b2aaaa'']'
          in: query
          name: units
          description: Enter the unit IDs you want to include as an array of string values.
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  rooms:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        msgs:
                          type: integer
                        usersCount:
                          type: integer
                        lm:
                          type: string
                        fname:
                          type: string
                        t:
                          type: string
                        ts:
                          type: string
                        v:
                          type: object
                          properties:
                            _id:
                              type: string
                            username:
                              type: string
                            token:
                              type: string
                            status:
                              type: string
                        servedBy:
                          type: object
                          properties:
                            _id:
                              type: string
                            username:
                              type: string
                            ts:
                              type: string
                        cl:
                          type: boolean
                        open:
                          type: boolean
                        waitingResponse:
                          type: boolean
                        departmentId:
                          type: string
                        _updatedAt:
                          type: string
                        lastMessage:
                          type: object
                          properties:
                            _id:
                              type: string
                            rid:
                              type: string
                            msg:
                              type: string
                            token:
                              type: string
                            alias:
                              type: string
                            ts:
                              type: string
                            u:
                              type: object
                              properties:
                                _id:
                                  type: string
                                username:
                                  type: string
                                name:
                                  type: string
                            _updatedAt:
                              type: string
                            mentions:
                              type: array
                              items:
                                type: object
                            channels:
                              type: array
                              items:
                                type: object
                            newRoom:
                              type: boolean
                            showConnecting:
                              type: boolean
                        metrics:
                          type: object
                          properties:
                            v:
                              type: object
                              properties:
                                lq:
                                  type: string
                        livechatData:
                          type: object
                          properties:
                            docId:
                              type: string
                        tags:
                          type: array
                          items:
                            type: string
                        name:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    rooms:
                      - _id: 9dQMveZhqxiDgCM3B
                        msgs: 1
                        usersCount: 1
                        lm: '2019-08-09T20:18:02.350Z'
                        fname: Marcos Defendi
                        t: l
                        ts: '2019-08-09T20:18:02.108Z'
                        v:
                          _id: xh45w4y7oPW5SiMJu
                          username: guest-4
                          token: xn5hdkyptei11m07f3me
                          status: online
                        servedBy:
                          _id: 3kyWm8PsmwhC7xgwg
                          username: marcos
                          ts: '2019-08-09T20:18:02.109Z'
                        cl: false
                        open: true
                        waitingResponse: true
                        departmentId: xnmXQmytuvxp2TuSC
                        _updatedAt: '2019-08-09T20:19:34.856Z'
                        lastMessage:
                          _id: TBEz7zSCBaKsfyrzc
                          rid: 9dQMveZhqxiDgCM3B
                          msg: Hello
                          token: xn5hdkyptei11m07f3me
                          alias: Marcos Defendi
                          ts: '2019-08-09T20:18:02.350Z'
                          u:
                            _id: xh45w4y7oPW5SiMJu
                            username: guest-4
                            name: Marcos Defendi
                          _updatedAt: '2019-08-09T20:18:02.383Z'
                          mentions: []
                          channels: []
                          newRoom: false
                          showConnecting: false
                        metrics:
                          v:
                            lq: '2019-08-09T20:18:02.350Z'
                        livechatData:
                          docId: '0310584343112'
                        tags:
                          - rocket
                          - chat
                        name: Marcos Defendi
                    count: 1
                    offset: 1
                    total: 7
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Rooms
  /api/v1/livechat/room:
    get:
      summary: Get or Create Omnichannel Rooms
      description: 'Get the data of an existing room of a visitor. If a room doesn''t exist for the visitor, a new room is created.'
      operationId: get-api-v1-livechat-room
      parameters:
        - name: token
          in: query
          description: The visitor token.
          required: true
          schema:
            type: string
          example: iNKE8a6k6cjbqWhWd
        - name: rid
          in: query
          description: The room ID.
          schema:
            type: string
          example: kCJDd5peKiZnGJLPq
        - name: agentId
          in: query
          description: The agent ID.
          schema:
            type: string
          example: XycfA5CetCPuEjqxw
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  room:
                    type: object
                    properties:
                      _id:
                        type: string
                      fname:
                        type: string
                      t:
                        type: string
                      v:
                        type: object
                        properties:
                          _id:
                            type: string
                          username:
                            type: string
                          token:
                            type: string
                          status:
                            type: string
                          lastMessageTs:
                            type: string
                      departmentId:
                        type: string
                      default:
                        type: boolean
                      ro:
                        type: boolean
                      sysMes:
                        type: boolean
                      open:
                        type: boolean
                      msgs:
                        type: integer
                      ts:
                        type: string
                      _updatedAt:
                        type: string
                      lm:
                        type: string
                      customFields:
                        type: object
                        properties:
                          salesforceCrmContactId:
                            type: string
                      usersCount:
                        type: integer
                      cl:
                        type: boolean
                      departmentAncestors:
                        type: array
                        items:
                          type: string
                      lastMessage:
                        type: object
                        properties:
                          _id:
                            type: string
                          rid:
                            type: string
                          msg:
                            type: string
                          token:
                            type: string
                          alias:
                            type: string
                          ts:
                            type: string
                          u:
                            type: object
                            properties:
                              _id:
                                type: string
                              username:
                                type: string
                              name:
                                type: string
                          _updatedAt:
                            type: string
                          urls:
                            type: array
                            items:
                              type: object
                          mentions:
                            type: array
                            items:
                              type: object
                          channels:
                            type: array
                            items:
                              type: object
                          md:
                            type: array
                            items:
                              type: object
                              properties:
                                type:
                                  type: string
                                value:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                      value:
                                        type: string
                          newRoom:
                            type: boolean
                          showConnecting:
                            type: boolean
                      metrics:
                        type: object
                        properties:
                          reaction:
                            type: object
                            properties:
                              fd:
                                type: string
                              ft:
                                type: number
                              tt:
                                type: number
                          response:
                            type: object
                            properties:
                              avg:
                                type: number
                              fd:
                                type: string
                              ft:
                                type: number
                              total:
                                type: integer
                              tt:
                                type: number
                          v:
                            type: object
                            properties:
                              lq:
                                type: string
                          servedBy:
                            type: object
                            properties:
                              lr:
                                type: string
                      servedBy:
                        type: object
                        properties:
                          _id:
                            type: string
                          username:
                            type: string
                          ts:
                            type: string
                      waitingResponse:
                        type: boolean
                  newRoom:
                    type: boolean
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    room:
                      _id: kCJDd5peKiZnGJLPq
                      fname: Mary
                      t: l
                      v:
                        _id: 47Dajwh9DjpnTAugW
                        username: guest-165
                        token: 8s7e9ony6ctl27e1qf8kue
                        status: offline
                        lastMessageTs: '2021-07-09T20:20:58.755Z'
                      departmentId: CAJioQNAvLnYWTy8i
                      default: false
                      ro: false
                      sysMes: true
                      open: true
                      msgs: 7
                      ts: '2021-07-09T20:12:19.795Z'
                      _updatedAt: '2021-07-09T20:21:07.334Z'
                      lm: '2021-07-09T20:20:58.755Z'
                      customFields:
                        salesforceCrmContactId: 0032y000009mtOIAAY
                      usersCount: 2
                      cl: false
                      departmentAncestors:
                        - sriw2wmP2Zz2pPrre
                      lastMessage:
                        _id: SgrsSm3HNGrG5xTmk
                        rid: kCJDd5peKiZnGJLPq
                        msg: d
                        token: 8s7e9ony6ctl27e1qf8kue
                        alias: Mary
                        ts: '2021-07-09T20:20:58.755Z'
                        u:
                          _id: 47Dajwh9DjpnTAugW
                          username: guest-165
                          name: Mary
                        _updatedAt: '2021-07-09T20:20:58.896Z'
                        urls: []
                        mentions: []
                        channels: []
                        md:
                          - type: PARAGRAPH
                            value:
                              - type: PLAIN_TEXT
                                value: d
                        newRoom: false
                        showConnecting: true
                      metrics:
                        reaction:
                          fd: '2021-07-09T20:19:53.243Z'
                          ft: 23.821
                          tt: 24.006
                        response:
                          avg: 226.4365
                          fd: '2021-07-09T20:19:53.243Z'
                          ft: 452.688
                          total: 2
                          tt: 452.873
                        v:
                          lq: '2021-07-09T20:20:58.755Z'
                        servedBy:
                          lr: '2021-07-09T20:19:53.077Z'
                      servedBy:
                        _id: XycfA5CetCPuEjqxw
                        username: jane.doe
                        ts: '2021-07-09T20:19:29.422Z'
                      waitingResponse: true
                    newRoom: false
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'Match error: Missing key ''token'''
      tags:
        - Omnichannel Rooms
  /api/v1/livechat/room.close:
    post:
      summary: Close Omnichannel Room by Visitor
      description: 'If you are a visitor, use this endpoint to close the room.'
      operationId: post-api-v1-livechat-room.close
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  rid:
                    type: string
                  comment:
                    type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    rid: XFzMqgn33DcsQkpJp
                    comment: Closed by visitor
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''token'' [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: 'must have required property ''rid'' [invalid-params]'
                    errorType: invalid-params
      tags:
        - Omnichannel Rooms
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rid:
                  type: string
                  description: The room ID.
                  example: XFzMqgn33DcsQkpJp
                token:
                  type: string
                  description: The visitor token.
                  example: iNKE8a6k6cjbqWhWd
              required:
                - rid
                - token
            examples:
              Example 1:
                value:
                  rid: XFzMqgn33DcsQkpJp
                  token: iNKE8a6k6cjbqWhWd

  /api/v1/livechat/room.closeByUser:
    post:
      summary: Close Omnichannel Room
      description: 'If you are an Omnichannel user (agent, manager), use this endpoint to close the room.'
      operationId: post-api-v1-livechat-room.closeByUser
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Invalid parameter:
                  value:
                    success: false
                    error: 'must have required property ''rid'' [invalid-params]'
                    errorType: invalid-params
                Room already closed:
                  value:
                    success: false
                    error: error-room-already-closed
        '401':
          $ref: '#/components/responses/authorizationError'
      tags:
        - Omnichannel Rooms
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - rid
              properties:
                rid:
                  type: string
                  description: Enter the room ID.
                  example: 8ceKgWvo5qT5TrCRN
                comment:
                  type: string
                  description: Add a description for closing the room. It is required when the [`Request comment when closing conversation`](https://docs.rocket.chat/docs/omnichannel-admins-guide) setting is enabled.
                forceClose:
                  type: boolean
                  description: |-
                    Use this parameter to forcefully close a room. Before using this parameter, make sure to enable the [`Force Close Conversation API`](https://docs.rocket.chat/v1/docs/omnichannel-admins-guide#api) setting in Administration > Settings > Omnichannel > API. Exercise caution when using this parameter and reserve it for situations involving misconfigured rooms.
                tags:
                  type: array
                  description: 'Add [tags](https://docs.rocket.chat/docs/tags).'
                  items:
                    type: string
                generateTranscriptPdf:
                  type: boolean
                  description: Enter whether you want to generate a conversation transcript PDF.
                transcriptEmail:
                  type: object
                  properties:
                    sendToVisitor:
                      type: boolean
                      description: Enter whether you want to send the transcript to the visitor.
                    requestData:
                      type: object
                      properties:
                        email:
                          type: string
                          description: Enter the visitor's email ID to whom you want to send the transcript.
                        subject:
                          type: string
                          description: Enter a subject for the email.
            examples:
              Example:
                value:
                  rid: 8ceKgWvo5qT5TrCRN
                  comment: close via API
                  tags:
                    - abc
                    - abc
                  transcriptEmail:
                    sendToVisitor: true
                    requestData:
                      email: test@example.com
                      subject: transcript

  /api/v1/livechat/room.join:
    get:
      summary: Join Omnichannel Room
      description: |-
        Call this endpoint to join an Omnichannel room.
        Permission required: `view-l-room`
      operationId: get-api-v1-livechat-room.join
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: roomId
          in: query
          description: The room ID that you want to join.
          required: true
          schema:
            type: string
          example: gMMeBpWyLeowCrzBv
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''roomId'' [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: error-invalid-room
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Rooms
  /api/v1/livechat/room.saveInfo:
    post:
      summary: Update Omnichannel Room
      description: |-
        Edit an Omnichannel room. Update the topic, tags, and other details.
        Permission required: `view-l-room`

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |5.3.0            | Added       |
      operationId: post-api-v1-livechat-room.saveInfo
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                guestData:
                  type: object
                  properties:
                    _id:
                      type: string
                      description: The guest ID.
                    name:
                      type: string
                      description: The name  of the guest.
                    email:
                      type: string
                      description: The email of the guest.
                    phone:
                      type: string
                      description: 'The contact of the guest. '
                    livechatData:
                      type: object
                      description: Custom fields information.
                  required:
                    - _id
                roomData:
                  type: object
                  properties:
                    _id:
                      type: string
                      description: The room ID.
                    topic:
                      type: string
                      description: The topic of the room.
                    tags:
                      type: array
                      description: An array of tags to be associated with the room.
                      items:
                        type: string
                    priorityId:
                      type: string
                      description: The priority ID of the room.
                    slaId:
                      type: string
                      description: The SLA priority ID of the room.
                    livechatData:
                      type: object
                      description: Custom fields information.
                  required:
                    - _id
            examples:
              Example 1:
                value:
                  guestData:
                    _id: rbAXPnMktTFbNpwtJ
                  roomData:
                    _id: nf52k8bpJ8y7oHmwk
                    topic: Hmm
                    tags:
                      - testtags
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''guestData'' [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: 'must have required property ''roomData'' [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Rooms

  /api/v1/livechat/room.transfer:
    post:
      summary: Transfer Omnichannel Room
      description: |-
        > This endpoint has been deprecated in the 7.0.0 <a href="https://github.com/RocketChat/Rocket.Chat/releases" target="_blank">release</a>. Use the <a href="https://developer.rocket.chat/apidocs/forward-livechat-room" target="_blank">Forward Livechat Room</a> endpoint instead.

        Transfer an omnichannel conversation to another department.
      operationId: post-api-v1-livechat-room.transfer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rid:
                  type: string
                  description: The room _id.
                token:
                  type: string
                  description: The visitor token.
                department:
                  type: string
                  description: 'The new department. To get the department ID, call the <a href="https://developer.rocket.chat/apidocs/get-livechat-configurations" target="_blank">Get Livechat Configurations</a> endpoint. Note that the endpoint only returns public departments.'
              required:
                - rid
                - token
                - department
            examples:
              Example 1:
                value:
                  rid: XFzMqgn33DcsQkpJp
                  token: iNKE8a6k6cjbqWhWd
                  department: wXpPLofkffqWAwDNF
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  room:
                    type: object
                    properties:
                      _id:
                        type: string
                      servedBy:
                        type: object
                        properties:
                          _id:
                            type: string
                          username:
                            type: string
                      open:
                        type: boolean
                      departmentId:
                        type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    room:
                      _id: XFzMqgn33DcsQkpJp
                      servedBy:
                        _id: wiyTfFKXr5GhgRu9A
                        username: livechat.agent
                      open: true
                      departmentId: wXpPLofkffqWAwDNF
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''rid'' [invalid-params]'
                    errorType: invalid-params
      deprecated: true
      tags:
        - Omnichannel Rooms
  /api/v1/livechat/room.forward:
    post:
      summary: Forward Omnichannel Room
      description: The chatbot agent forwards the chat to a human agent.
      operationId: post-api-v1-livechat-room.forward
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                roomId:
                  type: string
                  description: The room ID.
                userId:
                  type: string
                  description: The new agent ID.
                departmentId:
                  type: string
                  description: The new department ID.
              required:
                - roomId
            examples:
              Example 1:
                value:
                  roomId: XFzMqgn33DcsQkpJp
                  userId: iNKE8a6k6cjbqWhWd
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''roomId'' [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
      tags:
        - Omnichannel Rooms
  '/api/v1/livechat/transfer.history/{rid}':
    get:
      summary: Get Department Transfer History
      description: |-
        Retrieve the conversation transfer history from one department to another.
        Permission required: `view-livechat-rooms`
      operationId: 'get-api-v1-livechat-transfer.history-:rid'
      parameters:
        - name: rid
          in: path
          description: The room ID
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  history:
                    type: array
                    items:
                      type: object
                  count:
                    type: integer
                  offset:
                    type: integer
                  data:
                    type: object
                    properties:
                      history:
                        type: array
                        items:
                          type: object
                          properties:
                            transferredBy:
                              type: object
                              properties:
                                _id:
                                  type: string
                                username:
                                  type: string
                                name:
                                  type: string
                                type:
                                  type: string
                            ts:
                              type: string
                            scope:
                              type: string
                            previousDepartment:
                              type: string
                            nextDepartment:
                              type: object
                              properties:
                                _id:
                                  type: string
                                name:
                                  type: string
                      count:
                        type: integer
                      offset:
                        type: integer
                      total:
                        type: integer
                      success:
                        type: boolean
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    history:
                      - {}
                    count: 0
                    offset: 0
                    data:
                      history:
                        - transferredBy:
                            _id: string
                            username: string
                            name: string
                            type: string
                          ts: string
                          scope: string
                          previousDepartment: string
                          nextDepartment:
                            _id: string
                            name: string
                      count: 0
                      offset: 0
                      total: 0
                      success: true
                    total: 0
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Rooms
  /api/v1/livechat/room.survey:
    post:
      summary: Survey Omnichannel Room
      description: Provide feedback on an Omnichannel room.
      operationId: post-api-v1-livechat-room.survey
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rid:
                  type: string
                  description: The room ID.
                token:
                  type: string
                  description: The visitor token.
                data:
                  type: array
                  description: An array of object with `name` and `value` to provide feedback.
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      value:
                        type: string
              required:
                - rid
                - token
                - data
            examples:
              Example 1:
                value:
                  rid: gMMeBpWyLeowCrzBv
                  token: d4a8338e5a7d98b6750b4f839431b34a3f4813b2c43f7d89597948f21f607bb4
                  data:
                    - name: additionalFeedback
                      value: Thankszzzzz
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  rid:
                    type: string
                  data:
                    type: object
                    properties:
                      additionalFeedback:
                        type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    rid: gMMeBpWyLeowCrzBv
                    data:
                      additionalFeedback: Thankszzzzz
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''token'' [invalid-params]'
                    errorType: invalid-params
      tags:
        - Omnichannel Rooms
  /api/v1/livechat/room.onHold:
    post:
      summary: Put Omnichannel Room on Hold
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Put an active conversation on hold.
      operationId: post-api-v1-livechat-room.onHold
      parameters:
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/AuthToken'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                roomId:
                  type: string
                  description: Active Omnichannel room ID.
              required:
                - roomId
            examples:
              Example 1:
                value:
                  roomId: Z7223PfNPwH7ihQPh
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''roomId'' [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
      tags:
        - Omnichannel Rooms
  '/api/v1/livechat/upload/{rid}':
    post:
      summary: Upload Files to Room
      description: Upload files to an Omnichannel room.
      operationId: post-api-v1-livechat-upload
      parameters:
        - name: x-visitor-token
          in: header
          description: The visitor token
          required: true
          schema:
            type: string
          example: iNKE8a6k6cjyPyOyI
        - name: rid
          in: path
          description: The room ID.
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  description: The file to be uploaded.
                description:
                  type: string
                  description: The file description.
              required:
                - file
            examples:
              Example 1:
                value:
                  file: /home/rodriq/Desktop/cod.png
                  description: image file description here
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  rid:
                    type: string
                  msg:
                    type: string
                  token:
                    type: string
                  file:
                    type: object
                    properties:
                      _id:
                        type: string
                      name:
                        type: string
                      type:
                        type: string
                  attachments:
                    type: array
                    items:
                      type: object
                      properties:
                        ts:
                          type: string
                        title:
                          type: string
                        title_link:
                          type: string
                        title_link_download:
                          type: boolean
                        image_dimensions:
                          type: object
                          properties:
                            width:
                              type: integer
                            height:
                              type: integer
                        image_preview:
                          type: string
                        image_url:
                          type: string
                        image_type:
                          type: string
                        image_size:
                          type: integer
                        type:
                          type: string
                        description:
                          type: string
                        descriptionMd:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                              value:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                    value:
                                      type: string
                  alias:
                    type: string
                  ts:
                    type: string
                  u:
                    type: object
                    properties:
                      _id:
                        type: string
                      username:
                        type: string
                      name:
                        type: string
                  _updatedAt:
                    type: string
                  urls:
                    type: array
                    items:
                      type: object
                  mentions:
                    type: array
                    items:
                      type: object
                  channels:
                    type: array
                    items:
                      type: object
                  newRoom:
                    type: boolean
                  showConnecting:
                    type: boolean
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    _id: CeswhhAKTQMsnEbc8
                    rid: cbjQCtywHbuTYzmLx
                    msg: ''
                    token: 932a1c3019aeeaa9b687bb04b979d
                    file:
                      _id: uredcLri4GdehDQnD
                      name: globe.png
                      type: image/png
                    attachments:
                      - ts: '1970-01-01T00:00:00.000Z'
                        title: globe.png
                        title_link: /file-upload/uredcLri4GdehDQnD/globe.png
                        title_link_download: true
                        image_dimensions:
                          width: 1746
                          height: 1624
                        image_preview: /9j/2wBDAAYEBQYFBAYGzMKHSdwCQf2EhyBetVviuOVGrulRJ9NsHpQPgQH/9k=
                        image_url: /file-upload/uredcLri4GdehDQnD/globe.png
                        image_type: image/png
                        image_size: 562975
                        type: file
                        description: Here is the file
                        descriptionMd:
                          - type: PARAGRAPH
                            value:
                              - type: PLAIN_TEXT
                                value: Here is the file
                    alias: James
                    ts: '2023-03-21T16:21:39.131Z'
                    u:
                      _id: 6410766605957d866e0fcf37
                      username: guest-3
                      name: James
                    _updatedAt: '2023-03-21T16:21:39.173Z'
                    urls: []
                    mentions: []
                    channels: []
                    newRoom: false
                    showConnecting: false
                    success: true
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: unauthorized
      tags:
        - Omnichannel Rooms
  '/api/v1/livechat/room/{rid}/priority':
    post:
      summary: Set Omnichannel Room Priority
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Set the priority of an Omnichannel room.<br>

        Permission required: `view-l-room`

        ### Changelog
        | Version | Description  |
        | ------- |--------------|
        | 6.0.0  | Added         |
      operationId: post-api-v1-livechat-room-rid-priority
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: rid
          in: path
          description: The room ID.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                priorityId:
                  type: string
                  description: The ID of the priority to set.
              required:
                - priorityId
            examples:
              Example 1:
                value:
                  priorityId: 64007cc2fa0ed7dd905092e6
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''priorityId'' [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Rooms
    delete:
      summary: Remove Omnichannel Room Priority
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Remove the priority set to an Omnichannel room.<br>

        Permission required: `view-l-room`

        ### Changelog
        | Version | Description  |
        | ------- |--------------|
        | 6.0.0  | Added         |
      operationId: delete-api-v1-livechat-room-rid-priority
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: rid
          in: path
          description: The room ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Rooms
  /api/v1/livechat/department:
    get:
      summary: Get List of Departments
      description: |-
        Get a list of the departments.
        At least one of the following permissions is required:
        * `view-livechat-departments`
        * `view-l-room`

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |2.2.0             | Added support to pagination    |
        |0.42.0            | Added       |
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: text
          in: query
          description: Filter the result with any text.
          schema:
            type: string
          example: fin
        - name: enabled
          in: query
          description: Filter the result to only show enabled departments. The value can be boolean true or false.
          schema:
            type: boolean
          example: true
        - name: showArchived
          in: query
          description: You can include the archived departments in the result. The value can be boolean true or false.
          schema:
            type: boolean
          example: true
        - name: onlyMyDepartments
          in: query
          description: This parameter is for users with managers or admin roles. It only displays the departments that you are an agent of.
          schema:
            type: boolean
          example: true
        - name: excludeDepartmentId
          in: query
          description: The department ID that you want to exclude from the result.
          schema:
            type: string
          example: 64181a0728384134ed600dcc
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  departments:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        enabled:
                          type: boolean
                        name:
                          type: string
                        description:
                          type: string
                        showOnRegistration:
                          type: boolean
                        showOnOfflineForm:
                          type: boolean
                        requestTagBeforeClosingChat:
                          type: boolean
                        email:
                          type: string
                        chatClosingTags:
                          type: array
                          items:
                            type: object
                        offlineMessageChannelName:
                          type: string
                        abandonedRoomsCloseCustomMessage:
                          type: string
                        waitingQueueMessage:
                          type: string
                        departmentsAllowedToForward:
                          type: array
                          items:
                            type: object
                        fallbackForwardDepartment:
                          type: string
                        _updatedAt:
                          type: string
                        numAgents:
                          type: integer
                        type:
                          type: string
                        businessHourId:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    departments:
                      - _id: 64181a0728384134ed600dcc
                        enabled: true
                        name: Support
                        description: ''
                        showOnRegistration: false
                        showOnOfflineForm: false
                        requestTagBeforeClosingChat: false
                        email: kim.jane@rocketchat.com
                        chatClosingTags: []
                        offlineMessageChannelName: Livestream
                        abandonedRoomsCloseCustomMessage: ''
                        waitingQueueMessage: ''
                        departmentsAllowedToForward: []
                        fallbackForwardDepartment: ''
                        _updatedAt: '2023-10-13T13:03:58.406Z'
                        numAgents: 4
                        type: d
                      - _id: 649230d479f5c6e276cf4a12
                        enabled: false
                        name: Finance
                        description: ''
                        showOnRegistration: false
                        showOnOfflineForm: false
                        requestTagBeforeClosingChat: false
                        email: test@gmail.com
                        chatClosingTags: []
                        offlineMessageChannelName: ''
                        abandonedRoomsCloseCustomMessage: ''
                        waitingQueueMessage: ''
                        departmentsAllowedToForward: []
                        fallbackForwardDepartment: ''
                        type: d
                        _updatedAt: '2023-10-13T13:03:58.426Z'
                        numAgents: 3
                        businessHourId: 650dc9cfa2f73c7460e18bea
                    count: 2
                    offset: 0
                    total: 2
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Departments
      operationId: get-api-v1-livechat-department
    post:
      summary: Register New Department
      description: |-
        Permission required: `manage-livechat-departments`

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |1.0.0           | New fields for department updated |
        |0.42.0          | Added       |
      operationId: post-api-v1-livechat-department
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - department
              properties:
                department:
                  type: object
                  description: The object which takes the department details.
                  required:
                    - enabled
                    - showOnRegistration
                    - name
                    - email
                    - showOnOfflineForm
                  properties:
                    enabled:
                      type: boolean
                      description: Whether you want to enable the department. The value can be boolean true or false.
                    showOnRegistration:
                      type: boolean
                      description: |-
                        You can let visitors choose the department they want to talk to. The option will appear to your customer in the Livechat widget. The value can be boolean true or false.
                    name:
                      type: string
                      description: The name of the department you are creating.
                    email:
                      type: string
                      description: The email ID associated with the department.
                    showOnOfflineForm:
                      type: boolean
                      description: |-
                        If you want your department to be displayed during off-business hours. The value can be boolean true or false.
                    description:
                      type: string
                      description: A description of your department.
                agents:
                  type: array
                  description: The object with the agent details that you want to add to the department.
                  items:
                    type: object
                    properties:
                      agentId:
                        type: string
                        description: The agent ID that you want to assign to the department.
                      count:
                        type: integer
                        description: |-
                          The number of chats served by the agent. Enter a value if you want to reset the stored value.
                          Note: This field is used by the routing algorithm to determine the agents that have served the least number of chats and assign new chats to them.
                      order:
                        type: integer
                        description: The order in which the agents are assigned to chats.
                departmentUnit:
                  type: object
                  description: |-
                    Assign the department to a [unit](https://docs.rocket.chat/docs/units).

                    **Guidelines for assigning departments to a unit**
                    - Permission required: `manage-livechat-departments`
                    - If the user making the request is a [monitor](https://docs.rocket.chat/docs/monitors), they must be a supervisor of the specified unit.
                    - If the user is not a monitor (such as an admin or [manager](https://docs.rocket.chat/docs/managers)), any unit can be associated to the department
                  properties:
                    _id:
                      type: string
                      description: The id of the unit to assign the department.
            examples:
              Example:
                value:
                  department:
                    enabled: false
                    showOnRegistration: true
                    name: new from api
                    email: john@doe.com
                    showOnOfflineForm: true
                  agents:
                    - agentId: SQafHvoFPuB57NmBD
                  departmentUnit:
                    _id: 66f46dc59a0766c20712d698
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  department:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                      name:
                        type: string
                      numAgents:
                        type: integer
                      showOnRegistration:
                        type: boolean
                      _updatedAt:
                        type: string
                      _id:
                        type: string
                  agents:
                    type: array
                    items:
                      type: object
                      properties:
                        agentId:
                          type: string
                        count:
                          type: integer
                        order:
                          type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    department:
                      enabled: false
                      name: new from api
                      numAgents: 1
                      showOnRegistration: true
                      _updatedAt: '2016-12-13T17:22:19.109Z'
                      _id: iTfLCX3qqwKgf5uqg
                    agents:
                      - agentId: SQafHvoFPuB57NmBD
                        count: 0
                        order: 0
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''department'' [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: 'must have required property ''name'' [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Departments
  '/api/v1/livechat/department/{_id}':
    get:
      summary: Get Department Information
      description: |-
        Get information about a specific department using the department ID.
        At least one of the following permissions is required:
        * `view-livechat-departments`
        * `view-l-room`

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |2.2.0             | Added `includeAgents` query parameter|
        |0.42.0            | Added       |
      operationId: 'get-api-v1-livechat-department-:_id'
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: includeAgents
          in: query
          description: 'If agents should be included in the result. By default, the value is true and the list of agents is returned. The agents field will only be returned if the user has the `view-livechat-departments` permission.'
          schema:
            type: boolean
          example: true
        - name: _id
          in: path
          description: The department ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  department:
                    type: object
                    properties:
                      _id:
                        type: string
                      enabled:
                        type: boolean
                      name:
                        type: string
                      description:
                        type: string
                      numAgents:
                        type: integer
                      showOnRegistration:
                        type: boolean
                      _updatedAt:
                        type: string
                  agents:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        agentId:
                          type: string
                        departmentId:
                          type: string
                        username:
                          type: string
                        count:
                          type: integer
                        order:
                          type: integer
                        _updatedAt:
                          type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    department:
                      _id: iTfLCX3qqwKgf5uqg
                      enabled: false
                      name: new from api
                      description: creating a department
                      numAgents: 1
                      showOnRegistration: true
                      _updatedAt: '2016-12-13T17:22:19.109Z'
                    agents:
                      - _id: DDjZbhTF74n3NBuWK
                        agentId: SQafHvoFPuB57NmBD
                        departmentId: iTfLCX3qqwKgf5uqg
                        username: john.doe
                        count: 0
                        order: 0
                        _updatedAt: '2016-12-13T17:22:19.169Z'
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Departments
    put:
      summary: Update Department
      description: |-
        Update the details of a specific department.
        Permissions required:
        * `manage-livechat-departments`
        * To add agents: `add-livechat-department-agents`

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |0.42.0            | Added       |
      operationId: put-api-v1-livechat-department-_id
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: _id
          in: path
          description: The department ID.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                department:
                  type: object
                  description: The object which takes the department details.
                  properties:
                    enabled:
                      type: boolean
                      description: Whether you want to enable the department. The value can be boolean true or false.
                    showOnRegistration:
                      type: boolean
                      description: |-
                        You can let visitors choose the department they want to talk to. The option will appear to your customer in the Livechat widget.
                        The value can be boolean true or false.
                    name:
                      type: string
                      description: The name of the department you are creating.
                    email:
                      type: string
                      description: The email ID associated with the department.
                    showOnOfflineForm:
                      type: boolean
                      description: |-
                        If you want your department to be displayed during off-business hours. The value can be boolean true or false.
                    description:
                      type: string
                      description: A description of your department.
                  required:
                    - enabled
                    - showOnRegistration
                    - name
                    - email
                    - showOnOfflineForm
                agents:
                  type: array
                  items:
                    type: object
                    properties:
                      agentId:
                        type: string
                        description: The agent ID that you want to assign to the department.
                      count:
                        type: string
                      order:
                        type: string
                departmentUnit:
                  type: object
                  description: |-
                    Assign the department to a [unit](https://docs.rocket.chat/docs/units).

                    **Guidelines for assigning departments to a unit**
                    - Permission required: `manage-livechat-departments`
                    - If the user making the request is a [monitor](https://docs.rocket.chat/docs/monitors), they must be a supervisor of the specified unit.
                    - If the user is not a monitor (such as an admin or [manager](https://docs.rocket.chat/docs/managers)), any unit can be associated to the department.
                    - Providing an empty object `({})`, undefined `({ _id: undefined})`, or null `({ _id: null})` for this parameter removes the department from the associated unit.
                  properties:
                    _id:
                      type: string
                      description: The id of the unit to assign the department.
              required:
                - department
            examples:
              Example:
                value:
                  department:
                    enabled: true
                    name: new from api - live
                    showOnRegistration: true
                    email: test@test.com
                    showOnOfflineForm: false
                  agents:
                    - agentId: SQafHvoFPuB57NmBD
                      username: john.doe
                  departmentUnit:
                    _id: 66f46dc59a0766c20712d698
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  department:
                    type: object
                    properties:
                      _id:
                        type: string
                      enabled:
                        type: boolean
                      name:
                        type: string
                      description:
                        type: string
                      numAgents:
                        type: integer
                      showOnRegistration:
                        type: boolean
                      _updatedAt:
                        type: string
                  agents:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        agentId:
                          type: string
                        departmentId:
                          type: string
                        username:
                          type: string
                        count:
                          type: integer
                        order:
                          type: integer
                        _updatedAt:
                          type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    department:
                      _id: iTfLCX3qqwKgf5uqg
                      enabled: true
                      name: new from api - live
                      description: update api
                      numAgents: 1
                      showOnRegistration: true
                      _updatedAt: '2016-12-13T17:30:02.643Z'
                    agents:
                      - _id: DDjZbhTF74n3NBuWK
                        agentId: SQafHvoFPuB57NmBD
                        departmentId: iTfLCX3qqwKgf5uqg
                        username: john.doe
                        count: 0
                        order: 0
                        _updatedAt: '2016-12-13T17:30:02.656Z'
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''department'' [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: 'must have required property ''name'' [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Departments
    delete:
      summary: Remove Department
      description: |-
        At least one of the following permissions is required:
        * `manage-livechat-departments`
        * `remove-livechat-department`

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |0.42.0            | Added       |
      operationId: delete-api-v1-livechat-department-_id
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: _id
          in: path
          description: The department ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Departments
  /api/v1/livechat/department.autocomplete:
    get:
      summary: Autocomplete Department
      description: |-
        Autocomplete the department name.
        At least one of the following permissions is required:
          * `view-livechat-departments`
          * `view-l-room`
      operationId: get-api-v1-livechat-department.autocomplete
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: selector
          in: query
          description: Enter the exceptions or the conditions that you want to search for.
          required: true
          schema:
            type: string
          example: '{"exceptions" : ["${dep1._id}"], "conditions": {"enabled": true}, "term":"test"}'
        - name: onlyMyDepartments
          in: query
          description: Only displays the departments that you are assigned to. The value can be boolean `true` or `false`
          schema:
            type: boolean
        - name: showArchived
          in: query
          description: The result includes archived departments. The value can be Boolean `true` or `false`.
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              examples:
                Example 1:
                  value:
                    departments:
                      - _id: qajzu7WaBRoQBpq6Z
                        enabled: true
                        name: Brazil
                        description: ''
                        numAgents: 3
                        showOnRegistration: false
                        showOnOfflineForm: true
                        email: brazil@rocketchat.com
                        _updatedAt: '2021-06-23T06:02:02.931Z'
                        chatClosingTags: []
                        maxNumberSimultaneousChat: ''
                        requestTagBeforeClosingChat: false
                        type: d
                        waitingQueueMessage: ''
                        abandonedRoomsCloseCustomMessage: ''
                        departmentsAllowedToForward: ''
                        offlineMessageChannelName: ''
                        visitorInactivityTimeoutInSeconds: ''
                        ancestors: []
                      - _id: NhnC9dBwFonZqSQ5m
                        enabled: true
                        name: CSM and Support
                        description: ''
                        showOnRegistration: true
                        showOnOfflineForm: false
                        requestTagBeforeClosingChat: false
                        email: br@rocketchat.com
                        chatClosingTags: []
                        offlineMessageChannelName: ''
                        abandonedRoomsCloseCustomMessage: ''
                        waitingQueueMessage: ''
                        departmentsAllowedToForward:
                          - CAJioQNAvLnYWTy8i
                          - Z2KWYBJQFR7AzfmQL
                        _updatedAt: '2021-07-12T18:05:53.257Z'
                        numAgents: 4
                    count: 2
                    offset: 0
                    total: 2
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: The 'selector' param is required
        '401':
          $ref: '#/components/responses/authorizationError'
      tags:
        - Omnichannel Departments
  '/api/v1/livechat/department/{_id}/agents':
    get:
      summary: Get Agents of Department
      description: |-
        Get the agents of a specific department. At least one of the following permissions is required:
          * `view-livechat-departments`
          * `view-l-room`
      operationId: 'get-api-v1-livechat-department-:_id-agents'
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: _id
          in: path
          description: The department ID.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  agents:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        agentId:
                          type: string
                        departmentId:
                          type: string
                        _updatedAt:
                          type: string
                        count:
                          type: integer
                        departmentEnabled:
                          type: boolean
                        order:
                          type: integer
                        username:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    agents:
                      - _id: SWugWdHhcTX4G2NAP
                        agentId: rocket.cat
                        departmentId: BiqbQav59HD2LzXEY
                        _updatedAt: '2021-07-14T14:58:01.013Z'
                        count: 17
                        departmentEnabled: true
                        order: 0
                        username: rocket.cat
                    count: 1
                    offset: 0
                    total: 1
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Departments
    post:
      summary: Update Agents of Department
      description: |-
        Update the agents of a specific department. At least one of the following permissions is required:
          * `add-livechat-department-agents`
          * `manage-livechat-departments`
      operationId: post-api-v1-livechat-department-_id-agents
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: _id
          in: path
          description: The department ID.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                upsert:
                  type: array
                  description: The object that contains the agent details.
                  items:
                    type: object
                    properties:
                      agentId:
                        type: string
                        description: The agent ID.
                      username:
                        type: string
                        description: The user name of the agent.
                    required:
                      - agentId
                      - username
                remove:
                  type: array
                  description: The object containing the details of the agent that you want to remove.
                  items:
                    type: object
              required:
                - upsert
                - remove
            examples:
              Example 1:
                value:
                  upsert:
                    - agentId: 6529401b024dde05d3f1cd85
                      username: kim
                  remove: []
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Departments
  /api/v1/livechat/department.listByIds:
    get:
      summary: Get Departments by ID
      description: |-
        Get a list of departments by department IDs. At least one of the following permissions is required:
          * `view-livechat-departments`
          * `view-l-room`
      operationId: get-api-v1-livechat-department.listByIds
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: ids
          in: query
          description: The department ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  departments:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        enabled:
                          type: boolean
                        name:
                          type: string
                        description:
                          type: string
                        showOnRegistration:
                          type: boolean
                        showOnOfflineForm:
                          type: boolean
                        requestTagBeforeClosingChat:
                          type: boolean
                        email:
                          type: string
                        chatClosingTags:
                          type: array
                          items:
                            type: object
                        offlineMessageChannelName:
                          type: string
                        abandonedRoomsCloseCustomMessage:
                          type: string
                        waitingQueueMessage:
                          type: string
                        departmentsAllowedToForward:
                          type: string
                        _updatedAt:
                          type: string
                        numAgents:
                          type: integer
                        ancestors:
                          type: array
                          items:
                            type: string
                        maxNumberSimultaneousChat:
                          type: string
                        type:
                          type: string
                        visitorInactivityTimeoutInSeconds:
                          type: string
                        parentId:
                          type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    departments:
                      - _id: 4LCeYmCHHnQ3EDBgf
                        enabled: true
                        name: Chatbot Sales
                        description: ''
                        showOnRegistration: false
                        showOnOfflineForm: false
                        requestTagBeforeClosingChat: false
                        email: chatbotSales@g.c
                        chatClosingTags: []
                        offlineMessageChannelName: ''
                        abandonedRoomsCloseCustomMessage: ''
                        waitingQueueMessage: ''
                        departmentsAllowedToForward: ''
                        _updatedAt: '2021-07-15T15:11:16.856Z'
                        numAgents: 4
                        ancestors: []
                      - _id: CAJioQNAvLnYWTy8i
                        enabled: true
                        name: Support
                        description: ''
                        showOnRegistration: true
                        showOnOfflineForm: true
                        requestTagBeforeClosingChat: false
                        email: mary@rocket.chat
                        maxNumberSimultaneousChat: ''
                        waitingQueueMessage: ''
                        type: d
                        numAgents: 28
                        _updatedAt: '2021-07-21T23:54:35.574Z'
                        ancestors:
                          - sriw2wmP2Zz2pPrre
                        chatClosingTags: []
                        abandonedRoomsCloseCustomMessage: ''
                        departmentsAllowedToForward: ''
                        offlineMessageChannelName: ''
                        visitorInactivityTimeoutInSeconds: '10'
                        parentId: sriw2wmP2Zz2pPrre
                      - _id: mHcx4rbi7htAmCCR5
                        enabled: true
                        name: Chatbot Support
                        description: ''
                        showOnRegistration: false
                        showOnOfflineForm: false
                        requestTagBeforeClosingChat: false
                        email: chatbotSupport@g.c
                        chatClosingTags: []
                        offlineMessageChannelName: ''
                        abandonedRoomsCloseCustomMessage: ''
                        waitingQueueMessage: ''
                        departmentsAllowedToForward: ''
                        _updatedAt: '2021-06-28T22:10:01.371Z'
                        numAgents: 3
                        ancestors:
                          - sriw2wmP2Zz2pPrre
                        parentId: sriw2wmP2Zz2pPrre
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: The 'ids' param is required
                Example 2:
                  value:
                    success: false
                    error: The 'ids' param must be an array
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Departments
  /api/v1/livechat/analytics/departments/amount-of-chats:
    get:
      summary: Get Number of Chats
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Gives the number of chat rooms by department. Permission required: `view-livechat-manager`
      operationId: get-api-v1-livechat-analytics-departments-amount-of-chats
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  departments:
                    type: array
                    items:
                      type: object
                      properties:
                        rooms:
                          type: integer
                        _id:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    departments:
                      - rooms: 13
                        _id: NJaMpSvZFZ4NAXm3j
                      - rooms: 10
                        _id: 8MGLTfaKLCbE9CqR8
                      - rooms: 4
                        _id: MpAiP9PMyHwBcmALx
                      - rooms: 51
                        _id: Yi87Ju7eTHiZQ7CJt
                    count: 4
                    offset: 0
                    total: 11
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Departments
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - schema:
            type: boolean
          in: query
          name: answered
          description: Whether the chats are answered or not.
        - schema:
            type: string
            example: 64181a0728384134ed600dcc
          in: query
          name: departmentId
          description: Enter the department ID for which you want the number of chats.
  /api/v1/livechat/analytics/departments/average-service-time:
    get:
      summary: Get Average Service Time
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Returns average service time (in seconds) for chats by department. Permission required: `view-livechat-manager`
      operationId: get-api-v1-livechat-analytics-departments-average-service-time
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - schema:
            type: string
          example: CAJioQNAvLnYWTy8i
          in: query
          name: departmentId
          description: Enter the department ID for which you want the average service time.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  departments:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        averageServiceTimeInSeconds:
                          type: integer
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    departments:
                      - _id: sLYp3ry7CRizaP3rJ
                        averageServiceTimeInSeconds: 2941
                      - _id: BiqbQav59HD2LzXEY
                        averageServiceTimeInSeconds: 5831
                      - _id: 8MGLTfaKLCbE9CqR8
                        averageServiceTimeInSeconds: 1635
                    count: 8
                    offset: 0
                    total: 8
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Departments
  /api/v1/livechat/analytics/departments/average-chat-duration-time:
    get:
      summary: Get Average Chat Duration
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Returns the average chat duration of each department. Permission required: `view-livechat-manager`
      operationId: get-api-v1-livechat-analytics-departments-average-chat-duration-time
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - schema:
            type: string
          example: 64cf6c6feb07a913d946f34d
          in: query
          name: departmentId
          description: Enter the department ID for which you want the average chat duration.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  departments:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        averageChatDurationTimeInSeconds:
                          type: integer
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    departments:
                      - _id: 64cf6c6feb07a913d946f34d
                        averageChatDurationTimeInSeconds: 3314449
                      - _id: 64181a0728384134ed600dcc
                        averageChatDurationTimeInSeconds: 174296
                    count: 2
                    offset: 0
                    total: 3
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Departments
  /api/v1/livechat/analytics/departments/total-service-time:
    get:
      summary: Get Total Service Time
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Gives the total service time (in seconds) by department. Permission required: `view-livechat-manager`
      operationId: get-api-v1-livechat-analytics-departments-total-service-time
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - schema:
            type: string
          example: 64cf6c6feb07a913d946f34d
          in: query
          name: departmentId
          description: Enter the department ID for which you want the total service time.
      responses:
        '206':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  departments:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        chats:
                          type: integer
                        serviceTimeDuration:
                          type: integer
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    departments:
                      - _id: 64181a0728384134ed600dcc
                        chats: 5
                        serviceTimeDuration: 268684
                      - _id: 64cf6c6feb07a913d946f34d
                        chats: 1
                        serviceTimeDuration: 2461
                    count: 2
                    offset: 0
                    total: 2
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Departments
  /api/v1/livechat/analytics/departments/average-waiting-time:
    get:
      summary: Get Average Waiting Time
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Gives the average visitor waiting time (in seconds) by department. Permission required: `view-livechat-manager`
      operationId: get-api-v1-livechat-analytics-departments-average-waiting-time
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - schema:
            type: string
          example: 64181a0728384134ed600dcc
          in: query
          name: departmentId
          description: Enter the department ID for which you want the average waiting time.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  departments:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        averageWaitingTimeInSeconds:
                          type: integer
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    departments:
                      - _id: 64181a0728384134ed600dcc
                        averageWaitingTimeInSeconds: 199
                      - _id: 649230d479f5c6e276cf4a12
                        averageWaitingTimeInSeconds: 521
                    count: 2
                    offset: 0
                    total: 2
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Departments
  /api/v1/livechat/analytics/departments/total-transferred-chats:
    get:
      summary: Get Total Transferred Chats
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Gives the total number of transferred chats by department. Permission required: `view-livechat-manager`
      operationId: get-api-v1-livechat-analytics-departments-total-transferred-chats
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - schema:
            type: string
          example: GgYvrkAF63aeQmsh4
          in: query
          name: departmentId
          description: Enter the department ID for which you want the total transferred chats.
      responses:
        '206':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  departments:
                    type: array
                    items:
                      type: object
                      properties:
                        numberOfTransferredRooms:
                          type: integer
                        _id:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    departments:
                      - numberOfTransferredRooms: 6
                        _id: BiqbQav59HD2LzXEY
                      - numberOfTransferredRooms: 27
                        _id: CAJioQNAvLnYWTy8i
                      - numberOfTransferredRooms: 1
                        _id: 8MGLTfaKLCbE9CqR8
                    count: 3
                    offset: 0
                    total: 3
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Departments
  /api/v1/livechat/analytics/departments/total-abandoned-chats:
    get:
      summary: Get Total Abandoned Chats
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Gives the total number of abandoned chats (rooms) by department. Permission required: `view-livechat-manager`
      operationId: get-api-v1-livechat-analytics-departments-total-abandoned-chats
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - schema:
            type: string
          example: 4LCeYmCHHnQ3EDBgf
          in: query
          name: departmentId
          description: Enter the department ID for which you want the total abandoned chats.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  departments:
                    type: array
                    items:
                      type: object
                      properties:
                        abandonedRooms:
                          type: integer
                        _id:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    departments:
                      - abandonedRooms: 3
                        _id: 4LCeYmCHHnQ3EDBgf
                      - abandonedRooms: 1
                        _id: 8MGLTfaKLCbE9CqR8
                      - abandonedRooms: 1
                        _id: Yi87Ju7eTHiZQ7CJt
                      - abandonedRooms: 77
                        _id: GgYvrkAF63aeQmsh4
                      - abandonedRooms: 12
                        _id: sLYp3ry7CRizaP3rJ
                      - abandonedRooms: 12
                        _id: BiqbQav59HD2LzXEY
                      - abandonedRooms: 6
                        _id: CAJioQNAvLnYWTy8i
                    count: 7
                    offset: 0
                    total: 7
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Departments
  /api/v1/livechat/analytics/departments/percentage-abandoned-chats:
    get:
      summary: Get Percentage of Abandoned Chats
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Gives the percentage of abandoned chats per department. Permission required: `view-livechat-manager`
      operationId: get-api-v1-livechat-analytics-departments-percentage-abandoned-chats
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - schema:
            type: string
          example: 64cf6c6feb07a913d946f34d
          in: query
          name: departmentId
          description: Enter the department ID for which you want the percentage of abandoned chats.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  departments:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        percentageOfAbandonedChats:
                          type: integer
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    departments:
                      - _id: 64cf6c6feb07a913d946f34d
                        percentageOfAbandonedChats: 0
                      - _id: 649230d479f5c6e276cf4a12
                        percentageOfAbandonedChats: 0
                      - _id: 64181a0728384134ed600dcc
                        percentageOfAbandonedChats: 11
                    count: 3
                    offset: 0
                    total: 3
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Departments
  '/api/v1/livechat/departments.available-by-unit/{unitId}':
    get:
      summary: Get Available Departments by Unit ID
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>


        Gives departments that have not been associated to another unit yet. This endpoint has been renamed to <a href="https://developer.rocket.chat/apidocs/get-departments-by-unit-id-1" target="_blank">Get Available Departments by Unit Id</a> from Rocket.Chat 5.0.


      operationId: 'get-api-v1-livechat-departments.available-by-unit-:unitId'
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: unitId
          in: path
          description: The unit ID.
          required: true
          schema:
            type: string
            example: sriw2wmP2Zz2pPrre
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  departments:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        enabled:
                          type: boolean
                        name:
                          type: string
                        description:
                          type: string
                        showOnRegistration:
                          type: boolean
                        showOnOfflineForm:
                          type: boolean
                        requestTagBeforeClosingChat:
                          type: boolean
                        email:
                          type: string
                        maxNumberSimultaneousChat:
                          type: string
                        waitingQueueMessage:
                          type: string
                        type:
                          type: string
                        numAgents:
                          type: integer
                        _updatedAt:
                          type: string
                        ancestors:
                          type: array
                          items:
                            type: string
                        chatClosingTags:
                          type: array
                          items:
                            type: string
                        abandonedRoomsCloseCustomMessage:
                          type: string
                        departmentsAllowedToForward:
                          type: array
                          items:
                            type: string
                        offlineMessageChannelName:
                          type: string
                        visitorInactivityTimeoutInSeconds:
                          type: string
                        parentId:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
                x-examples:
                  Example 1:
                    departments:
                      - _id: Yi87Ju7eTHiZQ7CJt
                        enabled: false
                        name: Customer Success
                        description: TEST
                        showOnRegistration: false
                        showOnOfflineForm: true
                        requestTagBeforeClosingChat: false
                        email: ''
                        maxNumberSimultaneousChat: ''
                        waitingQueueMessage: TEST
                        type: d
                        numAgents: 13
                        _updatedAt: '2021-06-28T22:10:01.360Z'
                        ancestors:
                          - sriw2wmP2Zz2pPrre
                        chatClosingTags: []
                        abandonedRoomsCloseCustomMessage: ''
                        departmentsAllowedToForward: ''
                        offlineMessageChannelName: ''
                        visitorInactivityTimeoutInSeconds: ''
                        parentId: sriw2wmP2Zz2pPrre
                      - _id: fqjhjfuygXBRsPBJf
                        enabled: true
                        name: Marketing Support
                        description: Issues about merchandising actions
                        numAgents: 3
                        showOnRegistration: false
                        showOnOfflineForm: false
                        email: ''
                        _updatedAt: '2021-06-15T21:12:35.469Z'
                        maxNumberSimultaneousChat: ''
                        requestTagBeforeClosingChat: false
                        type: d
                        waitingQueueMessage: ''
                        chatClosingTags: []
                        abandonedRoomsCloseCustomMessage: ''
                        departmentsAllowedToForward: ''
                        offlineMessageChannelName: ''
                        visitorInactivityTimeoutInSeconds: ''
                      - _id: qajzu7WaBRoQBpq6Z
                        enabled: true
                        name: Brazil
                        description: ''
                        numAgents: 3
                        showOnRegistration: false
                        showOnOfflineForm: true
                        email: ''
                        _updatedAt: '2021-06-23T06:02:02.931Z'
                        chatClosingTags: []
                        maxNumberSimultaneousChat: ''
                        requestTagBeforeClosingChat: false
                        type: d
                        waitingQueueMessage: ''
                        abandonedRoomsCloseCustomMessage: ''
                        departmentsAllowedToForward: ''
                        offlineMessageChannelName: ''
                        visitorInactivityTimeoutInSeconds: ''
                        ancestors: []
                      - _id: GgYvrkAF63aeQmsh4
                        enabled: true
                        name: Sales
                        description: 'For sales purposes only, we are happy to help'
                        showOnRegistration: true
                        showOnOfflineForm: true
                        requestTagBeforeClosingChat: true
                        email: ''
                        chatClosingTags:
                          - Junk lead
                          - Valuable lead
                        maxNumberSimultaneousChat: ''
                        waitingQueueMessage: ''
                        type: d
                        numAgents: 20
                        _updatedAt: '2021-06-27T05:52:01.775Z'
                        abandonedRoomsCloseCustomMessage: ''
                        departmentsAllowedToForward:
                          - qajzu7WaBRoQBpq6Z
                          - CAJioQNAvLnYWTy8i
                        visitorInactivityTimeoutInSeconds: ''
                        offlineMessageChannelName: ''
                        ancestors: []
                    count: 4
                    offset: 0
                    total: 4
                    success: true
      deprecated: true
      tags:
        - Omnichannel Departments
  '/api/v1/livechat/departments.by-unit/{unitid}':
    get:
      summary: Get Departments by Unit ID
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        <p>Gives departments included in a specific unit ID. This endpoint has been renamed to <a href="https://developer.rocket.chat/apidocs/get-departments-by-unit-id-1" target="_blank">Get Departments by Unit ID</a> as from Rocket.Chat 5.0


      operationId: 'get-api-v1-livechat-departments.by-unit-:unitId'
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - name: unitid
          in: path
          description: The unit ID.
          required: true
          schema:
            type: string
            example: sriw2wmP2Zz2pPrre
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  departments:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        enabled:
                          type: boolean
                        name:
                          type: string
                        description:
                          type: string
                        showOnRegistration:
                          type: boolean
                        showOnOfflineForm:
                          type: boolean
                        requestTagBeforeClosingChat:
                          type: boolean
                        email:
                          type: string
                        maxNumberSimultaneousChat:
                          type: string
                        waitingQueueMessage:
                          type: string
                        type:
                          type: string
                        numAgents:
                          type: integer
                        _updatedAt:
                          type: string
                        ancestors:
                          type: array
                          items:
                            type: string
                        chatClosingTags:
                          type: array
                          items:
                            type: object
                        abandonedRoomsCloseCustomMessage:
                          type: string
                        departmentsAllowedToForward:
                          type: array
                          items:
                            type: string
                        offlineMessageChannelName:
                          type: string
                        visitorInactivityTimeoutInSeconds:
                          type: string
                        parentId:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
                x-examples:
                  Example 1:
                    departments:
                      - _id: Yi87Ju7eTHiZQ7CJt
                        enabled: false
                        name: Customer Success
                        description: TEST
                        showOnRegistration: false
                        showOnOfflineForm: true
                        requestTagBeforeClosingChat: false
                        email: roger.sab@test.comt
                        maxNumberSimultaneousChat: ''
                        waitingQueueMessage: TEST
                        type: d
                        numAgents: 13
                        _updatedAt: '2021-06-28T22:10:01.360Z'
                        ancestors:
                          - sriw2wmP2Zz2pPrre
                        chatClosingTags: []
                        abandonedRoomsCloseCustomMessage: ''
                        departmentsAllowedToForward: ''
                        offlineMessageChannelName: ''
                        visitorInactivityTimeoutInSeconds: ''
                        parentId: sriw2wmP2Zz2pPrre
                      - _id: CAJioQNAvLnYWTy8i
                        enabled: true
                        name: Support
                        description: ''
                        showOnRegistration: true
                        showOnOfflineForm: true
                        requestTagBeforeClosingChat: false
                        email: maryna.vdov@test.com
                        maxNumberSimultaneousChat: ''
                        waitingQueueMessage: ''
                        type: d
                        numAgents: 24
                        _updatedAt: '2021-06-28T22:10:01.373Z'
                        ancestors:
                          - sriw2wmP2Zz2pPrre
                        chatClosingTags: []
                        abandonedRoomsCloseCustomMessage: ''
                        departmentsAllowedToForward: ''
                        offlineMessageChannelName: ''
                        visitorInactivityTimeoutInSeconds: '10'
                        parentId: sriw2wmP2Zz2pPrre
                      - _id: Z2KWYBJQFR7AzfmQL
                        enabled: false
                        name: Support Email
                        description: testing emails
                        showOnRegistration: false
                        showOnOfflineForm: false
                        requestTagBeforeClosingChat: false
                        email: karina.aes@hotmail.com
                        chatClosingTags: []
                        offlineMessageChannelName: ''
                        maxNumberSimultaneousChat: ''
                        visitorInactivityTimeoutInSeconds: '30'
                        abandonedRoomsCloseCustomMessage: ''
                        waitingQueueMessage: ''
                        departmentsAllowedToForward:
                          - qajzu7WaBRoQBpq6Z
                          - 4LCeYmCHHnQ3EDBgf
                        type: d
                        numAgents: 5
                        _updatedAt: '2021-06-28T22:10:01.347Z'
                        ancestors:
                          - sriw2wmP2Zz2pPrre
                        parentId: sriw2wmP2Zz2pPrre
                      - _id: mHcx4rbi7htAmCCR5
                        enabled: true
                        name: Chatbot Support
                        description: ''
                        showOnRegistration: false
                        showOnOfflineForm: false
                        requestTagBeforeClosingChat: false
                        email: chatbotSupport@g.c
                        chatClosingTags: []
                        offlineMessageChannelName: ''
                        abandonedRoomsCloseCustomMessage: ''
                        waitingQueueMessage: ''
                        departmentsAllowedToForward: ''
                        _updatedAt: '2021-06-28T22:10:01.371Z'
                        numAgents: 3
                        ancestors:
                          - sriw2wmP2Zz2pPrre
                        parentId: sriw2wmP2Zz2pPrre
                    count: 4
                    offset: 0
                    total: 4
                    success: true
      deprecated: true
      tags:
        - Omnichannel Departments
  /api/v1/livechat/custom.field:
    post:
      summary: Send Custom Field Value
      description: |-
        Send the value for a custom field.

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |0.70.0            | Added       |
      operationId: post-api-v1-livechat-custom.field
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: The visitor token.
                key:
                  type: string
                  description: The custom field.
                value:
                  type: string
                  description: The value you want to set for the custom field.
                overwrite:
                  type: boolean
                  description: Overwrite the value of the custom field.
              required:
                - token
                - key
                - value
                - overwrite
            examples:
              Example 1:
                value:
                  token: iNKE8a6k6cjbqWhWd
                  key: address
                  value: Rocket.Chat Avenue
                  overwrite: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  field:
                    type: object
                    properties:
                      key:
                        type: string
                      value:
                        type: string
                      overwrite:
                        type: boolean
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    field:
                      key: address
                      value: Rocket.Chat Avenue
                      overwrite: true
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''token'' [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: 'must have required property ''key'' [invalid-params]'
                    errorType: invalid-params
      tags:
        - Omnichannel Custom Fields
  /api/v1/livechat/custom.fields:
    post:
      summary: Send Array of Custom Field Values
      description: |-
        Send an array of values for different custom fields.

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |0.70.0            | Added       |
      operationId: post-api-v1-livechat-custom.fields
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: The visitor token.
                customFields:
                  type: array
                  description: The object in which you must enter the custom field information.
                  items:
                    type: object
                    properties:
                      key:
                        type: string
                        description: The custom field.
                      value:
                        type: string
                        description: The value you want to set for the custom field.
                      overwrite:
                        type: boolean
                        description: Overwrite the value of the custom field.
                    required:
                      - key
                      - value
                      - overwrite
              required:
                - token
                - customFields
            examples:
              Example 1:
                value:
                  token: iNKE8a6k6cjbqWhWd
                  customFields:
                    - key: address
                      value: Rocket.Chat Avenue
                      overwrite: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  fields:
                    type: array
                    items:
                      type: object
                      properties:
                        Key:
                          type: string
                        value:
                          type: string
                        overwrite:
                          type: boolean
                  success:
                    type: boolean
                x-examples:
              examples:
                Success Example:
                  value:
                    fields:
                      - Key: address
                        value: Rocket.Chat Avenue
                        overwrite: true
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''token'' [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: 'must have required property ''key'' [invalid-params]'
                    errorType: invalid-params
      tags:
        - Omnichannel Custom Fields
  /api/v1/livechat/custom-fields:
    get:
      summary: Get Omnichannel Custom Fields
      description: |-
        Get a list of the Omnichannel custom fields.
        Permission required: `view-l-room`

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |2.2.0             | Added       |
      operationId: get-api-v1-livechat-custom-fields
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/sort'
        - schema:
            type: string
          in: query
          name: text
          description: Enter the text to filter the search result.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  customFields:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        label:
                          type: string
                        scope:
                          type: string
                        visibility:
                          type: string
                        regexp:
                          type: string
                        searchable:
                          type: boolean
                        type:
                          type: string
                        required:
                          type: boolean
                        defaultValue:
                          type: string
                        options:
                          type: string
                        public:
                          type: boolean
                        _updatedAt:
                          type: string
                        id:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    customFields:
                      - _id: address
                        label: address
                        scope: visitor
                        visibility: visible
                        regexp: ''
                        searchable: true
                        type: input
                        required: false
                        defaultValue: ''
                        options: ''
                        public: true
                        _updatedAt: '2023-10-30T13:43:09.408Z'
                        id: address
                    count: 1
                    offset: 0
                    total: 1
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Custom Fields
  '/api/v1/livechat/custom-fields/{_id}':
    get:
      summary: Get Custom Field Information
      description: |-
        Get details about a specific custom field.
        Permission required: `view-l-room`

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |2.4.0             | Added       |
      operationId: get-api-v1-livechat-custom-fields-_id
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: _id
          in: path
          description: The custom field ID.
          required: true
          schema:
            type: string
          example: address
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  customField:
                    type: object
                    properties:
                      _id:
                        type: string
                      label:
                        type: string
                      scope:
                        type: string
                      visibility:
                        type: string
                      regexp:
                        type: string
                      searchable:
                        type: boolean
                      type:
                        type: string
                      required:
                        type: boolean
                      defaultValue:
                        type: string
                      options:
                        type: string
                      public:
                        type: boolean
                      _updatedAt:
                        type: string
                      id:
                        type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    customField:
                      _id: address
                      label: address
                      scope: visitor
                      visibility: visible
                      regexp: ''
                      searchable: true
                      type: input
                      required: false
                      defaultValue: ''
                      options: ''
                      public: true
                      _updatedAt: '2023-10-30T13:43:09.408Z'
                      id: address
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Custom Fields
  /api/v1/livechat/webrtc.call:
    get:
      tags:
        - Livechat Audio Video Calls
      summary: Start Call
      description: |-
        **Note**: WebRTC is no longer supported with Omnichannel Livechat audio/video calls.
        - To configure audio/video calls, see <a href="https://docs.rocket.chat/docs/omnichannel-videoaudio-call-configuration" target="_blank">Omnichannel Video/Audio Call Configuration</a>.
        - To configure voice channel, see <a href="https://docs.rocket.chat/docs/rocketchat-conference-call" target="_blank">Voice Channel</a>. <br>
        - To start a WebRTC audio/video call in a room requires the `view-l-room` <a href="https://docs.rocket.chat/docs/permissions" target="_blank">permission</a>.
      operationId: get-api-v1-livechat-webrtc.call
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: rid
          in: query
          description: The room ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  videoCall:
                    type: object
                    properties:
                      rid:
                        type: string
                      provider:
                        type: string
                      callStatus:
                        type: string
                  success:
                    type: boolean
                x-examples:
                  Example 1:
                    videoCall:
                      rid: 123abcxyz123
                      provider: webrtc
                      callStatus: ringing
                    success: true
  '/api/v1/livechat/webrtc.call/{callId}':
    put:
      summary: Update Call Status
      description: |-
        **Note**: WebRTC is no longer supported with Omnichannel Livechat audio/video calls.
        - To configure audio/video calls, see <a href="https://docs.rocket.chat/docs/omnichannel-videoaudio-call-configuration" target="_blank">Omnichannel Video/Audio Call Configuration</a>.
        - To configure voice channel, see <a href="https://docs.rocket.chat/docs/rocketchat-conference-call" target="_blank">Voice Channel</a>. <br>
        - To  Update the call status of an existing WebRTC audio/video call requires the `view-l-room` <a href="https://docs.rocket.chat/docs/permissions" target="_blank">permission</a>.
      operationId: 'put-api-v1-livechat-webrtc.call-:callId'
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: callId
          in: path
          description: The call message _id.
          required: true
          schema:
            type: string
          example: zRAeTszXor8CCPceB
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rid:
                  type: string
                  description: The room ID.
                status:
                  type: string
                  description: The status of the call.
              required:
                - rid
                - status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  success:
                    type: boolean
                x-examples:
                  Example 1:
                    status: ended
                    success: true
      tags:
        - Livechat Audio Video Calls
  /api/v1/livechat/page.visited:
    post:
      tags:
        - Livechat Page Visited
      summary: Send Visitor Navigation History
      description: Retrieves the pages your visitor navigated on your website.
      operationId: post-api-v1-livechat-page.visited
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - pageInfo
              properties:
                token:
                  type: string
                  description: Enter the visitor token.
                rid:
                  type: string
                  description: Enter the room ID.
                pageInfo:
                  type: object
                  required:
                    - change
                    - title
                    - location
                  description: Enter the page information
                  properties:
                    change:
                      type: string
                    title:
                      type: string
                    location:
                      type: object
                      required:
                        - href
                      properties:
                        href:
                          type: string
            examples:
              Example 1:
                value:
                  token: iNKE8a6k6cjbqWhWd
                  rid: vp3D9H8ud6HYvRpvq
                  pageInfo:
                    change: url
                    title: ''
                    location:
                      href: 'http://localhost:3000/packages/rocketchat_livechat/assets/demo.html#page-4'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: object
                    properties:
                      msg:
                        type: string
                      navigation:
                        type: object
                        properties:
                          page:
                            type: object
                            properties:
                              change:
                                type: string
                              title:
                                type: string
                              location:
                                type: object
                                properties:
                                  href:
                                    type: string
                          token:
                            type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    page:
                      msg: ' - file:///C:/Users/xyz/livechat/helloWorld.html'
                      navigation:
                        page:
                          change: url
                          title: ''
                          location:
                            href: 'file:///C:/Users/xyz/livechat/helloWorld.html'
                        token: 38cc8c765bf77e943f6e4319c5891f6c40d8538ce83473c8987562ea1d762d04
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''token'' [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: 'must have required property ''pageInfo'' [invalid-params]'
                    errorType: invalid-params
  /api/v1/livechat/transcript:
    post:
      tags:
        - Omnichannel Transcript
      summary: Request Omnichannel Transcript
      description: |-
        The endpoint is used by visitors to request a transcript of their chat to be sent to their email once the conversation ends. The room must be closed before you can send a transcript.

        You can also request transcripts for older conversations given that you know the older token and room ID.

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |0.70.0             | Added       |
      operationId: post-api-v1-livechat-transcript
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rid:
                  type: string
                  description: The room ID.
                token:
                  type: string
                  description: The visitor token.
                email:
                  type: string
                  description: The visitor's email ID where the transcript should be sent.
              required:
                - rid
                - token
                - email
            examples:
              Example 1:
                value:
                  rid: XFzMqgn33DcsQkpJp
                  token: iNKE8a6k6cjbqWhWd
                  email: visitor@rocket.chat
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    message: Livechat transcript sent
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''rid'' [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: 'must have required property ''token'' [invalid-params]'
                    errorType: invalid-params
  '/api/v1/livechat/transcript/{rid}':
    post:
      tags:
        - Omnichannel Transcript
      summary: Send Omnichannel Transcript
      description: |-
        This endpoint is used by agents and managers to schedule an email transcript to be sent once the chat is closed.
        Permission required: `send-omnichannel-chat-transcript`
        The room must be opened.

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |6.4.0            | Added       |
      operationId: 'post-api-v1-livechat-transcript-:rid'
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: rid
          in: path
          description: The room ID.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - subject
              properties:
                email:
                  type: string
                  description: The email address where the transcript should be sent.
                subject:
                  type: string
                  description: The subject of the email.
            examples:
              Example 1:
                value:
                  email: email@test.com
                  subject: Livechat Transcript
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''email'' [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: 'must have required property ''subject'' [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
    delete:
      tags:
        - Omnichannel Transcript
      summary: Delete Omnichannel Transcript
      description: |-
        This endpoint is used to cancel any transcript requests for an open room, meaning that the chat transcript won't be sent after the chat is closed. You can not use Send Omnichannel Transcript endpoint twice at a time. You must delete the previous request with this endpoint before requesting again.
        Permission required: `send-omnichannel-chat-transcript`

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |6.4.0            | Added       |
      operationId: delete-api-v1-livechat-transcript-rid
      parameters:
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/AuthToken'
        - name: rid
          in: path
          description: The room ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  '/api/vi/omnichannel/{rid}/request-transcript':
    post:
      summary: Request PDF Transcript
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        <a href="https://docs.rocket.chat/docs/omnichannel-conversations#conversation-transcript" target="_blank">Request a PDF transcript</a> for an Omnichannel conversation. The conversation must be closed before it can be exported. <br>

        Permission required: `request-pdf-transcript`.
        Omnichannel <a href="https://docs.rocket.chat/docs/managers" target="_blank">managers</a> and <a href="https://docs.rocket.chat/docs/agents" target="_blank">agents</a> have this permission by default.

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |6.0.0            | Added       |
      operationId: post-api-vi-omnichannel-rid-request-transcript
      parameters:
        - name: rid
          in: path
          description: The room ID.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Transcript
  '/api/v1/livechat/agents/{agentId}/departments':
    get:
      tags:
        - Omnichannel Agent Stats
      summary: Get Agent Departments
      description: |-
        Returns the departments associated with an agent.
        Permission required: `view-l-room`
      operationId: get-api-v1-livechat-agents-agentId-departments
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: agentId
          in: path
          description: The agent ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  departments:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        agentId:
                          type: string
                        departmentId:
                          type: string
                        _updatedAt:
                          type: string
                        count:
                          type: integer
                        departmentEnabled:
                          type: boolean
                        order:
                          type: integer
                        username:
                          type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    departments:
                      - _id: R34ZLL6wxDuk4S29G
                        agentId: XycfA5CetCPuEjqxw
                        departmentId: CAJioQNAvLnYWTy8i
                        _updatedAt: '2021-06-29T16:09:12.897Z'
                        count: 0
                        departmentEnabled: true
                        order: 0
                        username: kim.baek
                      - _id: 4TnnwbRsBY2upkzjp
                        agentId: XycfA5CetCPuEjqxw
                        departmentId: GgYvrkAF63aeQmsh4
                        _updatedAt: '2021-06-29T16:09:12.918Z'
                        count: 0
                        departmentEnabled: true
                        order: 0
                        username: kim.baek
                      - _id: wJTwJsAxRcZ8nc9sB
                        agentId: XycfA5CetCPuEjqxw
                        departmentId: Yi87Ju7eTHiZQ7CJt
                        _updatedAt: '2021-06-29T16:09:12.937Z'
                        count: 0
                        departmentEnabled: false
                        order: 0
                        username: kim.baek
                      - _id: ccjbvLEREZ6vwjBFk
                        agentId: XycfA5CetCPuEjqxw
                        departmentId: sLYp3ry7CRizaP3rJ
                        _updatedAt: '2021-06-29T16:09:12.956Z'
                        count: 0
                        departmentEnabled: false
                        order: 0
                        username: kim.baek
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
  /api/v1/livechat/analytics/agents/average-service-time:
    get:
      tags:
        - Omnichannel Agent Stats
      summary: Get Agent Average Service Time
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Gives the average service time (in seconds) for each agent.
        Permission required: `view-livechat-manager`
      operationId: get-api-v1-livechat-analytics-agents-average-service-time
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  agents:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        username:
                          type: string
                        averageServiceTimeInSeconds:
                          type: integer
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    agents:
                      - _id: rbAXPnMktTFbNpwtJ
                        username: kim.jane
                        averageServiceTimeInSeconds: 1106183
                      - _id: CkCPNcvsvCDfmWLqC
                        username: byu.baek
                        averageServiceTimeInSeconds: 2059
                      - _id: CkCPNcvsvCDfmWLqC
                        username: doe.john
                        averageServiceTimeInSeconds: 83303
                    count: 3
                    offset: 0
                    total: 3
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/analytics/agents/total-service-time:
    get:
      tags:
        - Omnichannel Agent Stats
      summary: Get Agent Total Service Time
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Gives the total service time sorted by agent.
        Permission required: `view-livechat-manager`

        **Service time** means how long time the agent is online and available. It does not mean how long time the agent was busy answering chats.
      operationId: get-api-v1-livechat-analytics-agents-total-service-time
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  agents:
                    type: array
                    items:
                      type: object
                      properties:
                        chats:
                          type: integer
                        _id:
                          type: string
                        username:
                          type: string
                        serviceTimeDuration:
                          type: integer
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    agents:
                      - chats: 3
                        _id: rbAXPnMktTFbNpwtJ
                        username: kim.baeko
                        serviceTimeDuration: 331
                      - chats: 4
                        _id: CkCPNcvsvCDfmWLqC
                        username: han.jun
                        serviceTimeDuration: 823
                      - chats: 4
                        _id: CkCPNcvsvCDfmWLqC
                        username: doe.john
                        serviceTimeDuration: 333
                    count: 3
                    offset: 0
                    total: 3
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/analytics/agents/available-for-service-history:
    get:
      tags:
        - Omnichannel Agent Stats
      summary: Get History of Agents Available for Service
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Return the list of agents and their available time for the provided time frame.
        Permission required: `view-livechat-manager`
      operationId: get-api-v1-livechat-analytics-agents-available-for-service-history
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - name: fullReport
          in: query
          description: 'If set to true, it shares the service history which will contain more granular data such as the time of the day the agent was available.'
          schema:
            type: boolean
          example: true
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  agents:
                    type: array
                    items:
                      type: object
                      properties:
                        serviceHistory:
                          type: array
                          items:
                            type: object
                            properties:
                              startedAt:
                                type: string
                              stoppedAt:
                                type: string
                        availableTimeInSeconds:
                          type: integer
                        username:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    agents:
                      - serviceHistory:
                          - startedAt: '2021-11-24T08:35:49.058Z'
                            stoppedAt: '2021-11-24T08:41:32.721Z'
                          - startedAt: '2021-11-24T08:51:15.623Z'
                            stoppedAt: '2021-11-24T08:53:59.707Z'
                          - startedAt: '2021-11-24T08:55:45.128Z'
                            stoppedAt: '2021-11-24T08:55:45.214Z'
                          - startedAt: '2021-11-24T16:56:35.486Z'
                            stoppedAt: '2021-11-24T17:05:56.611Z'
                          - startedAt: '2021-11-24T17:20:26.066Z'
                            stoppedAt: '2021-11-24T18:29:59.000Z'
                        availableTimeInSeconds: 2115334
                        username: doe.john
                      - serviceHistory:
                          - startedAt: '2022-02-06T09:45:26.476Z'
                            stoppedAt: '2022-02-06T09:45:27.499Z'
                          - startedAt: '2022-02-06T09:45:28.083Z'
                            stoppedAt: '2022-02-06T09:45:28.663Z'
                          - startedAt: '2022-02-06T09:45:29.117Z'
                            stoppedAt: '2022-02-06T09:45:29.672Z'
                          - startedAt: '2022-02-06T09:45:30.129Z'
                            stoppedAt: '2022-02-06T09:45:30.534Z'
                          - startedAt: '2022-02-06T09:45:30.923Z'
                            stoppedAt: '2022-02-06T09:45:31.714Z'
                          - startedAt: '2022-02-06T09:45:39.037Z'
                            stoppedAt: '2022-02-06T09:45:41.680Z'
                        availableTimeInSeconds: 7586
                        username: white.chris
                      - serviceHistory:
                          - startedAt: '2021-12-27T13:25:44.459Z'
                            stoppedAt: '2021-12-27T13:27:11.208Z'
                        availableTimeInSeconds: 1508
                        username: max.yui
                    count: 3
                    offset: 0
                    total: 3
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/appearance:
    get:
      tags:
        - Livechat Appearance
      summary: Get Livechat Appearance
      description: |-
        Get the settings about the widget appearance.
        Permission required: `view-livechat-manager`

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |6.4.0             | Added       |
      operationId: get-api-v1-livechat-appearance
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  appearance:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        type:
                          type: string
                        group:
                          type: string
                        public:
                          type: boolean
                        i18nLabel:
                          type: string
                        packageValue:
                          type: boolean
                        valueSource:
                          type: string
                        hidden:
                          type: boolean
                        blocked:
                          type: boolean
                        sorter:
                          type: integer
                        i18nDescription:
                          type: string
                        autocomplete:
                          type: boolean
                        ts:
                          type: string
                        _updatedAt:
                          type: string
                        createdAt:
                          type: string
                        value:
                          type: boolean
                        secret:
                          type: boolean
                        section:
                          type: string
                        enterprise:
                          type: boolean
                        requiredOnWizard:
                          type: boolean
                        env:
                          type: boolean
                        enableQuery:
                          type: string
                        editor:
                          type: string
                        packageEditor:
                          type: string
                  success:
                    type: boolean
              examples:
                Example 1:
                  value:
                    appearance:
                      - _id: Livechat_conversation_finished_message
                        type: string
                        group: Omnichannel
                        public: true
                        i18nLabel: Conversation_finished_message
                        packageValue: ''
                        valueSource: packageValue
                        hidden: false
                        blocked: false
                        sorter: 16
                        i18nDescription: Livechat_conversation_finished_message_Description
                        autocomplete: true
                        ts: '2021-12-03T16:21:59.851Z'
                        _updatedAt: '2021-12-03T16:21:59.851Z'
                        createdAt: '2021-12-03T16:21:59.851Z'
                        value: CLOSE!!!
                        secret: false
                        section: Livechat
                        enterprise: false
                        requiredOnWizard: false
                        env: false
                        enableQuery: '{"_id":"Livechat_enabled","value":true}'
                      - _id: Livechat_conversation_finished_text
                        _updatedAt: '2023-02-06T17:25:35.940Z'
                        autocomplete: true
                        blocked: false
                        createdAt: '2021-12-03T16:21:59.861Z'
                        group: Omnichannel
                        hidden: false
                        i18nDescription: Livechat_conversation_finished_text_Description
                        i18nLabel: Conversation_finished_text
                        multiline: true
                        packageValue: ''
                        public: true
                        secret: false
                        sorter: 17
                        ts: '2021-12-03T16:21:59.861Z'
                        type: string
                        value: BYE!!!
                        valueSource: packageValue
                        section: Livechat
                        enterprise: false
                        requiredOnWizard: false
                        env: false
                        enableQuery: '{"_id":"Livechat_enabled","value":true}'
                      - _id: Livechat_display_offline_form
                        type: boolean
                        group: Omnichannel
                        public: true
                        section: Livechat
                        i18nLabel: Display_offline_form
                        packageValue: true
                        valueSource: packageValue
                        hidden: false
                        blocked: false
                        sorter: 4
                        i18nDescription: Livechat_display_offline_form_Description
                        ts: '2021-10-27T22:25:42.892Z'
                        _updatedAt: '2021-10-27T22:25:42.892Z'
                        createdAt: '2021-10-27T22:25:42.892Z'
                        value: true
                        autocomplete: true
                        secret: false
                        enterprise: false
                        requiredOnWizard: false
                        env: false
                        enableQuery: '{"_id":"Livechat_enabled","value":true}'
                      - _id: Livechat_email_field_registration_form
                        type: boolean
                        group: Omnichannel
                        public: true
                        i18nLabel: Show_email_field
                        packageValue: true
                        valueSource: packageValue
                        hidden: false
                        blocked: false
                        sorter: 20
                        i18nDescription: Livechat_email_field_registration_form_Description
                        autocomplete: true
                        ts: '2021-12-03T16:21:59.926Z'
                        _updatedAt: '2021-12-03T16:21:59.926Z'
                        createdAt: '2021-12-03T16:21:59.926Z'
                        value: true
                        secret: false
                        section: Livechat
                        enterprise: false
                        requiredOnWizard: false
                        env: false
                        enableQuery: '{"_id":"Livechat_enabled","value":true}'
                      - _id: Livechat_show_agent_info
                        _updatedAt: '2023-08-10T13:27:26.422Z'
                        autocomplete: true
                        blocked: false
                        createdAt: '2021-12-03T16:21:59.833Z'
                        group: Omnichannel
                        hidden: false
                        i18nDescription: Livechat_show_agent_info_Description
                        i18nLabel: Show_agent_info
                        packageValue: true
                        public: true
                        secret: false
                        sorter: 14
                        ts: '2021-12-03T16:21:59.833Z'
                        type: boolean
                        value: false
                        valueSource: packageValue
                        section: Livechat
                        enterprise: false
                        requiredOnWizard: false
                        env: false
                        enableQuery: '{"_id":"Livechat_enabled","value":true}'
                      - _id: Livechat_title
                        type: string
                        group: Omnichannel
                        public: true
                        packageValue: Rocket.Chat
                        valueSource: packageValue
                        hidden: false
                        blocked: false
                        sorter: 0
                        i18nLabel: Livechat_title
                        i18nDescription: Livechat_title_Description
                        ts: '2021-10-27T22:25:42.874Z'
                        _updatedAt: '2023-09-01T17:17:39.628Z'
                        createdAt: '2021-10-27T22:25:42.874Z'
                        value: Hello
                        autocomplete: true
                        secret: false
                        section: Livechat
                        enterprise: false
                        requiredOnWizard: false
                        env: false
                        enableQuery: '{"_id":"Livechat_enabled","value":true}'
                      - _id: Livechat_title_color
                        type: color
                        group: Omnichannel
                        public: true
                        packageValue: '#C1272D'
                        valueSource: packageValue
                        hidden: false
                        blocked: false
                        sorter: 1
                        i18nLabel: Livechat_title_color
                        i18nDescription: Livechat_title_color_Description
                        ts: '2021-10-27T22:25:42.882Z'
                        _updatedAt: '2023-03-30T12:19:01.124Z'
                        createdAt: '2021-10-27T22:25:42.882Z'
                        value: '#b427be'
                        autocomplete: true
                        editor: color
                        secret: false
                        section: Livechat
                        enterprise: false
                        requiredOnWizard: false
                        env: false
                        packageEditor: color
                        enableQuery: '{"_id":"Livechat_enabled","value":true}'
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
    post:
      tags:
        - Livechat Appearance
      summary: Set Livechat Appearance
      description: |-
        Update the <a href="https://docs.rocket.chat/docs/livechat-widget-appearance" target="_blank">livechat widget appearance</a> settings.
        Permission required: `view-livechat-manager`

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |6.4.0           | Added       |
      operationId: post-api-v1-livechat-appearance
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        description: 'An array of objects containing the `_id` and `value` of the settings to be updated. See <a href="https://developer.rocket.chat/apidocs/get-livechat-appearance" target="_blank">Get LiveChat Appearance</a> example response for the `_id` of each setting.'
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  _id:
                    type: string
                  value:
                    type: boolean
                required:
                  - _id
                  - value
            examples:
              Example 1:
                value:
                  - _id: Livechat_title
                    value: Hello
                  - _id: Livechat_show_agent_email
                    value: 'false'
                  - _id: Livechat_show_agent_info
                    value: true
                  - _id: Livechat_title_color
                    value: '#b427bed'
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must be array [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: invalid-setting
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/business-hours:
    get:
      tags:
        - Omnichannel Business Hours
      summary: Get Business Hours
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Retrieves all the <a href='https://docs.rocket.chat/docs/business-hours' target='_blank'>business hours</a> attached to a workspace.
        Permission required: `view-livechat-business-hours`
      operationId: get-api-v1-livechat-business-hours
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: name
          in: query
          description: Name of the business hour.
          schema:
            type: string
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  businessHours:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                        active:
                          type: boolean
                        type:
                          type: string
                        ts:
                          type: string
                        workHours:
                          type: array
                          items:
                            type: object
                            properties:
                              day:
                                type: string
                              start:
                                type: object
                                properties:
                                  time:
                                    type: string
                                  utc:
                                    type: object
                                    properties:
                                      dayOfWeek:
                                        type: string
                                      time:
                                        type: string
                                  cron:
                                    type: object
                                    properties:
                                      dayOfWeek:
                                        type: string
                                      time:
                                        type: string
                              finish:
                                type: object
                                properties:
                                  time:
                                    type: string
                                  utc:
                                    type: object
                                    properties:
                                      dayOfWeek:
                                        type: string
                                      time:
                                        type: string
                                  cron:
                                    type: object
                                    properties:
                                      dayOfWeek:
                                        type: string
                                      time:
                                        type: string
                              open:
                                type: boolean
                        timezone:
                          type: object
                          properties:
                            name:
                              type: string
                            utc:
                              type: string
                        _updatedAt:
                          type: string
                        departmentsToApplyBusinessHour:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Example 1:
                  value:
                    businessHours:
                      - _id: 5eeed2c5ffea9759d3a0e5ac
                        name: ''
                        active: true
                        type: default
                        ts: '2020-06-21T03:24:02.252Z'
                        workHours:
                          - day: Monday
                            start:
                              time: '08:00'
                              utc:
                                dayOfWeek: Monday
                                time: '08:00'
                              cron:
                                dayOfWeek: Monday
                                time: '08:00'
                            finish:
                              time: '21:06'
                              utc:
                                dayOfWeek: Monday
                                time: '21:06'
                              cron:
                                dayOfWeek: Monday
                                time: '21:06'
                            open: true
                          - day: Tuesday
                            start:
                              time: '08:00'
                              utc:
                                dayOfWeek: Tuesday
                                time: '08:00'
                              cron:
                                dayOfWeek: Tuesday
                                time: '08:00'
                            finish:
                              time: '10:00'
                              utc:
                                dayOfWeek: Tuesday
                                time: '10:00'
                              cron:
                                dayOfWeek: Tuesday
                                time: '10:00'
                            open: true
                          - day: Wednesday
                            start:
                              time: '08:00'
                              utc:
                                dayOfWeek: Wednesday
                                time: '08:00'
                              cron:
                                dayOfWeek: Wednesday
                                time: '08:00'
                            finish:
                              time: '21:00'
                              utc:
                                dayOfWeek: Wednesday
                                time: '21:00'
                              cron:
                                dayOfWeek: Wednesday
                                time: '21:00'
                            open: true
                          - day: Thursday
                            start:
                              time: '01:00'
                              utc:
                                dayOfWeek: Thursday
                                time: '01:00'
                              cron:
                                dayOfWeek: Thursday
                                time: '01:00'
                            finish:
                              time: '23:00'
                              utc:
                                dayOfWeek: Thursday
                                time: '23:00'
                              cron:
                                dayOfWeek: Thursday
                                time: '23:00'
                            open: true
                          - day: Friday
                            start:
                              time: '10:00'
                              utc:
                                dayOfWeek: Friday
                                time: '10:00'
                              cron:
                                dayOfWeek: Friday
                                time: '10:00'
                            finish:
                              time: '22:00'
                              utc:
                                dayOfWeek: Friday
                                time: '22:00'
                              cron:
                                dayOfWeek: Friday
                                time: '22:00'
                            open: true
                          - day: Saturday
                            start:
                              time: '08:00'
                              utc:
                                dayOfWeek: Saturday
                                time: '08:00'
                              cron:
                                dayOfWeek: Saturday
                                time: '08:00'
                            finish:
                              time: '20:00'
                              utc:
                                dayOfWeek: Saturday
                                time: '20:00'
                              cron:
                                dayOfWeek: Saturday
                                time: '20:00'
                            open: false
                          - day: Sunday
                            start:
                              time: '08:00'
                              utc:
                                dayOfWeek: Sunday
                                time: '08:00'
                              cron:
                                dayOfWeek: Sunday
                                time: '08:00'
                            finish:
                              time: '20:00'
                              utc:
                                dayOfWeek: Sunday
                                time: '20:00'
                              cron:
                                dayOfWeek: Sunday
                                time: '20:00'
                            open: false
                        timezone:
                          name: Africa/Abidjan
                          utc: '0'
                        _updatedAt: '2022-12-05T17:12:11.585Z'
                        departmentsToApplyBusinessHour: ''
                      - _id: 62b1f74aa98c5b539adc912c
                        ts: '2022-06-21T16:52:26.386Z'
                        name: 'indian support time '
                        workHours:
                          - day: Monday
                            start:
                              time: '10:00'
                              utc:
                                dayOfWeek: Monday
                                time: '04:30'
                              cron:
                                dayOfWeek: Monday
                                time: '04:30'
                            finish:
                              time: '12:00'
                              utc:
                                dayOfWeek: Monday
                                time: '06:30'
                              cron:
                                dayOfWeek: Monday
                                time: '06:30'
                            open: true
                          - day: Tuesday
                            start:
                              time: '00:00'
                              utc:
                                dayOfWeek: Monday
                                time: '18:30'
                              cron:
                                dayOfWeek: Monday
                                time: '18:30'
                            finish:
                              time: '23:00'
                              utc:
                                dayOfWeek: Tuesday
                                time: '17:30'
                              cron:
                                dayOfWeek: Tuesday
                                time: '17:30'
                            open: true
                          - day: Wednesday
                            start:
                              time: '08:00'
                              utc:
                                dayOfWeek: Wednesday
                                time: '02:30'
                              cron:
                                dayOfWeek: Wednesday
                                time: '02:30'
                            finish:
                              time: '23:00'
                              utc:
                                dayOfWeek: Wednesday
                                time: '17:30'
                              cron:
                                dayOfWeek: Wednesday
                                time: '17:30'
                            open: true
                          - day: Thursday
                            start:
                              time: '10:00'
                              utc:
                                dayOfWeek: Thursday
                                time: '04:30'
                              cron:
                                dayOfWeek: Thursday
                                time: '04:30'
                            finish:
                              time: '01:00'
                              utc:
                                dayOfWeek: Wednesday
                                time: '19:30'
                              cron:
                                dayOfWeek: Wednesday
                                time: '19:30'
                            open: true
                          - day: Friday
                            start:
                              time: '12:00'
                              utc:
                                dayOfWeek: Friday
                                time: '06:30'
                              cron:
                                dayOfWeek: Friday
                                time: '06:30'
                            finish:
                              time: '23:50'
                              utc:
                                dayOfWeek: Friday
                                time: '18:20'
                              cron:
                                dayOfWeek: Friday
                                time: '18:20'
                            open: true
                          - day: Saturday
                            start:
                              time: '00:00'
                              utc:
                                dayOfWeek: Friday
                                time: '18:30'
                              cron:
                                dayOfWeek: Friday
                                time: '18:30'
                            finish:
                              time: '00:00'
                              utc:
                                dayOfWeek: Friday
                                time: '18:30'
                              cron:
                                dayOfWeek: Friday
                                time: '18:30'
                            open: false
                          - day: Sunday
                            start:
                              time: '00:00'
                              utc:
                                dayOfWeek: Saturday
                                time: '18:30'
                              cron:
                                dayOfWeek: Saturday
                                time: '18:30'
                            finish:
                              time: '00:00'
                              utc:
                                dayOfWeek: Saturday
                                time: '18:30'
                              cron:
                                dayOfWeek: Saturday
                                time: '18:30'
                            open: false
                        active: true
                        type: custom
                        timezone:
                          name: Asia/Kolkata
                          utc: '+05:30'
                        _updatedAt: '2022-11-28T10:41:17.303Z'
                    count: 2
                    offset: 0
                    total: 2
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/business-hour:
    get:
      tags:
        - Omnichannel Business Hours
      summary: Get Default Business Hour
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Fetches the default business hours of a workspace.
        Permission required: `view-livechat-business-hours`
      operationId: get-api-v1-livechat-business-hour
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  businessHour:
                    type: object
                    properties:
                      _id:
                        type: string
                      name:
                        type: string
                      active:
                        type: boolean
                      type:
                        type: string
                      ts:
                        type: string
                      workHours:
                        type: array
                        items:
                          type: object
                          properties:
                            day:
                              type: string
                            start:
                              type: object
                              properties:
                                time:
                                  type: string
                                utc:
                                  type: object
                                  properties:
                                    dayOfWeek:
                                      type: string
                                    time:
                                      type: string
                                cron:
                                  type: object
                                  properties:
                                    dayOfWeek:
                                      type: string
                                    time:
                                      type: string
                            finish:
                              type: object
                              properties:
                                time:
                                  type: string
                                utc:
                                  type: object
                                  properties:
                                    dayOfWeek:
                                      type: string
                                    time:
                                      type: string
                                cron:
                                  type: object
                                  properties:
                                    dayOfWeek:
                                      type: string
                                    time:
                                      type: string
                            code:
                              type: integer
                            open:
                              type: boolean
                      timezone:
                        type: object
                        properties:
                          name:
                            type: string
                          utc:
                            type: string
                      _updatedAt:
                        type: string
                  success:
                    type: boolean
              examples:
                Example 1:
                  value:
                    businessHour:
                      _id: 62f14dd55026d9aac120c653
                      name: ''
                      active: true
                      type: default
                      ts: '2022-08-08T17:54:29.441Z'
                      workHours:
                        - day: Monday
                          start:
                            time: '08:00'
                            utc:
                              dayOfWeek: Monday
                              time: '08:00'
                            cron:
                              dayOfWeek: Monday
                              time: '08:00'
                          finish:
                            time: '20:00'
                            utc:
                              dayOfWeek: Monday
                              time: '20:00'
                            cron:
                              dayOfWeek: Monday
                              time: '20:00'
                          code: 1
                          open: true
                        - day: Tuesday
                          start:
                            time: '08:00'
                            utc:
                              dayOfWeek: Tuesday
                              time: '08:00'
                            cron:
                              dayOfWeek: Tuesday
                              time: '08:00'
                          finish:
                            time: '20:00'
                            utc:
                              dayOfWeek: Tuesday
                              time: '20:00'
                            cron:
                              dayOfWeek: Tuesday
                              time: '20:00'
                          code: 2
                          open: true
                        - day: Wednesday
                          start:
                            time: '08:00'
                            utc:
                              dayOfWeek: Wednesday
                              time: '08:00'
                            cron:
                              dayOfWeek: Wednesday
                              time: '08:00'
                          finish:
                            time: '20:00'
                            utc:
                              dayOfWeek: Wednesday
                              time: '20:00'
                            cron:
                              dayOfWeek: Wednesday
                              time: '20:00'
                          code: 3
                          open: true
                        - day: Thursday
                          start:
                            time: '08:00'
                            utc:
                              dayOfWeek: Thursday
                              time: '08:00'
                            cron:
                              dayOfWeek: Thursday
                              time: '08:00'
                          finish:
                            time: '20:00'
                            utc:
                              dayOfWeek: Thursday
                              time: '20:00'
                            cron:
                              dayOfWeek: Thursday
                              time: '20:00'
                          code: 4
                          open: true
                        - day: Friday
                          start:
                            time: '08:00'
                            utc:
                              dayOfWeek: Friday
                              time: '08:00'
                            cron:
                              dayOfWeek: Friday
                              time: '08:00'
                          finish:
                            time: '20:00'
                            utc:
                              dayOfWeek: Friday
                              time: '20:00'
                            cron:
                              dayOfWeek: Friday
                              time: '20:00'
                          code: 5
                          open: true
                        - day: Saturday
                          start:
                            time: '08:00'
                            utc:
                              dayOfWeek: Saturday
                              time: '08:00'
                            cron:
                              dayOfWeek: Saturday
                              time: '08:00'
                          finish:
                            time: '20:00'
                            utc:
                              dayOfWeek: Saturday
                              time: '20:00'
                            cron:
                              dayOfWeek: Saturday
                              time: '20:00'
                          code: 6
                          open: false
                        - day: Sunday
                          start:
                            time: '08:00'
                            utc:
                              dayOfWeek: Sunday
                              time: '08:00'
                            cron:
                              dayOfWeek: Sunday
                              time: '08:00'
                          finish:
                            time: '20:00'
                            utc:
                              dayOfWeek: Sunday
                              time: '20:00'
                            cron:
                              dayOfWeek: Sunday
                              time: '20:00'
                          code: 7
                          open: false
                      timezone:
                        name: Africa/Abidjan
                        utc: '0'
                      _updatedAt: '2023-01-02T18:30:31.632Z'
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/business-hours.list:
    get:
      tags:
        - Omnichannel Business Hours
      summary: Business Hours List
      description: Gives a list of existing business hours. This endpoint has been renamed to Get Business Hours from Rocket.Chat 5.0.
      operationId: get-api-v1-livechat-business-hours.list
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  businessHours:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        ts:
                          type: string
                        name:
                          type: string
                        active:
                          type: boolean
                        type:
                          type: string
                        workHours:
                          type: array
                          items:
                            type: object
                            properties:
                              day:
                                type: string
                              start:
                                type: object
                                properties:
                                  time:
                                    type: string
                                  utc:
                                    type: object
                                    properties:
                                      dayOfWeek:
                                        type: string
                                      time:
                                        type: string
                                  cron:
                                    type: object
                                    properties:
                                      dayOfWeek:
                                        type: string
                                      time:
                                        type: string
                              finish:
                                type: object
                                properties:
                                  time:
                                    type: string
                                  utc:
                                    type: object
                                    properties:
                                      dayOfWeek:
                                        type: string
                                      time:
                                        type: string
                                  cron:
                                    type: object
                                    properties:
                                      dayOfWeek:
                                        type: string
                                      time:
                                        type: string
                              open:
                                type: boolean
                        timezone:
                          type: object
                          properties:
                            name:
                              type: string
                            utc:
                              type: string
                        departmentsToApplyBusinessHour:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
                x-examples:
                  Example 1:
                    businessHours:
                      - _id: 5f071f83a05d58ba2cd8b046
                        ts: '2020-07-09T13:45:39.633Z'
                        name: ''
                        active: true
                        type: default
                        workHours:
                          - day: Monday
                            start:
                              time: '06:00'
                              utc:
                                dayOfWeek: Monday
                                time: '09:00'
                              cron:
                                dayOfWeek: Monday
                                time: '09:00'
                            finish:
                              time: '22:00'
                              utc:
                                dayOfWeek: Tuesday
                                time: '01:00'
                              cron:
                                dayOfWeek: Tuesday
                                time: '01:00'
                            open: true
                          - day: Tuesday
                            start:
                              time: '06:00'
                              utc:
                                dayOfWeek: Tuesday
                                time: '09:00'
                              cron:
                                dayOfWeek: Tuesday
                                time: '09:00'
                            finish:
                              time: '21:00'
                              utc:
                                dayOfWeek: Wednesday
                                time: '00:00'
                              cron:
                                dayOfWeek: Wednesday
                                time: '00:00'
                            open: true
                          - day: Wednesday
                            start:
                              time: '06:00'
                              utc:
                                dayOfWeek: Wednesday
                                time: '09:00'
                              cron:
                                dayOfWeek: Wednesday
                                time: '09:00'
                            finish:
                              time: '22:00'
                              utc:
                                dayOfWeek: Thursday
                                time: '01:00'
                              cron:
                                dayOfWeek: Thursday
                                time: '01:00'
                            open: true
                          - day: Thursday
                            start:
                              time: '06:00'
                              utc:
                                dayOfWeek: Thursday
                                time: '09:00'
                              cron:
                                dayOfWeek: Thursday
                                time: '09:00'
                            finish:
                              time: '21:00'
                              utc:
                                dayOfWeek: Friday
                                time: '00:00'
                              cron:
                                dayOfWeek: Friday
                                time: '00:00'
                            open: true
                          - day: Friday
                            start:
                              time: '06:00'
                              utc:
                                dayOfWeek: Friday
                                time: '09:00'
                              cron:
                                dayOfWeek: Friday
                                time: '09:00'
                            finish:
                              time: '21:00'
                              utc:
                                dayOfWeek: Saturday
                                time: '00:00'
                              cron:
                                dayOfWeek: Saturday
                                time: '00:00'
                            open: true
                          - day: Saturday
                            start:
                              time: '08:00'
                              utc:
                                dayOfWeek: Saturday
                                time: '11:00'
                              cron:
                                dayOfWeek: Saturday
                                time: '11:00'
                            finish:
                              time: '20:00'
                              utc:
                                dayOfWeek: Saturday
                                time: '23:00'
                              cron:
                                dayOfWeek: Saturday
                                time: '23:00'
                            open: false
                          - day: Sunday
                            start:
                              time: '08:00'
                              utc:
                                dayOfWeek: Sunday
                                time: '11:00'
                              cron:
                                dayOfWeek: Sunday
                                time: '11:00'
                            finish:
                              time: '20:00'
                              utc:
                                dayOfWeek: Sunday
                                time: '23:00'
                              cron:
                                dayOfWeek: Sunday
                                time: '23:00'
                            open: false
                        timezone:
                          name: America/Sao_Paulo
                          utc: '-03:00'
                        departmentsToApplyBusinessHour: ''
                    count: 1
                    offset: 0
                    total: 1
                    success: true
      deprecated: true
  /api/v1/livechat/analytics/dashboards/conversation-totalizers:
    get:
      tags:
        - Omnichannel Dashboards
      summary: Get Conversation Metrics
      description: |-
        Retrieves metrics about all conversations.
        Permission required: `view-livechat-manager`
      operationId: get-api-v1-livechat-analytics-dashboards-conversation-totalizers
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/departmentId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalizers:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        value:
                          type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    totalizers:
                      - title: Total_conversations
                        value: 20
                      - title: Open_conversations
                        value: 2
                      - title: On_Hold_conversations
                        value: 0
                      - title: Total_messages
                        value: 51
                      - title: Total_visitors
                        value: 5
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/analytics/dashboards/agents-productivity-totalizers:
    get:
      tags:
        - Omnichannel Dashboards
      summary: Get Agent Service Time Metrics
      description: 'Permission required: `view-livechat-manager`'
      operationId: get-api-v1-livechat-analytics-dashboards-agents-productivity-totalizers
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/departmentId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalizers:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        value:
                          type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    totalizers:
                      - title: Busiest_time
                        value: 9AM- 10AM
                      - title: Avg_of_available_service_time
                        value: '00:45:18'
                      - title: Avg_of_service_time
                        value: '00:06:00'
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/analytics/dashboards/chats-totalizers:
    get:
      tags:
        - Omnichannel Dashboards
      summary: Get Chat Metrics
      description: |-
        Retrieves information about the chats.
        Permission required: `view-livechat-manager`
      operationId: get-api-v1-livechat-analytics-dashboards-chats-totalizers
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/departmentId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              examples:
                Success Example:
                  value:
                    totalizers:
                      - title: Total_abandoned_chats
                        value: 1
                      - title: Avg_of_abandoned_chats
                        value: 11%
                      - title: Avg_of_chat_duration_time
                        value: '01:24:56'
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/analytics/dashboards/productivity-totalizers:
    get:
      tags:
        - Omnichannel Dashboards
      summary: Get Chat Metrics by Time
      description: |-
        Retrieves the average time for Livechat conversations.
        Permission required: `view-livechat-manager`
      operationId: get-api-v1-livechat-analytics-dashboards-productivity-totalizers
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/departmentId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalizers:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        value:
                          type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    totalizers:
                      - title: Avg_response_time
                        value: '00:00:00'
                      - title: Avg_first_response_time
                        value: '00:00:00'
                      - title: Avg_reaction_time
                        value: '00:00:00'
                      - title: Avg_of_waiting_time
                        value: '00:00:00'
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/analytics/dashboards/charts/chats:
    get:
      tags:
        - Omnichannel Dashboards
      summary: Get Chats Status
      description: |-
        Retrieves the status of chats for a specific time duration.
        Permission required: `view-livechat-manager`
      operationId: get-api-v1-livechat-analytics-dashboards-charts-chats
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/departmentId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  open:
                    type: integer
                  closed:
                    type: integer
                  queued:
                    type: integer
                  onhold:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    open: 2
                    closed: 18
                    queued: 0
                    onhold: 0
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/analytics/dashboards/charts/chats-per-agent:
    get:
      tags:
        - Omnichannel Dashboards
      summary: Get Chat Status of Agents
      description: |-
        Retrieves the status of chats per agent for a specific time duration.
        Permission required: `view-livechat-manager`
      operationId: get-api-v1-livechat-analytics-dashboards-charts-chats-per-agent
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/departmentId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  test.cat:
                    type: object
                    properties:
                      open:
                        type: integer
                      closed:
                        type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    test.cat:
                      open: 1
                      closed: 4
                    kim.jane:
                      open: 1
                      closed: 3
                    lee.keith:
                      open: 0
                      closed: 4
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/analytics/dashboards/charts/agents-status:
    get:
      tags:
        - Omnichannel Dashboards
      summary: Get Status of Agents
      description: |-
        Retrieves the number of agents for each status.
        Permission required: `view-livechat-manager`
      operationId: get-api-v1-livechat-analytics-dashboards-charts-agents-status
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/departmentId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  offline:
                    type: integer
                  away:
                    type: integer
                  busy:
                    type: integer
                  available:
                    type: integer
                  success:
                    type: boolean
              examples:
                Example 1:
                  value:
                    _id: null
                    offline: 78
                    away: 5
                    busy: 0
                    available: 3
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/analytics/dashboards/charts/chats-per-department:
    get:
      tags:
        - Omnichannel Dashboards
      summary: Get Chats Status for Departments
      description: |-
        Retrieves the status of chats for each department.
        Permission required: `view-livechat-manager`
      operationId: get-api-v1-livechat-analytics-dashboards-charts-chats-per-department
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/departmentId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  Test:
                    type: object
                    properties:
                      open:
                        type: integer
                      closed:
                        type: integer
                  Sales:
                    type: object
                    properties:
                      open:
                        type: integer
                      closed:
                        type: integer
                  Finance:
                    type: object
                    properties:
                      open:
                        type: integer
                      closed:
                        type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    Test:
                      open: 1
                      closed: 0
                    Sales:
                      open: 0
                      closed: 9
                    Finance:
                      open: 0
                      closed: 1
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/analytics/dashboards/charts/timings:
    get:
      tags:
        - Omnichannel Dashboards
      summary: Get Chat Times
      description: 'Permission required: `view-livechat-manager`'
      operationId: get-api-v1-livechat-analytics-dashboards-charts-timings
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/departmentId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                    properties:
                      avg:
                        type: integer
                      longest:
                        type: integer
                  reaction:
                    type: object
                    properties:
                      avg:
                        type: integer
                      longest:
                        type: integer
                  chatDuration:
                    type: object
                    properties:
                      avg:
                        type: integer
                      longest:
                        type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    response:
                      avg: 0
                      longest: 0
                    reaction:
                      avg: 0
                      longest: 0
                    chatDuration:
                      avg: 0
                      longest: 0
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/inquiries.list:
    get:
      tags:
        - Omnichannel Inquiries
      summary: Get Inquiries List
      description: |-
        Lists all open inquiries. An incoming chat that has not yet been taken by the agent is called an inquiry. After it's been taken by the agent it is referred to as room.
        Permission required: `view-livechat-manager`

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |1.2.0            | Added       |
      operationId: get-api-v1-livechat-inquiries.list
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: department
          in: query
          description: The department ID or name.
          schema:
            type: string
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  inquiries:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        rid:
                          type: string
                        name:
                          type: string
                        ts:
                          type: string
                        status:
                          type: string
                  offset:
                    type: integer
                  count:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    inquiries:
                      - _id: GpxfRo8TaPHfsnnC5
                        rid: EbQjtCosHJWLQmQYT
                        name: Marcos Defendi
                        ts: '2019-06-11T19:01:57.424Z'
                        status: queued
                    offset: 0
                    count: 1
                    total: 1
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/inquiries.take:
    post:
      tags:
        - Omnichannel Inquiries
      summary: Take Inquiry
      description: |-
        Join an open inquiry.
        Permission required: `view-l-room`

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |1.2.0            | Added       |
      operationId: post-api-v1-livechat-inquiries.take
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                inquiryId:
                  type: string
                  description: The inquiry ID.
                userId:
                  type: string
                  description: The user's (agent) ID who is taking the inquiry. The user must have `view-l-room` permission.
              required:
                - inquiryId
            examples:
              Example 1:
                value:
                  inquiryId: ByehQjC44FwMeiLbX
        description: 'If the `userId` is provided, the user must have the `view-l-room` permission.'
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''inquiryId'' [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'

  /api/v1/livechat/inquiries.queuedForUser:
    get:
      tags:
        - Omnichannel Inquiries
      summary: List Queued User Inquiries
      description: |-
        Permission required: `view-l-room`
        The `livechat/inquiries.queued` endpoint has been removed from 7.0. Use this endpoint instead.
      operationId: get-api-v1-livechat-inquiries.queuedForUser
      parameters:
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/AuthToken'
        - name: department
          in: query
          description: The department ID or name.
          schema:
            type: string
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  inquiries:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        rid:
                          type: string
                        name:
                          type: string
                        ts:
                          type: string
                        department:
                          type: string
                        message:
                          type: string
                        status:
                          type: string
                        v:
                          type: object
                          properties:
                            _id:
                              type: string
                            username:
                              type: string
                            token:
                              type: string
                            status:
                              type: string
                        t:
                          type: string
                        queueOrder:
                          type: integer
                        estimatedWaitingTimeQueue:
                          type: integer
                        estimatedServiceTimeAt:
                          type: string
                        _updatedAt:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    inquiries:
                      - _id: xn5sKBatdkgDfjDLC
                        rid: 8AuphbFBSNBjeZQFs
                        name: hk
                        ts: '2021-07-22T14:28:57.987Z'
                        department: CAJioQNAvLnYWTy8i
                        message: ''
                        status: queued
                        v:
                          _id: hPF84vuahYBZugM8L
                          username: guest-535
                          token: zdynf0a9vsiiiq1dlf9abf
                          status: offline
                        t: l
                        queueOrder: 1
                        estimatedWaitingTimeQueue: 0
                        estimatedServiceTimeAt: '2021-07-22T14:28:57.987Z'
                        _updatedAt: '2021-07-22T14:37:28.470Z'
                      - _id: g6FY2B8PNwneteRG9
                        rid: iZ7XDSgcjBgczqko9
                        name: dk
                        ts: '2021-07-22T14:28:07.350Z'
                        department: CAJioQNAvLnYWTy8i
                        message: ''
                        status: queued
                        v:
                          _id: ycwLFcaH4ey9XYYvu
                          username: guest-534
                          token: ili20miimhh8x33ld0b5de
                          status: offline
                        t: l
                        queueOrder: 1
                        estimatedWaitingTimeQueue: 0
                        estimatedServiceTimeAt: '2021-07-22T14:28:07.350Z'
                        _updatedAt: '2021-07-22T14:28:24.521Z'
                    count: 2
                    offset: 0
                    total: 2
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/inquiries.getOne:
    get:
      tags:
        - Omnichannel Inquiries
      summary: Get Inquiry by Room
      description: |-
        Permission required: `view-l-room`

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |2.4.0            | Added       |
      operationId: get-api-v1-livechat-inquiries.getOne
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: roomId
          in: query
          description: The room ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  inquiry:
                    type: object
                    properties:
                      _id:
                        type: string
                      rid:
                        type: string
                      name:
                        type: string
                      ts:
                        type: string
                      message:
                        type: string
                      status:
                        type: string
                      v:
                        type: object
                        properties:
                          _id:
                            type: string
                          username:
                            type: string
                          token:
                            type: string
                          status:
                            type: string
                          activity:
                            type: array
                            items:
                              type: string
                      t:
                        type: string
                      priorityWeight:
                        type: integer
                      estimatedWaitingTimeQueue:
                        type: integer
                      source:
                        type: object
                        properties:
                          type:
                            type: string
                      _updatedAt:
                        type: string
                      lastMessage:
                        type: object
                        properties:
                          _id:
                            type: string
                          rid:
                            type: string
                          msg:
                            type: string
                          ts:
                            type: string
                          u:
                            type: object
                            properties:
                              _id:
                                type: string
                              username:
                                type: string
                              name:
                                type: string
                          _updatedAt:
                            type: string
                          urls:
                            type: array
                            items:
                              type: object
                          mentions:
                            type: array
                            items:
                              type: object
                          channels:
                            type: array
                            items:
                              type: object
                          md:
                            type: array
                            items:
                              type: object
                              properties:
                                type:
                                  type: string
                                value:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                      value:
                                        type: string
                      takenAt:
                        type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    inquiry:
                      _id: 6560940c6a1ef5b1a2bf9324
                      rid: yy8SmYKfHQ6GZdnJp
                      name: kookie
                      ts: '2023-11-24T12:16:12.370Z'
                      message: ''
                      status: taken
                      v:
                        _id: 656090576a1ef5b1a2bf919b
                        username: guest-51
                        token: 38cc8c765bf77e943f6e4319c5891f6c04
                        status: online
                        activity:
                          - 2023-11
                      t: l
                      priorityWeight: 99
                      estimatedWaitingTimeQueue: 9999999
                      source:
                        type: widget
                      _updatedAt: '2023-11-24T12:27:43.852Z'
                      lastMessage:
                        _id: Hjwmd7bBZTiEXrywn
                        rid: yy8SmYKfHQ6GZdnJp
                        msg: hello
                        ts: '2023-11-24T12:27:43.474Z'
                        u:
                          _id: CkCPNcvsvCDfmWLqC
                          username: test.cat
                          name: testCat
                        _updatedAt: '2023-11-24T12:27:43.820Z'
                        urls: []
                        mentions: []
                        channels: []
                        md:
                          - type: PARAGRAPH
                            value:
                              - type: PLAIN_TEXT
                                value: hello
                      takenAt: '2023-11-24T12:18:19.012Z'
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''roomId'' [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/inquiry.setSLA:
    put:
      tags:
        - Omnichannel Inquiries
      summary: Set SLA Policy to Inquiry
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Set <a href="https://docs.rocket.chat/docs/sla-policies" target="_blank">SLA policy</a> to an inquiry. You can only set the policy for an inquiry that has not been taken by an agent.

        At least one of the following permissions is required:
        * `view-l-room`
        * `manage-livechat-sla`

        ### Changelog
        | Version | Description  |
        | ------- |--------------|
        | 5.0.0  | Added         |
      operationId: put-api-v1-livechat-inquiry.setSLA
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                roomId:
                  type: string
                  description: The room ID.
                sla:
                  type: string
                  description: Name or ID of the SLA policy.
              required:
                - roomId
                - sla
            examples:
              Example 1:
                value:
                  roomId: ZDYMFPpvnXgptmzMs
                  sla: 6417f67528384134ed600dc6
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: The 'roomId' param is required
                Example 2:
                  value:
                    success: false
                    error: error-invalid-inquiry
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/integrations.settings:
    get:
      tags:
        - Livechat
      summary: Get Livechat Integrations
      description: |-
        Retrieves a list of integration settings.
        Permission required: `view-livechat-manager`
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |2.2.0             | Added       |
      operationId: get-api-v1-livechat-integrations.settings
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  settings:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        _updatedAt:
                          type: string
                        autocomplete:
                          type: boolean
                        blocked:
                          type: boolean
                        createdAt:
                          type: string
                        group:
                          type: string
                        hidden:
                          type: boolean
                        i18nDescription:
                          type: string
                        i18nLabel:
                          type: string
                        packageValue:
                          type: string
                        secret:
                          type: boolean
                        section:
                          type: string
                        sorter:
                          type: integer
                        ts:
                          type: string
                        type:
                          type: string
                        value:
                          type: string
                        valueSource:
                          type: string
                        meteorSettingsValue:
                          type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    settings:
                      - _id: Livechat_secret_token
                        _updatedAt: '2019-10-17T13:56:07.285Z'
                        autocomplete: true
                        blocked: false
                        createdAt: '2019-10-07T18:52:20.484Z'
                        group: Livechat
                        hidden: false
                        i18nDescription: Livechat_secret_token_Description
                        i18nLabel: Secret_token
                        packageValue: ''
                        secret: true
                        section: CRM_Integration
                        sorter: 25
                        ts: '2019-10-07T21:00:01.287Z'
                        type: string
                        value: ''
                        valueSource: meteorSettingsValue
                        meteorSettingsValue: ''
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/queue:
    get:
      tags:
        - Livechat
      summary: Get Livechat Queue
      description: |-
        Permission required: `view-l-room`
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |2.4.0             | Added       |
      operationId: get-api-v1-livechat-queue
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/departmentId'
        - name: agentId
          in: query
          description: The agent ID.
          schema:
            type: string
        - name: includeOfflineAgents
          in: query
          description: Whether you want to include offline agents or not.
          schema:
            type: string
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  queue:
                    type: array
                    items:
                      type: object
                      properties:
                        chats:
                          type: integer
                        user:
                          type: object
                          properties:
                            _id:
                              type: string
                            username:
                              type: string
                            status:
                              type: string
                        department:
                          type: object
                          properties:
                            _id:
                              type: string
                            name:
                              type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    queue:
                      - chats: 1
                        user:
                          _id: CaevAPDbXN252kyXa
                          username: marcos.defendi
                          status: online
                        department:
                          _id: 457diLwcQMmdpaTjo
                          name: Department 1
                      - chats: 2
                        user:
                          _id: CaevAPDbXN252kyXa
                          username: marcos.defendi
                          status: online
                        department:
                          _id: 5mt9oEtQxuMMH23Co
                          name: Department 2
                    count: 2
                    offset: 0
                    total: 2
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  '/api/v1/livechat/sms-incoming/{service}':
    post:
      tags:
        - Livechat
      summary: Livechat SMS Incoming (Twilio)
      description: |-
        Receive SMS.

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |0.42.0            | Added      |
      operationId: post-api-v1-livechat-sms-incoming-service
      parameters:
        - name: service
          in: path
          description: Only the server `twilio` is accepted at moment.
          required: true
          schema:
            type: string
          example: twilio
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                From:
                  type: string
                To:
                  type: string
                Body:
                  type: string
                ToCountry:
                  type: string
                ToState:
                  type: string
                ToCity:
                  type: string
                ToZip:
                  type: string
                FromCountry:
                  type: string
                FromState:
                  type: string
                FromCity:
                  type: string
                FromZip:
                  type: string
            examples:
              Example 1:
                value:
                  From: '5551123456789'
                  To: '5551987654321'
                  Body: SMS message
                  ToCountry: Brazil
                  ToState: RS
                  ToCity: Porto Alegre
                  ToZip: ''
                  FromCountry: Brazil
                  FromState: RS
                  FromCity: Porto Alegre
                  FromZip: ''
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: <Response></Response>
              examples:
                default:
                  value: <Response></Response>
  /api/v1/livechat/triggers:
    get:
      tags:
        - Livechat Triggers
      summary: Get List of Livechat Triggers
      description: |-
        Permission required: `view-livechat-manager`
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |2.2.0             | Added       |
      operationId: get-api-v1-livechat-triggers
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  triggers:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                        description:
                          type: string
                        enabled:
                          type: boolean
                        runOnce:
                          type: boolean
                        conditions:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                        actions:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              params:
                                type: object
                                properties:
                                  sender:
                                    type: string
                                  msg:
                                    type: string
                        _updatedAt:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    triggers:
                      - _id: Lk52shJFYyb55trw8
                        name: test
                        description: test
                        enabled: true
                        runOnce: true
                        conditions:
                          - name: page-url
                            value: ''
                        actions:
                          - name: send-message
                            params:
                              sender: ''
                              msg: ''
                        _updatedAt: '2019-10-04T15:36:29.695Z'
                    count: 1
                    offset: 0
                    total: 1
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
    post:
      summary: Create or Update Livechat Triggers
      tags:
        - Livechat Triggers
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''description'' [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: 'must be equal to one of the allowed values [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      operationId: post-api-v1-livechat-triggers
      description: |-
        Permission required: `view-livechat-manager`

        See the <a href="https://docs.rocket.chat/docs/livechat-triggers" target="_blank">Livechat Triggers</a> guide for more information.
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
                - enabled
                - runOnce
                - conditions
                - actions
              properties:
                _id:
                  type: string
                  description: 'If you want to update a trigger, enter the trigger ID.'
                  example: 65fa8f42482d68e364
                name:
                  type: string
                  description: Enter a name for the trigger.
                  example: test-trigger
                description:
                  type: string
                  description: Enter a description for the trigger.
                  example: Test trigger with the endpoint.
                enabled:
                  type: boolean
                  description: Whether the trigger is enabled for use or not.
                  default: true
                runOnce:
                  type: boolean
                  description: Whether the trigger will be run only once for each visitor.
                  default: false
                conditions:
                  type: array
                  description: Enter the conditions for the trigger to execute.
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: |-
                          The condition that should take place for the trigger to execute. The possible values are:
                          * `time-on-site`: The amount of time a visitor is on the site.
                          * `page-url`: The site URL that a visitor visits.
                          * `chat-opened-by-visitor`: The chat is opened by the visitor.
                          * `after-guest-registration`: The guest is registered to the chat.
                      value:
                        oneOf:
                        - type: number
                        - type: string
                        description: 'Enter the value of the `page-url` (string) or the `time-on-site`, in seconds (number). Otherwise, you can enter `null`.'
                actions:
                  type: array
                  description: The actions that take place once the trigger is executed.
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: "The name of the trigger action that takes place. The possible values are:\r\n* `send-message`: A message is sent to the visitor.\r\n* `use-external-service`: An external service is used for the trigger action."
                      params:
                        type: object
                        description: Enter the parameter values for the trigger action.
                        properties:
                          sender:
                            type: string
                            description: "The sender of the trigger action. The possible values are:\r\n* `queue`: Impersonate the next available agent in the queue.\r\n* `custom`: Use a specific agent or bot."
                          name:
                            type: string
                            description: 'Enter the name of the agent or bot that you want to use, if the `sender` is `custom`.'
                          msg:
                            type: string
                            description: 'Enter a message for the visitor, if the action `name` is `send-message`.'
                          serviceUrl:
                            type: string
                            description: 'Enter the external service URL you want to use, if the action `name` is `use-external-service`.'
                            example: 'http://localhost:3000/api/vX'
                          serviceTimeout:
                            type: number
                            description: 'Enter the service timeout value, in seconds, if the action `name` is `use-external-service`.'
                            example: 5000
                          serviceFallbackMessage:
                            type: string
                            description: 'Enter a message when the service is not accessible, if the action `name` is `use-external-service`.'
                            example: 'Were sorry, we cannot complete your request'
            examples:
              Example 1:
                value:
                  name: api-trigger
                  description: testing create trigger endpoint
                  enabled: false
                  runOnce: true
                  conditions:
                    - name: chat-opened-by-visitor
                      value: 0
                  actions:
                    - name: send-message
                      params:
                        sender: queue
                        msg: hello world
  '/api/v1/livechat/triggers/{_id}':
    get:
      tags:
        - Livechat Triggers
      summary: Get Livechat Trigger
      description: |-
        Get the details about a specific trigger.
        Permission required: `view-livechat-manager`
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |2.2.0             | Added       |
      operationId: get-api-v1-livechat-triggers-_id
      parameters:
        - name: _id
          in: path
          description: The trigger ID.
          required: true
          schema:
            type: string
          example: Lk52shJFYyb55trw8
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  trigger:
                    type: object
                    properties:
                      _id:
                        type: string
                      name:
                        type: string
                      description:
                        type: string
                      enabled:
                        type: boolean
                      runOnce:
                        type: boolean
                      conditions:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                      actions:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            params:
                              type: object
                              properties:
                                sender:
                                  type: string
                                msg:
                                  type: string
                      _updatedAt:
                        type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    trigger:
                      _id: Lk52shJFYyb55trw8
                      name: test
                      description: test
                      enabled: true
                      runOnce: true
                      conditions:
                        - name: page-url
                          value: ''
                      actions:
                        - name: send-message
                          params:
                            sender: ''
                            msg: ''
                      _updatedAt: '2019-10-04T15:36:29.695Z'
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
    delete:
      summary: Delete a trigger
      tags:
        - Livechat Triggers
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      operationId: delete-api-v1-livechat-triggers-_id
      description: 'Permission required: `view-livechat-manager`'
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: _id
          in: path
          description: The trigger ID.
          required: true
          schema:
            type: string
          example: Lk52shJFYyb55trw8
  /api/v1/livechat/monitors:
    get:
      tags:
        - Omnichannel Monitors
      summary: Get List of Monitors
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Retrieves a list of <a href='https://docs.rocket.chat/docs/monitors' target='_blank'>monitors</a>.
        Permission required: `manage-livechat-monitors`
      operationId: get-api-v1-livechat-monitors
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/sort'
        - schema:
            type: string
          in: query
          name: text
          description: Filter the result with the text.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  monitors:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        username:
                          type: string
                        emails:
                          type: array
                          items:
                            type: object
                            properties:
                              address:
                                type: string
                              verified:
                                type: boolean
                        status:
                          type: string
                        name:
                          type: string
                        statusLivechat:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    monitors:
                      - _id: gxcJTYapi5mPxuAme
                        username: Bruno
                        emails:
                          - address: ''
                            verified: false
                        status: offline
                        name: Bruno
                        statusLivechat: not-available
                      - _id: QDHWqcubZunM8C4NR
                        username: gomes
                        emails:
                          - address: ''
                            verified: true
                        status: offline
                        name: ' Gomes'
                        statusLivechat: not-available
                    count: 2
                    offset: 0
                    total: 2
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  '/api/v1/livechat/monitors/{username}':
    get:
      tags:
        - Omnichannel Monitors
      summary: Get a Monitor
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Get details of a specific monitor.
        Permission required: `manage-livechat-monitors`
      operationId: get-api-v1-livechat-monitors-username
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: username
          in: path
          description: The username of the person monitoring.
          required: true
          schema:
            type: string
          example: 1-agent
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  username:
                    type: string
                  emails:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                        verified:
                          type: boolean
                  status:
                    type: string
                  name:
                    type: string
                  statusLivechat:
                    type: string
                  livechat:
                    type: object
                    properties:
                      maxNumberSimultaneousChat:
                        type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    _id: RSb7exHJsiKqwRjPF
                    username: 1-agent
                    emails:
                      - address: 1-agent@g.c
                        verified: false
                    status: offline
                    name: 1-agent
                    statusLivechat: not-available
                    livechat:
                      maxNumberSimultaneousChat: '4'
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/monitors.list:
    get:
      tags:
        - Omnichannel Monitors
      summary: List of Monitors
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        This endpoint has been renamed to Get List of Monitors as from Rocket.Chat 5.0.
      operationId: get-api-v1-livechat-monitors.list
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  monitors:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        username:
                          type: string
                        emails:
                          type: array
                          items:
                            type: object
                            properties:
                              address:
                                type: string
                              verified:
                                type: boolean
                        status:
                          type: string
                        name:
                          type: string
                        statusLivechat:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
                x-examples:
                  Example 1:
                    monitors:
                      - _id: gxcJTYapi5mPxuAme
                        username: Bruno
                        emails:
                          - address: ''
                            verified: false
                        status: offline
                        name: Bruno
                        statusLivechat: not-available
                      - _id: QDHWqcubZunM8C4NR
                        username: gomes
                        emails:
                          - address: ''
                            verified: true
                        status: offline
                        name: Gomes
                        statusLivechat: not-available
                    count: 2
                    offset: 0
                    total: 2
                    success: true
      deprecated: true
  /api/v1/livechat/monitors.getOne:
    get:
      tags:
        - Omnichannel Monitors
      summary: Get One Monitor
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        This endpoint has been renamed to Get a Monitor as from Rocket.Chat 5.0
      operationId: get-api-v1-livechat-monitors.getOne
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: username
          in: query
          description: The username of the person monitoring.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  username:
                    type: string
                  emails:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                        verified:
                          type: boolean
                  status:
                    type: string
                  name:
                    type: string
                  statusLivechat:
                    type: string
                  success:
                    type: boolean
                x-examples:
                  Example 1:
                    _id: gxcJTYapi5mPxuAme
                    username: Bruno.Solis
                    emails:
                      - address: ''
                        verified: false
                    status: offline
                    name: Bruno Solis
                    statusLivechat: not-available
                    success: true
      deprecated: true
  /api/v1/livechat/priorities:
    get:
      tags:
        - Omnichannel Priorities
      summary: Get List of Priorities
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Retrieves list of existing <a href='https://docs.rocket.chat/docs/priorities' target='_blank'>priorities</a>. At least one of the following permissions is required:
          * `manage-livechat-priorities`
          * `view-l-room`

        ### Changelog
        | Version      | Description |
        | ------------ | ------------|
        |6.0.0         | Added       |
      operationId: get-api-v1-livechat-priorities
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/sort'
        - schema:
            type: string
          in: query
          name: text
          description: Filter the search result with the text.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  priorities:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        i18n:
                          type: string
                        sortItem:
                          type: integer
                        dirty:
                          type: boolean
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    priorities:
                      - _id: 64007cc2fa0ed7dd905092e3
                        i18n: Lowest
                        sortItem: 5
                        dirty: false
                      - _id: 64007cc2fa0ed7dd905092e4
                        i18n: Low
                        sortItem: 4
                        dirty: false
                      - _id: 64007cc2fa0ed7dd905092e5
                        i18n: Medium
                        sortItem: 3
                        dirty: false
                      - _id: 64007cc2fa0ed7dd905092e6
                        i18n: High
                        sortItem: 2
                        dirty: false
                      - _id: 64007cc2fa0ed7dd905092e7
                        i18n: Highest
                        sortItem: 1
                        dirty: false
                    count: 5
                    offset: 0
                    total: 5
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  '/api/v1/livechat/priorities/{priorityId}':
    get:
      tags:
        - Omnichannel Priorities
      summary: Get a Priority
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Get details of a specific priority.
        At least one of the following permissions is required:
          * `manage-livechat-priorities`
          * `view-l-room`

        ### Changelog
        | Version | Description  |
        | ------- |--------------|
        | 6.0.0  | Added         |
      operationId: get-api-v1-livechat-priorities-priorityId
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: priorityId
          in: path
          description: The priority ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  i18n:
                    type: string
                  sortItem:
                    type: integer
                  dirty:
                    type: boolean
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    _id: 64007cc2fa0ed7dd905092e3
                    i18n: Lowest
                    sortItem: 5
                    dirty: false
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
    put:
      tags:
        - Omnichannel Priorities
      summary: Update Priority
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Update an existing priority.
        Permission required: `manage-livechat-priorities`

        ### Changelog
        | Version      | Description |
        | ------------ | ------------|
        |6.0.0         | Added       |
      operationId: put-api-v1-livechat-priorities-priorityId
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: priorityId
          in: path
          description: The priority ID.
          required: true
          schema:
            type: string
          example: 64007cc2fa0ed7dd905092e3
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the priority.
              required:
                - name
            examples:
              Example 1:
                value:
                  name: Very low
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must match exactly one schema in oneOf [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/priorities.reset:
    parameters: []
    post:
      summary: Reset Priorities
      operationId: post-livechat-priorities.reset
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        This endpoint resets all priorities back to default.
        Permission required: `manage-livechat-priorities`

        ### Changelog
        | Version      | Description |
        | ------------ | ------------|
        |6.0.0         | Added       |
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      tags:
        - Omnichannel Priorities
  /livechat/priorities:
    get:
      tags:
        - Omnichannel Priorities
      summary: Get Priorities
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        This endpoint is used to get a list of all priorities in a workspace below version 6.0. It supports the optional <a href="https://developer.rocket.chat/apidocs#pagination" target="_blank">pagination</a> query parameters.
      operationId: get-livechat-priorities
      parameters:
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/AuthToken'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  priorities:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                        dueTimeInMinutes:
                          type: integer
                        _updatedAt:
                          type: string
                        description:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
                x-examples:
                  Example 1:
                    priorities:
                      - _id: e6pjPYF4pFWr7g59F
                        name: high
                        dueTimeInMinutes: 1
                        _updatedAt: '2022-10-04T13:48:21.016Z'
                        description: high
                      - _id: 5PMgshbQWsoHsYy2c
                        name: medium
                        dueTimeInMinutes: 6
                        _updatedAt: '2022-09-01T13:51:20.710Z'
                      - _id: idQkJgzTND3gBRNWJ
                        name: low
                        description: test
                        dueTimeInMinutes: 2
                        _updatedAt: '2022-10-04T13:48:07.371Z'
                      - _id: WXbWQSPevAyY2CjRq
                        name: low
                        dueTimeInMinutes: 4
                        _updatedAt: '2022-09-01T13:51:04.837Z'
                    count: 4
                    offset: 0
                    total: 4
                    success: true
      deprecated: true

  '/livechat/priorities/{priorityId}':
    get:
      tags:
        - Omnichannel Priorities
      summary: Get a Priority
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        This endpoint is used to get the details of a priority in a workspace below version 6.0.
      operationId: get-livechat-priorities-priorityId
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: priorityId
          in: path
          description: Priority ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  dueTimeInMinutes:
                    type: integer
                  _updatedAt:
                    type: string
                  success:
                    type: boolean
                x-examples:
                  Example 1:
                    _id: idQkJgzTND3gBRNWJ
                    name: low
                    description: test
                    dueTimeInMinutes: 2
                    _updatedAt: '2022-10-04T13:48:07.371Z'
                    success: true
      deprecated: true
  /livechat/priorities.list:
    get:
      tags:
        - Omnichannel Priorities
      summary: List of Priorities
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        This endpoint has been renamed to <b><a href='https://rocketchat-developer.us.document360.io/apidocs/get-priorities' target='_blank'>Get Priorities</a></b> as from Rocket.Chat 5.0."
      operationId: get-livechat-priorities.list
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  priorities:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                        description:
                          type: string
                        dueTimeInMinutes:
                          type: integer
                        _updatedAt:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
                x-examples:
                  Example 1:
                    priorities:
                      - _id: kihPsGwKWTzf9amQk
                        name: High
                        description: High
                        dueTimeInMinutes: 1
                        _updatedAt: '2020-12-04T19:10:36.875Z'
                      - _id: 4WcmeBE4spXx6AxrC
                        name: Low
                        description: Low
                        dueTimeInMinutes: 3
                        _updatedAt: '2020-10-06T22:33:58.571Z'
                      - _id: 7Hu352k892rNh45j9
                        name: Medium
                        description: Medium
                        dueTimeInMinutes: 2
                        _updatedAt: '2020-10-06T22:33:40.768Z'
                    count: 3
                    offset: 0
                    total: 3
                    success: true
      deprecated: true
  /livechat/priority.getOne:
    get:
      tags:
        - Omnichannel Priorities
      summary: Get one Priority
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        This endpoint has been renamed to <b><a href='https://developer.rocket.chat/apidocs/get-a-priority' target='_blank'>Get a Priority</a></b> as from Rocket.Chat 5.0."
      operationId: get-livechat-priority.getOne
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: priorityId
          in: query
          description: Priority ID
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  dueTimeInMinutes:
                    type: integer
                  _updatedAt:
                    type: string
                  success:
                    type: boolean
                x-examples:
                  Example 1:
                    _id: 7Hu352k892rNh45j9
                    name: Medium
                    description: Medium
                    dueTimeInMinutes: 2
                    _updatedAt: '2020-10-06T22:33:40.768Z'
                    success: true
      deprecated: true
  /api/v1/livechat/tags:
    get:
      tags:
        - Omnichannel Tags
      summary: Get List of Tags
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Retrieves list of <a href='https://docs.rocket.chat/docs/tags' target='_blank'>tags</a>. Here are some important details to note when retrieving tags:
        - By default, only tags not linked to any department are returned.
        - To retrieve all tags in the workspace, set the `viewAll` parameter to `true`.
        - If a `department` is specified, the response includes both the tags associated with that department and those not linked to any department.

        At least one of the following permissions is required:
          * `view-l-room`
          * `manage-livechat-tags`
      operationId: get-api-v1-livechat-tags
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/sort'
        - schema:
            type: string
          in: query
          name: text
          description: Filter the search result with the text.
        - schema:
            type: string
          in: query
          name: department
          description: Enter the department ID.
        - schema:
            type: boolean
          in: query
          name: viewAll
          description: Select whether you want to view all tags.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                        numDepartments:
                          type: integer
                        departments:
                          type: array
                          items:
                            type: string
                        _updatedAt:
                          type: string
                        description:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    tags:
                      - _id: nNJntq2n6GBdR8JC4
                        name: '331'
                        numDepartments: 2
                        departments:
                          - kxL4qaa29SMpy3ZXG
                          - WRY3EFGAT9Xh5NFBv
                        _updatedAt: '2022-11-28T07:17:31.973Z'
                        description: xfgh
                      - _id: bhA8DPhSdeBEJ2C94
                        name: QA-Passed
                        numDepartments: 0
                        departments: []
                        _updatedAt: '2022-08-30T12:14:54.173Z'
                      - _id: b8mvKqZXiAw36pDqE
                        name: VoIP
                        description: voip test
                        numDepartments: 0
                        departments: []
                        _updatedAt: '2022-03-01T06:27:43.113Z'
                      - _id: GR6zxTM5PMHxGwud6
                        name: t1
                        description: test1
                        numDepartments: 1
                        departments:
                          - kxL4qaa29SMpy3ZXG
                        _updatedAt: '2023-01-04T14:02:29.038Z'
                    count: 4
                    offset: 0
                    total: 4
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  '/api/v1/livechat/tags/{tagId}':
    get:
      tags:
        - Omnichannel Tags
      summary: Get a Tag
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        At least one of the following permissions is required:
          * `view-l-room`
          * `manage-livechat-tags`
      operationId: get-api-v1-livechat-tags-tagId
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: tagId
          in: path
          description: The tag ID.
          required: true
          schema:
            type: string
          example: pXkCRLGxD34y2FEZq
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  numDepartments:
                    type: integer
                  departments:
                    type: array
                    items:
                      type: string
                  _updatedAt:
                    type: string
                  description:
                    type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    _id: nNJntq2n6GBdR8JC4
                    name: '331'
                    numDepartments: 2
                    departments:
                      - kxL4qaa29SMpy3ZXG
                      - WRY3EFGAT9Xh5NFBv
                    _updatedAt: '2022-11-28T07:17:31.973Z'
                    description: test
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: Tag not found
  /api/v1/livechat/tags.list:
    get:
      tags:
        - Omnichannel Tags
      summary: List of Tags
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        This endpoint has been renamed to <a href="https://developer.rocket.chat/apidocs/get-list-of-tags" target="_blank">Get List of Tags</a> as from Rocket.Chat 5.0.


      operationId: get-api-v1-livechat-tags.list
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                        description:
                          type: string
                        numDepartments:
                          type: integer
                        departments:
                          type: array
                          items:
                            type: string
                        _updatedAt:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
                x-examples:
                  Example 1:
                    tags:
                      - _id: pXkCRLGxD34y2FEZq
                        name: Valuable  lead
                        description: high chances of conversion
                        numDepartments: 1
                        departments:
                          - GgYvrkAF63aeQmsh4
                        _updatedAt: '2021-06-28T16:43:57.688Z'
                    count: 1
                    offset: 0
                    total: 1
                    success: true
      deprecated: true
  /livechat/tags.getOne:
    get:
      tags:
        - Omnichannel Tags
      summary: Get One Tag
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        This endpoint has been renamed to  <b><a href='https://developer.rocket.chat/apidocs/get-a-tag' target='_blank'>Get a Tag</a><b> as from Rocket.Chat 5.0
      operationId: get-livechat-tags.getOne
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  numDepartments:
                    type: integer
                  departments:
                    type: array
                    items:
                      type: string
                  _updatedAt:
                    type: string
                  success:
                    type: boolean
                x-examples:
                  Example 1:
                    _id: pXkCRLGxD34y2FEZq
                    name: Valuable  lead
                    description: high chances of conversion
                    numDepartments: 1
                    departments:
                      - GgYvrkAF63aeQmsh4
                    _updatedAt: '2021-06-28T16:43:57.688Z'
                    success: true
      deprecated: true
  /api/v1/livechat/units:
    parameters: []
    post:
      summary: Create Unit
      operationId: post-api-v1-livechat-units
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  visibility:
                    type: string
                  type:
                    type: string
                  numMonitors:
                    type: integer
                  numDepartments:
                    type: integer
                  _updatedAt:
                    type: string
                  _id:
                    type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    name: unitxx2
                    visibility: public
                    type: u
                    numMonitors: 1
                    numDepartments: 1
                    _updatedAt: '2021-12-06T14:30:27.744Z'
                    _id: o5zNtKy7BcTMgyXtm
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'Match error: Expected object, got undefined'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      tags:
        - Omnichannel Units
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Create a <a href='https://docs.rocket.chat/docs/units' target='_blank'>unit</a> to group departments. Permission required: `manage-livechat-units`
        ### Changelog
        | Version      | Description |
        | ------------ | ------------|
        |4.2.0         | Added       |
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - unitData
                - unitMonitors
                - unitDepartments
              properties:
                unitData:
                  type: object
                  description: The object containing the unit information.
                  required:
                    - name
                    - visibility
                  properties:
                    name:
                      type: string
                      description: The name of the unit that you are creating.
                      example: unitxx2
                    visibility:
                      type: string
                      description: 'The visibility of the unit. For example, `public` or `private`.'
                unitMonitors:
                  type: array
                  description: The object containing the unit monitors information.
                  items:
                    type: object
                    required:
                      - monitorId
                      - username
                    properties:
                      monitorId:
                        type: string
                        description: The monitor ID that you want to add to the unit.
                        example: GT67Tv6x5p5y5xZWN
                      username:
                        type: string
                        description: The user name of the monitor.
                        example: testerio
                unitDepartments:
                  type: array
                  description: The object containing the department information.
                  items:
                    type: object
                    required:
                      - departmentId
                    properties:
                      departmentId:
                        type: string
                        description: The department ID that you want to add to the unit.
                        example: CgM4vfNNtj8t4QEMd
            examples:
              Example 1:
                value:
                  unitData:
                    name: unitxx2
                    visibility: public
                  unitMonitors:
                    - monitorId: GT67Tv6x5p5y5xZWN
                      username: testerio
                  unitDepartments:
                    - departmentId: CgM4vfNNtj8t4QEMd
    get:
      summary: Get List of Units
      tags:
        - Omnichannel Units
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  units:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                        visibility:
                          type: string
                        type:
                          type: string
                        numMonitors:
                          type: integer
                        numDepartments:
                          type: integer
                        _updatedAt:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    units:
                      - _id: SB3Z7uuEvd3aKPjnE
                        name: '12345'
                        visibility: public
                        type: u
                        numMonitors: 3
                        numDepartments: 3
                        _updatedAt: '2022-09-15T14:55:32.338Z'
                      - _id: uiPBkzcau5hrWwBkG
                        name: C
                        visibility: public
                        type: u
                        numMonitors: 1
                        numDepartments: 3
                        _updatedAt: '2022-08-29T20:18:07.442Z'
                      - _id: jsNuTwygAAWFPkt8u
                        name: Mtest
                        visibility: public
                        type: u
                        numMonitors: 1
                        numDepartments: 1
                        _updatedAt: '2022-09-15T11:44:32.103Z'
                      - _id: LnM2rzbknjYSkkd5p
                        name: Sales Unit
                        visibility: public
                        type: u
                        numMonitors: 1
                        numDepartments: 2
                        _updatedAt: '2022-09-15T11:44:15.721Z'
                      - _id: y6TXZeTzn4mAxDhL2
                        name: TestDept1
                        visibility: public
                        type: u
                        numMonitors: 4
                        numDepartments: 1
                        _updatedAt: '2022-08-30T09:55:19.240Z'
                      - _id: xiAnkznAh4RSJ8DQT
                        name: abc
                        visibility: public
                        type: u
                        numMonitors: 1
                        numDepartments: 3
                        _updatedAt: '2023-01-03T10:19:58.219Z'
                      - _id: TGjc7wN84KxQup9cF
                        name: business unit test
                        visibility: public
                        type: u
                        numMonitors: 3
                        numDepartments: 1
                        _updatedAt: '2022-11-21T11:16:01.698Z'
                    count: 7
                    offset: 0
                    total: 7
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      operationId: get-api-v1-livechat-units
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Permission required: `manage-livechat-units`
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - schema:
            type: string
          in: query
          name: text
          description: Enter some text to filter the results.
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/sort'
  '/api/v1/livechat/units/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: The unit ID.
    post:
      summary: Update Unit
      tags:
        - Omnichannel Units
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  visibility:
                    type: string
                  type:
                    type: string
                  numMonitors:
                    type: integer
                  numDepartments:
                    type: integer
                  _updatedAt:
                    type: string
                  _id:
                    type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    name: unitxx2
                    visibility: private
                    type: u
                    numMonitors: 1
                    numDepartments: 1
                    _updatedAt: '2021-12-06T14:40:59.478Z'
                    _id: o5zNtKy7BcTMgyXtm
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      operationId: post-api-v1-livechat-units-id
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Permission required: `manage-livechat-units`

        ### Changelog
        | Version      | Description |
        | ------------ | ------------|
        |4.2.0         | Added       |
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                unitData:
                  type: object
                  required:
                    - name
                    - visibility
                  description: The object containing the unit data.
                  properties:
                    name:
                      type: string
                      description: The name of the unit that you are creating.
                    visibility:
                      type: string
                      description: 'The visibility of the unit. For example, `public` or `private`.'
                unitMonitors:
                  type: array
                  description: The object containing the unit monitors information.
                  items:
                    type: object
                    properties:
                      monitorId:
                        type: string
                        description: The monitor ID that you want to add to the unit.
                      username:
                        type: string
                        description: The user name of the monitor.
                    required:
                      - monitorId
                      - username
                unitDepartments:
                  type: array
                  description: The object containing the department information.
                  items:
                    type: object
                    properties:
                      departmentId:
                        type: string
                        description: The department ID that you want to add to the unit.
                    required:
                      - departmentId
              required:
                - unitData
                - unitMonitors
                - unitDepartments
            examples:
              Example 1:
                value:
                  unitData:
                    name: unitxx2
                    visibility: private
                  unitMonitors:
                    - monitorId: GT67Tv6x5p5y5xZWN
                      username: testerio
                  unitDepartments:
                    - departmentId: CgM4vfNNtj8t4QEMd
    delete:
      summary: Delete a Unit
      tags:
        - Omnichannel Units
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      operationId: delete-api-v1-livechat-units-id
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Permission required: `manage-livechat-units`

        ### Changelog
        | Version      | Description |
        | ------------ | ------------|
        |4.2.0         | Added       |
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
    get:
      summary: Get a Unit
      operationId: get-api-v1-livechat-units-unitId
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  visibility:
                    type: string
                  type:
                    type: string
                  numMonitors:
                    type: integer
                  numDepartments:
                    type: integer
                  _updatedAt:
                    type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    _id: LnM2rzbknjYSkkd5p
                    name: Sales Unit
                    visibility: public
                    type: u
                    numMonitors: 1
                    numDepartments: 2
                    _updatedAt: '2022-09-15T11:44:15.721Z'
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Get details of a specific unit. <br>
        Permission required: `manage-livechat-units`
      tags:
        - Omnichannel Units
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'

  '/api/v1/livechat/units/{unitId}/monitors':
    parameters:
      - schema:
          type: string
        name: unitId
        in: path
        required: true
        description: The unit ID.
    get:
      summary: Get List of Unit Monitors
      operationId: get-api-v1-livechat-units-unitId-monitors
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  monitors:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        monitorId:
                          type: string
                        unitId:
                          type: string
                        _updatedAt:
                          type: string
                        username:
                          type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    monitors:
                      - _id: Gv8rxcv4WTEDnnGiT
                        monitorId: MJk4XK5QpsFWJzmSz
                        unitId: TGjc7wN84KxQup9cF
                        _updatedAt: '2022-11-21T11:16:01.708Z'
                        username: jjay
                      - _id: dvSh7G6WW6J5XykQw
                        monitorId: GdyoCfHfd3um5N9vP
                        unitId: TGjc7wN84KxQup9cF
                        _updatedAt: '2022-11-21T11:16:01.718Z'
                        username: j.coel
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Get the list of monitors associated with a specific unit. <br>
        Permission required: `manage-livechat-units`
      tags:
        - Omnichannel Units
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
  '/api/v1/livechat/units/{unitId}/departments/available':
    parameters:
      - schema:
          type: string
        name: unitId
        in: path
        required: true
        description: The unit ID.
    get:
      summary: Get Available Departments by Unit Id
      operationId: get-api-v1-livechat-units-unitId-departments-available
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  departments:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        enabled:
                          type: boolean
                        name:
                          type: string
                        description:
                          type: string
                        showOnRegistration:
                          type: boolean
                        showOnOfflineForm:
                          type: boolean
                        requestTagBeforeClosingChat:
                          type: boolean
                        email:
                          type: string
                        chatClosingTags:
                          type: array
                          items:
                            type: object
                            properties: {}
                        offlineMessageChannelName:
                          type: string
                        abandonedRoomsCloseCustomMessage:
                          type: string
                        waitingQueueMessage:
                          type: string
                        departmentsAllowedToForward:
                          type: array
                          items:
                            type: object
                            properties: {}
                        fallbackForwardDepartment:
                          type: string
                        _updatedAt:
                          type: string
                        numAgents:
                          type: integer
                        type:
                          type: string
                        ancestors:
                          type: array
                          items:
                            type: string
                        parentId:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    departments:
                      - _id: 64181a0728384134ed600dcc
                        enabled: false
                        name: Missing Money
                        description: ''
                        showOnRegistration: false
                        showOnOfflineForm: false
                        requestTagBeforeClosingChat: false
                        email: test@test.com
                        chatClosingTags: []
                        offlineMessageChannelName: Livestream
                        abandonedRoomsCloseCustomMessage: ''
                        waitingQueueMessage: ''
                        departmentsAllowedToForward: []
                        fallbackForwardDepartment: ''
                        _updatedAt: '2023-11-29T12:48:03.843Z'
                        numAgents: 3
                        type: d
                        ancestors:
                          - 6567236571f856761e61c9a2
                        parentId: 6567236571f856761e61c9a2
                    count: 1
                    offset: 0
                    total: 1
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Permission required: `manage-livechat-units`
      tags:
        - Omnichannel Units
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - schema:
            type: string
          in: query
          name: text
          description: Filter the result with the text.
        - schema:
            type: boolean
          in: query
          name: onlyMyDepartments
          description: Whether you want the result for the departments that you are part of.
  '/api/v1/livechat/units/{unitId}/departments':
    parameters:
      - schema:
          type: string
        name: unitId
        in: path
        required: true
        description: The unit ID.
    get:
      summary: Get Departments by Unit ID
      operationId: get-api-v1-livechat-units-unitId-departments
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  departments:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        enabled:
                          type: boolean
                        name:
                          type: string
                        description:
                          type: string
                        showOnRegistration:
                          type: boolean
                        showOnOfflineForm:
                          type: boolean
                        requestTagBeforeClosingChat:
                          type: boolean
                        email:
                          type: string
                        chatClosingTags:
                          type: array
                          items:
                            type: string
                        offlineMessageChannelName:
                          type: string
                        maxNumberSimultaneousChat:
                          type: string
                        visitorInactivityTimeoutInSeconds:
                          type: string
                        abandonedRoomsCloseCustomMessage:
                          type: string
                        waitingQueueMessage:
                          type: string
                        departmentsAllowedToForward:
                          type: string
                        _updatedAt:
                          type: string
                        numAgents:
                          type: integer
                        ancestors:
                          type: array
                          items:
                            type: string
                        parentId:
                          type: string
                        fallbackForwardDepartment:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    departments:
                      - _id: MfvRXBwEWY6tTwqFh
                        enabled: true
                        name: C
                        description: test dept
                        showOnRegistration: true
                        showOnOfflineForm: true
                        requestTagBeforeClosingChat: true
                        email: C@test.com
                        chatClosingTags:
                          - please add a tag
                        offlineMessageChannelName: ''
                        maxNumberSimultaneousChat: '2'
                        visitorInactivityTimeoutInSeconds: '0'
                        abandonedRoomsCloseCustomMessage: closed
                        waitingQueueMessage: please wait!
                        departmentsAllowedToForward: ''
                        _updatedAt: '2022-12-14T14:44:51.923Z'
                        numAgents: 5
                        ancestors:
                          - TGjc7wN84KxQup9cF
                        parentId: TGjc7wN84KxQup9cF
                        fallbackForwardDepartment: KgCzEB2gWngKp9JF3
                    count: 1
                    offset: 0
                    total: 1
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Permission required: `manage-livechat-units`
      tags:
        - Omnichannel Units
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
  /api/v1/livechat/units.list:
    parameters: []
    get:
      summary: List of Units
      operationId: get-api-v1-livechat-units.list
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  units:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                        visibility:
                          type: string
                        type:
                          type: string
                        numMonitors:
                          type: integer
                        numDepartments:
                          type: integer
                        _updatedAt:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
                x-examples:
                  Example 1:
                    units:
                      - _id: sriw2wmP2Zz2pPrre
                        name: Support
                        visibility: public
                        type: u
                        numMonitors: 3
                        numDepartments: 4
                        _updatedAt: '2021-06-28T22:10:01.295Z'
                    count: 1
                    offset: 0
                    total: 1
                    success: true
              examples: {}
      description: "<div style='text-align: center; margin: 1rem 0 1rem 0;'><img src='https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg' alt='Premium tag' style='display: block; margin: auto;'></div>\r\nThis endpoint has been renamed to Get List of Units from Rocket.Chat 5.0."

      tags:
        - Omnichannel Units
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      deprecated: true
  /api/v1/livechat/units.getOne:
    parameters: []
    get:
      summary: Get One Unit
      operationId: get-api-v1-livechat-units.getOne
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  visibility:
                    type: string
                  type:
                    type: string
                  numMonitors:
                    type: integer
                  numDepartments:
                    type: integer
                  _updatedAt:
                    type: string
                  success:
                    type: boolean
                x-examples:
                  Example 1:
                    _id: sriw2wmP2Zz2pPrre
                    name: Support
                    visibility: public
                    type: u
                    numMonitors: 3
                    numDepartments: 4
                    _updatedAt: '2021-06-28T22:10:01.295Z'
                    success: true
              examples: {}
      description: "<div style='text-align: center; margin: 1rem 0 1rem 0;'><img src='https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg' alt='Premium tag' style='display: block; margin: auto;'></div>\r\nThis endpoint has been renamed to Get a Unit from Rocket.Chat 5.0."

      tags:
        - Omnichannel Units
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - schema:
            type: string
          in: query
          name: unitId
          description: The unit ID.
      deprecated: true
  /api/v1/livechat/unitMonitors.list:
    parameters: []
    get:
      summary: List of Unit Monitors
      operationId: get-api-v1-livechat-unitsMonitors.list
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  monitors:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        monitorId:
                          type: string
                        unitId:
                          type: string
                        _updatedAt:
                          type: string
                        username:
                          type: string
                  success:
                    type: boolean
                x-examples:
                  Example 1:
                    monitors:
                      - _id: a8RSA5hSzuiKg34PG
                        monitorId: gxcJTYapi5mPxuAme
                        unitId: sriw2wmP2Zz2pPrre
                        _updatedAt: '2021-06-28T22:10:01.324Z'
                        username: Bruno.Solis
                      - _id: fTayxRuJiRCFfREWc
                        monitorId: Nn4ocDJqoJshcoFJi
                        unitId: sriw2wmP2Zz2pPrre
                        _updatedAt: '2021-06-28T22:10:01.329Z'
                        username: mauricio.pretto
                      - _id: X2keMaN4WX2zmA99u
                        monitorId: cLNSTRsipLCSq7qno
                        unitId: sriw2wmP2Zz2pPrre
                        _updatedAt: '2021-06-28T22:10:01.342Z'
                        username: miln.ru
                    success: true
              examples: {}
      description: "<div style='text-align: center; margin: 1rem 0 1rem 0;'><img src='https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg' alt='Premium tag' style='display: block; margin: auto;'></div>\r\nThis endpoint has been renamed to Get List of Unit Monitors from Rocket.Chat 5.0."

      tags:
        - Omnichannel Units
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      deprecated: true
  /api/v1/livechat/analytics/dashboards/conversations-by-status:
    get:
      tags:
        - Reports
      summary: Get Conversations by Status
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        View the metrics of omnichannel conversations in your workspace during a selected time range based on their status: **Open**, **Queued**, **On Hold**, or **Closed**.<br>

        Permission required: `view-livechat-reports`

        ### Changelog
        | Version      | Description |
        | -----------  | ------------|
        |6.4.0         | Added       |
      operationId: get-api-v1-livechat-analytics-dashboards-conversations-by-status
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        label:
                          type: string
                        value:
                          type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    total: 25
                    data:
                      - label: Closed
                        value: 24
                      - label: Open
                        value: 1
                      - label: Queued
                        value: 0
                      - label: On_Hold
                        value: 0
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/analytics/dashboards/conversations-by-department:
    get:
      tags:
        - Reports
      summary: Get Conversations by Departments
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>


        View the metrics of omnichannel conversations in your workspace during a selected time range based on their departments. <br>

        Permission required: `view-livechat-reports`

        ### Changelog
        | Version      | Description |
        | -----------  | ------------|
        |6.4.0         | Added       |
      operationId: get-api-v1-livechat-analytics-dashboards-conversations-by-department
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        label:
                          type: string
                        value:
                          type: integer
                  unspecified:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    total: 18
                    data:
                      - label: TestQueue
                        value: 1
                      - label: TestBH
                        value: 1
                      - label: Missing
                        value: 16
                    unspecified: 43
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/analytics/dashboards/conversations-by-tags:
    get:
      tags:
        - Reports
      summary: Get Conversations by Tags
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        View the metrics of omnichannel conversations in your workspace during a selected time range based on their tags. <br>

        Permission required: `view-livechat-reports`

        ### Changelog
        | Version      | Description |
        | ------------ | ------------|
        |6.4.0         | Added       |
      operationId: get-api-v1-livechat-analytics-dashboards-conversations-by-tags
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        label:
                          type: string
                        value:
                          type: integer
                  unspecified:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    total: 5
                    data:
                      - label: tech
                        value: 1
                      - label: solved
                        value: 1
                      - label: self
                        value: 1
                      - label: testtags
                        value: 2
                    unspecified: 55
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/analytics/dashboards/conversations-by-agent:
    get:
      tags:
        - Reports
      summary: Get Conversation by Agents
      description: |-

        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        View the metrics of omnichannel conversations in your workspace during a selected time range based on the agents in your workspace. <br>

        Permission required: `view-livechat-reports`

        ### Changelog
        | Version      | Description |
        | ------------ | ------------|
        |6.4.0         | Added       |
      operationId: get-api-v1-livechat-analytics-dashboards-conversations-by-agent
      parameters:
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/end'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        label:
                          type: string
                        value:
                          type: integer
                  unspecified:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    total: 51
                    data:
                      - label: 9iN96PXnDK7XAYESA
                        value: 4
                      - label: Dialog Bot
                        value: 1
                      - label: Jane Kim
                        value: 15
                      - label: Baek Kim
                        value: 1
                      - label: agent5
                        value: 5
                      - label: Rod
                        value: 5
                      - label: User One
                        value: 6
                      - label: oDCQTTquRFJWZtFxY
                        value: 1
                      - label: sDNa65jXv4JaiGKQP
                        value: 1
                      - label: testC
                        value: 12
                    unspecified: 9
                    success: true
        '400':
          $ref: '#/components/responses/startendError'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/sla:
    get:
      tags:
        - SLA Policies
      summary: Get List of SLA Policies
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        ### Changelog
        | Version      | Description |
        | ------------ | ------------|
        |6.0.0         | Added       |
      operationId: get-api-v1-livechat-sla
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: text
          in: query
          description: The text with which you want to filter the result.
          schema:
            type: string
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  sla:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                        description:
                          type: string
                        dueTimeInMinutes:
                          type: integer
                        _updatedAt:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    sla:
                      - _id: 641daf3d7718f90c810429c8
                        name: Minimal
                        description: 2m UI creat
                        dueTimeInMinutes: 2
                        _updatedAt: '2023-03-24T14:10:05.063Z'
                      - _id: 6417f67528384134ed600dc6
                        name: Try
                        description: Based on 1 min
                        dueTimeInMinutes: 1
                        _updatedAt: '2023-03-20T06:00:21.736Z'
                    count: 2
                    offset: 0
                    total: 2
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
    post:
      tags:
        - SLA Policies
      summary: Create SLA Policy
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Permission required: `manage-livechat-sla`

        ### Changelog
        | Version      | Description |
        | ------------ | ------------|
        |6.0.0         | Added       |
      operationId: post-api-v1-livechat-sla
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the SLA policy.
                description:
                  type: string
                  description: The SLA description.
                dueTimeInMinutes:
                  type: integer
                  description: The SLA due time.
              required:
                - name
                - description
                - dueTimeInMinutes
            examples:
              Example 1:
                value:
                  name: Optimum
                  description: OPtimum SLA
                  dueTimeInMinutes: 4
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  sla:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      dueTimeInMinutes:
                        type: integer
                      _id:
                        type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    sla:
                      name: Optimum
                      description: Optimum SLA
                      dueTimeInMinutes: 4
                      _id: 641db89a7718f90c810429cc
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''name'' [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: 'must have required property ''dueTimeInMinutes'' [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  '/api/v1/livechat/sla/{slaId}':
    get:
      tags:
        - SLA Policies
      summary: Get an SLA
      operationId: get-api-v1-livechat-sla-slaId
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Get details of a specific SLA policy. <br>
        At least one of the following permissions is required:
          * `manage-livechat-sla`
          * `view-l-room`

        ### Changelog
        | Version      | Description |
        | ------------ | ------------|
        |6.0.0         | Added       |
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: slaId
          in: path
          description: The ID of the SLA.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  dueTimeInMinutes:
                    type: integer
                  _updatedAt:
                    type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    _id: 641daf3d7718f90c810429c8
                    name: Minimal
                    description: 2m UI creat
                    dueTimeInMinutes: 2
                    _updatedAt: '2023-03-24T14:10:05.063Z'
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
    put:
      tags:
        - SLA Policies
      summary: Update an SLA
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>


        Update an existing SLA policy. <br>
        Permission required: `manage-livechat-sla`

        ### Changelog
        | Version      | Description |
        | ------------ | ------------|
        |6.0.0         | Added       |
      operationId: put-api-v1-livechat-sla-slaId
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: slaId
          in: path
          description: The ID of the SLA.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  sla:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      dueTimeInMinutes:
                        type: integer
                      _updatedAt:
                        type: string
                      _id:
                        type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    sla:
                      name: Minimal updated
                      description: Minimal SLA updated
                      dueTimeInMinutes: 7
                      _updatedAt: '2023-03-24T16:31:34.712Z'
                      _id: 641daf3d7718f90c810429c8
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''name'' [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: 'must have required property ''dueTimeInMinutes'' [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
    delete:
      tags:
        - SLA Policies
      summary: Delete an SLA
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Permission required: `manage-livechat-sla`

        ### Changelog
        | Version      | Description |
        | ------------ | ------------|
        |6.0.0         | Added       |
      operationId: delete-api-v1-livechat-sla-slaId
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: slaId
          in: path
          description: The ID of the SLA.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/connector.extension.getRegistrationInfoByUserId:
    get:
      tags:
        - Voice Channel
      summary: Get Voice Channel Registration Information
      description: |-
        Retrieves the user registration Information for the user ID.
        Permission required: `view-agent-extension-association`
      operationId: get-api-v1-connector.extension.getRegistrationInfoByUserId
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: id
          in: query
          description: The user ID whose registration is being retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  host:
                    type: string
                  callServerConfig:
                    type: object
                    properties:
                      websocketPort:
                        type: string
                      websocketPath:
                        type: string
                  extensionDetails:
                    type: object
                    properties:
                      extension:
                        type: string
                      password:
                        type: string
                      authtype:
                        type: string
                      state:
                        type: string
              examples:
                Success Example:
                  value:
                    host: omni-asterisk.dev.rocket.chat
                    callServerConfig:
                      websocketPort: '443'
                      websocketPath: 'wss://omni-asterisk.dev.rocket.chat/ws'
                    extensionDetails:
                      extension: '12342'
                      password: my$up3erP@ssw0rd
                      authtype: password
                      state: Not in use
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'Match error: Missing key ''id'''
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/voip/queues.getSummary:
    get:
      tags:
        - Voice Channel
      summary: Get Voice Channel Queue Summary
      description: 'Permission required: `inbound-voip-calls`'
      operationId: get-api-v1-voip-queues.getSummary
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  loggedin:
                    type: string
                  available:
                    type: string
                  callers:
                    type: string
                  holdtime:
                    type: string
                  talktime:
                    type: string
                  logestholdtime:
                    type: string
              examples:
                Example 1:
                  value:
                    name: string
                    loggedin: string
                    available: string
                    callers: string
                    holdtime: string
                    talktime: string
                    logestholdtime: string
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/voip/queues.getQueuedCallsForThisExtension:
    get:
      tags:
        - Voice Channel Queue Membership
      summary: Get Call Center Queue Membership Information
      description: 'Permission required: `inbound-voip-calls`'
      operationId: get-api-v1-voip-queues.getQueuedCallsForThisExtension
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: extension
          in: query
          description: The phone extension for VoIP.
          required: true
          schema:
            type: string
            example: '1293'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  extension:
                    type: string
                  queueCount:
                    type: string
                  callWaitingCount:
                    type: string
              examples:
                Success Example:
                  value:
                    extension: '12234'
                    queueCount: '1'
                    callWaitingCount: '2'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'Match error: Missing key ''extension'''
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/voip/queues.getMembershipSubscription:
    get:
      tags:
        - Voice Channel Queue Membership
      summary: Get Call Center Queue Membership Subscription Information
      description: 'Permission required: `inbound-voip-calls`'
      operationId: get-api-v1-voip-queues.getMembershipSubscription
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: extension
          in: query
          description: The phone extension for VoIP.
          schema:
            type: string
            example: '1293'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  queues:
                    type: object
                    properties:
                      name:
                        type: string
                      loggedin:
                        type: string
                      available:
                        type: string
                      callers:
                        type: string
                      holdtime:
                        type: string
                      talktime:
                        type: string
                      longestholdtime:
                        type: string
                  extension:
                    type: string
              examples:
                Success Example:
                  value:
                    queues:
                      name: event.queue
                      loggedin: event.loggedin
                      available: event.available
                      callers: event.available
                      holdtime: event.holdtime
                      talktime: event.talktime
                      longestholdtime: event.logestholdtime
                    extension: '1293'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'Match error: Missing key ''extension'''
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/voip/callServer/checkConnection:
    get:
      tags:
        - Voice Channel Server Connection
      summary: Check Call Server Connection
      description: |-
        Check the SIP call server connection status.
        Permission required: `manage-voip-contact-center-settings`
      operationId: get-api-v1-voip-callServer-checkConnection
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: websocketUrl
          in: query
          description: The websocket URL.
          required: true
          schema:
            type: string
            example: 'wss://omni-asterisk.dev.rocket.chat/ws'
        - name: host
          in: query
          description: The hostname of the call server.
          required: true
          schema:
            type: string
            example: localhost
        - name: port
          in: query
          description: The port number of the websocket.
          required: true
          schema:
            type: string
            example: '3000'
        - name: path
          in: query
          description: The path of the websocket.
          required: true
          schema:
            type: string
            example: test/voip
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    status: connected | connection-error
                    error: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: Incorrect / Insufficient Parameters
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/voip/managementServer/checkConnection:
    get:
      tags:
        - Voice Channel Server Connection
      summary: Check Management Server Connection
      description: |-
        Check the VoIP management server connection status.
        Permission required: `manage-voip-contact-center-settings`
      operationId: get-api-v1-voip-managementServer-checkConnection
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: host
          in: query
          description: The hostname of the management server.
          required: true
          schema:
            type: string
            example: localhost
        - name: port
          in: query
          description: The port number of the management server.
          required: true
          schema:
            type: string
            example: '3000'
        - name: username
          in: query
          description: The user name of the administrator user.
          required: true
          schema:
            type: string
            example: user1
        - name: password
          in: query
          description: The password of the administrator user.
          required: true
          schema:
            type: string
            example: idosfiejifc354
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    status: connected | connection-error
                    error: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'Match error: Missing key ''port'''
                Example 2:
                  value:
                    success: false
                    error: 'Match error: Missing key ''host'''
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/voip/events:
    post:
      tags:
        - Voice Channel Events
      summary: Send Call Center Events
      description: |-
        Send the VoIP client events.
        Permission required: `view-l-room`
        ### VoIP Client Events
        List of VoIP client Events available in enum format:
          ```json
          {"VOIP-CALL-STARTED" = "voip-call-started",
           "VOIP-CALL-ENDED" = "voip-call-ended",
           "VOIP-CALL-DECLINED" = "voip-call-declined",
           "VOIP-CALL-ON-HOLD" = "voip-call-on-hold",
           "VOIP-CALL-UNHOLD" = "voip-call-unhold",
           "VOIP-CALL-DURATION" = "voip-call-duration" }
          ```
      operationId: get-api-v1-voip-events
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'Match error: Missing key ''event'''
                Example 2:
                  value:
                    success: false
                    error: 'Match error: Missing key ''rid'''
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: Resource not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rid:
                  type: string
                event:
                  type: string
                comment:
                  type: string
            examples:
              Example 1:
                value:
                  rid: oWLW6v8c8oRGb4cC9
                  event: voip-call-started
  /api/v1/voip/rooms:
    get:
      tags:
        - Voice Channel Rooms
      summary: Get List of Call Center Rooms
      description: |-
        Permissions required:
          - For an admin: `view-livechat-rooms`
          - For an agent: `view-l-room`
      operationId: get-api-v1-voip-rooms
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: agents
          in: query
          description: List of agent information.
          schema:
            type: string
            example: 'string[]'
        - name: open
          in: query
          description: The status of the room. The value can be true or false.
          schema:
            type: string
        - name: createdAt
          in: query
          description: The date and time when the room was created.
          schema:
            type: string
            example: '2021-07-09T20:20:58.755Z'
        - name: closedAt
          in: query
          description: The date and time when the room was closed.
          schema:
            type: string
            example: '2021-07-09T21:20:58.755Z'
        - name: tags
          in: query
          description: List of tag information.
          schema:
            type: string
            example: 'string[]'
        - name: queue
          in: query
          description: The ID assigned to the call (opaque ID).
          schema:
            type: string
        - name: visitorId
          in: query
          description: The visitor ID.
          schema:
            type: string
        - name: direction
          in: query
          description: The direction of the call.
          schema:
            type: string
            example: inbound
        - name: roomName
          in: query
          description: The name of the room.
          schema:
            type: string
            example: The name of the room.
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  room:
                    type: object
                    properties:
                      _id:
                        type: string
                      fname:
                        type: string
                      t:
                        type: string
                      v:
                        type: object
                        properties:
                          _id:
                            type: string
                          username:
                            type: string
                          token:
                            type: string
                          status:
                            type: string
                          lastMessageTs:
                            type: string
                      departmentId:
                        type: string
                      default:
                        type: boolean
                      ro:
                        type: boolean
                      sysMes:
                        type: boolean
                      open:
                        type: boolean
                      msgs:
                        type: integer
                      ts:
                        type: string
                      _updatedAt:
                        type: string
                      lm:
                        type: string
                      customFields:
                        type: object
                        properties:
                          salesforceCrmContactId:
                            type: string
                      usersCount:
                        type: integer
                      cl:
                        type: boolean
                      departmentAncestors:
                        type: array
                        items:
                          type: string
                      lastMessage:
                        type: object
                        properties:
                          _id:
                            type: string
                          rid:
                            type: string
                          msg:
                            type: string
                          token:
                            type: string
                          alias:
                            type: string
                          ts:
                            type: string
                          u:
                            type: object
                            properties:
                              _id:
                                type: string
                              username:
                                type: string
                              name:
                                type: string
                          _updatedAt:
                            type: string
                          urls:
                            type: array
                            items:
                              type: object
                          mentions:
                            type: array
                            items:
                              type: object
                          channels:
                            type: array
                            items:
                              type: object
                          md:
                            type: array
                            items:
                              type: object
                              properties:
                                type:
                                  type: string
                                value:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                      value:
                                        type: string
                          newRoom:
                            type: boolean
                          showConnecting:
                            type: boolean
                      metrics:
                        type: object
                        properties:
                          reaction:
                            type: object
                            properties:
                              fd:
                                type: string
                              ft:
                                type: number
                              tt:
                                type: number
                          response:
                            type: object
                            properties:
                              avg:
                                type: number
                              fd:
                                type: string
                              ft:
                                type: number
                              total:
                                type: integer
                              tt:
                                type: number
                          v:
                            type: object
                            properties:
                              lq:
                                type: string
                          servedBy:
                            type: object
                            properties:
                              lr:
                                type: string
                      servedBy:
                        type: object
                        properties:
                          _id:
                            type: string
                          username:
                            type: string
                          ts:
                            type: string
                      waitingResponse:
                        type: boolean
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    room:
                      _id: kCJDd5peKiZnGJLPq
                      fname: Mary
                      t: l
                      v:
                        _id: 47Dajwh9DjpnTAugW
                        username: guest-165
                        token: 8s7e9ony6ctl27e1qf8kue
                        status: offline
                        lastMessageTs: '2021-07-09T20:20:58.755Z'
                      departmentId: CAJioQNAvLnYWTy8i
                      default: false
                      ro: false
                      sysMes: true
                      open: true
                      msgs: 7
                      ts: '2021-07-09T20:12:19.795Z'
                      _updatedAt: '2021-07-09T20:21:07.334Z'
                      lm: '2021-07-09T20:20:58.755Z'
                      customFields:
                        salesforceCrmContactId: 0032y000009mtOIAAY
                      usersCount: 2
                      cl: false
                      departmentAncestors:
                        - sriw2wmP2Zz2pPrre
                      lastMessage:
                        _id: SgrsSm3HNGrG5xTmk
                        rid: kCJDd5peKiZnGJLPq
                        msg: d
                        token: 8s7e9ony6ctl27e1qf8kue
                        alias: Mary
                        ts: '2021-07-09T20:20:58.755Z'
                        u:
                          _id: 47Dajwh9DjpnTAugW
                          username: guest-165
                          name: Mary
                        _updatedAt: '2021-07-09T20:20:58.896Z'
                        urls: []
                        mentions: []
                        channels: []
                        md:
                          - type: PARAGRAPH
                            value:
                              - type: PLAIN_TEXT
                                value: d
                        newRoom: false
                        showConnecting: true
                      metrics:
                        reaction:
                          fd: '2021-07-09T20:19:53.243Z'
                          ft: 23.821
                          tt: 24.006
                        response:
                          avg: 226.4365
                          fd: '2021-07-09T20:19:53.243Z'
                          ft: 452.688
                          total: 2
                          tt: 452.873
                        v:
                          lq: '2021-07-09T20:20:58.755Z'
                        servedBy:
                          lr: '2021-07-09T20:19:53.077Z'
                      servedBy:
                        _id: XycfA5CetCPuEjqxw
                        username: kim.jane
                        ts: '2021-07-09T20:19:29.422Z'
                      waitingResponse: true
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/voip/room:
    get:
      tags:
        - Voice Channel Rooms
      summary: Create or Get Call Center Room
      description: 'Creates a VoIP room if the room ID is not passed; otherwise, it gets an existing room based on the room ID and token.'
      operationId: get-api-v1-voip-room
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: token
          in: query
          description: The visitor token.
          schema:
            type: string
            example: 867ad6a09fc4af29f6f1f2a9cf1deaba
          required: true
        - name: agentId
          in: query
          description: The agent ID.
          schema:
            type: string
            example: 6vHSSqdBHdm2
          required: true
        - name: rid
          in: query
          description: 'The room ID. If the room ID is not provided, a new room is created. If the room ID is provided, the room''s details are returned, if the room exists.'
          schema:
            type: string
            example: jiuriewcnm2R4gfi
        - schema:
            type: string
            example: inbound
          in: query
          name: direction
          description: 'The direction of the call, inbound or outbound.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  room:
                    type: object
                    properties:
                      _id:
                        type: string
                      fname:
                        type: string
                      t:
                        type: string
                      v:
                        type: object
                        properties:
                          _id:
                            type: string
                          username:
                            type: string
                          token:
                            type: string
                          status:
                            type: string
                          lastMessageTs:
                            type: string
                      departmentId:
                        type: string
                      default:
                        type: boolean
                      ro:
                        type: boolean
                      sysMes:
                        type: boolean
                      open:
                        type: boolean
                      msgs:
                        type: integer
                      ts:
                        type: string
                      _updatedAt:
                        type: string
                      lm:
                        type: string
                      customFields:
                        type: object
                        properties:
                          salesforceCrmContactId:
                            type: string
                      usersCount:
                        type: integer
                      cl:
                        type: boolean
                      departmentAncestors:
                        type: array
                        items:
                          type: string
                      lastMessage:
                        type: object
                        properties:
                          _id:
                            type: string
                          rid:
                            type: string
                          msg:
                            type: string
                          token:
                            type: string
                          alias:
                            type: string
                          ts:
                            type: string
                          u:
                            type: object
                            properties:
                              _id:
                                type: string
                              username:
                                type: string
                              name:
                                type: string
                          _updatedAt:
                            type: string
                          urls:
                            type: array
                            items:
                              type: object
                          mentions:
                            type: array
                            items:
                              type: object
                          channels:
                            type: array
                            items:
                              type: object
                          md:
                            type: array
                            items:
                              type: object
                              properties:
                                type:
                                  type: string
                                value:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                      value:
                                        type: string
                          newRoom:
                            type: boolean
                          showConnecting:
                            type: boolean
                      metrics:
                        type: object
                        properties:
                          reaction:
                            type: object
                            properties:
                              fd:
                                type: string
                              ft:
                                type: number
                              tt:
                                type: number
                          response:
                            type: object
                            properties:
                              avg:
                                type: number
                              fd:
                                type: string
                              ft:
                                type: number
                              total:
                                type: integer
                              tt:
                                type: number
                          v:
                            type: object
                            properties:
                              lq:
                                type: string
                          servedBy:
                            type: object
                            properties:
                              lr:
                                type: string
                      servedBy:
                        type: object
                        properties:
                          _id:
                            type: string
                          username:
                            type: string
                          ts:
                            type: string
                      waitingResponse:
                        type: boolean
                  newRoom:
                    type: boolean
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    room:
                      _id: kCJDd5peKiZnGJLPq
                      fname: Mary
                      t: l
                      v:
                        _id: 47Dajwh9DjpnTAugW
                        username: guest-165
                        token: 8s7e9ony6ctl27e1qf8kue
                        status: offline
                        lastMessageTs: '2021-07-09T20:20:58.755Z'
                      departmentId: CAJioQNAvLnYWTy8i
                      default: false
                      ro: false
                      sysMes: true
                      open: true
                      msgs: 7
                      ts: '2021-07-09T20:12:19.795Z'
                      _updatedAt: '2021-07-09T20:21:07.334Z'
                      lm: '2021-07-09T20:20:58.755Z'
                      customFields:
                        salesforceCrmContactId: 0032y000009mtOIAAY
                      usersCount: 2
                      cl: false
                      departmentAncestors:
                        - sriw2wmP2Zz2pPrre
                      lastMessage:
                        _id: SgrsSm3HNGrG5xTmk
                        rid: kCJDd5peKiZnGJLPq
                        msg: d
                        token: 8s7e9ony6ctl27e1qf8kue
                        alias: Mary
                        ts: '2021-07-09T20:20:58.755Z'
                        u:
                          _id: 47Dajwh9DjpnTAugW
                          username: guest-165
                          name: Mary
                        _updatedAt: '2021-07-09T20:20:58.896Z'
                        urls: []
                        mentions: []
                        channels: []
                        md:
                          - type: PARAGRAPH
                            value:
                              - type: PLAIN_TEXT
                                value: d
                        newRoom: false
                        showConnecting: true
                      metrics:
                        reaction:
                          fd: '2021-07-09T20:19:53.243Z'
                          ft: 23.821
                          tt: 24.006
                        response:
                          avg: 226.4365
                          fd: '2021-07-09T20:19:53.243Z'
                          ft: 452.688
                          total: 2
                          tt: 452.873
                        v:
                          lq: '2021-07-09T20:20:58.755Z'
                        servedBy:
                          lr: '2021-07-09T20:19:53.077Z'
                      servedBy:
                        _id: XycfA5CetCPuEjqxw
                        username: kim.jane
                        ts: '2021-07-09T20:19:29.422Z'
                      waitingResponse: true
                    newRoom: false
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: |-
                      must have required property 'token'
                       must have required property 'rid'
                       must match exactly one schema in oneOf [invalid-params]
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/voip/room.close:
    post:
      tags:
        - Voice Channel Rooms
      summary: Close Call Center Room
      description: 'Permission required: `inbound-voip-calls`'
      operationId: post-api-v1-voip-room.close
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - rid
                - token
              properties:
                rid:
                  type: string
                  description: The ID of the open room.
                token:
                  type: string
                  description: The visitor token.
            examples:
              Example 1:
                value:
                  rid: c9YW3rejo7HeL6ZDW
                  token: yHoawq4s9bDn4dM5H
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  rid:
                    type: string
              examples:
                Success Example:
                  value:
                    rid: c9YW3rejo7HeL6ZDW
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''rid'' [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: 'must have required property ''token'' [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/livechat/visitor:
    post:
      summary: Register Livechat Visitor
      operationId: post-api-v1-livechat-visitor
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  visitor:
                    type: object
                    properties:
                      _id:
                        type: string
                      username:
                        type: string
                      status:
                        type: string
                      ts:
                        type: string
                      _updatedAt:
                        type: string
                      name:
                        type: string
                      phone:
                        type: array
                        items:
                          type: object
                          properties:
                            phoneNumber:
                              type: string
                      token:
                        type: string
                      visitorEmails:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                      department:
                        type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    visitor:
                      _id: 642fc15452492a08c3a756de
                      username: guest-19
                      status: online
                      ts: '2023-04-07T07:08:04.375Z'
                      _updatedAt: '2023-11-03T08:23:23.449Z'
                      name: Livechat Visitor
                      phone:
                        - phoneNumber: 55 51 5555-5555
                      token: iNKE8a6k6cjbqWhWd
                      visitorEmails:
                        - address: visitor@rocket.chat
                      department: 64181a0728384134ed600dcc
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'Match error: Missing key ''visitor'''
                Example 2:
                  value:
                    success: false
                    error: 'Match error: Missing key ''token'' in field visitor'
      description: 'Register a visitor''s information before creating a new Omnichannel room. You can set basic information such as name, phone, custom fields, and the initial department.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                visitor:
                  type: object
                  description: Enter the body parameters in the `visitor` object.
                  required:
                    - token
                  properties:
                    name:
                      type: string
                      description: The visitor's name.
                    email:
                      type: string
                      description: The visitor's email.
                    department:
                      type: string
                      description: The department that the visitor wants to register to.
                    token:
                      type: string
                      description: Enter a random unique string as the visitor token.
                    phone:
                      type: string
                      description: The visitor's phone number.
                    username:
                      type: string
                      description: The agent's username.
                    customFields:
                      type: array
                      description: 'Enter the custom field key, value, and whether you want to overwrite this information.'
                      items:
                        type: object
                        properties:
                          key:
                            type: string
                            example: address
                          value:
                            type: string
                            example: Rocket.Chat street
                          overwrite:
                            type: boolean
              required:
                - visitor
            examples:
              Example 1:
                value:
                  visitor:
                    name: Livechat Visitor
                    email: visitor@rocket.chat
                    department: Support
                    token: iNKE8a6k6cjbqWhWd
                    phone: 55 51 5555-5555
                    customFields:
                      - key: address
                        value: Rocket.Chat street
                        overwrite: true
      tags:
        - Omnichannel Visitors
  '/api/v1/livechat/visitor/{token}':
    parameters:
      - schema:
          type: string
        name: token
        in: path
        required: true
        description: The visitor token.
    get:
      summary: Get Visitor Information
      operationId: get-api-v1-livechat-visitor-token
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  visitor:
                    type: object
                    properties:
                      _id:
                        type: string
                      username:
                        type: string
                      _updatedAt:
                        type: string
                      token:
                        type: string
                      phone:
                        type: array
                        items:
                          type: object
                          properties:
                            phoneNumber:
                              type: string
                      visitorEmails:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                      name:
                        type: string
                      livechatData:
                        type: object
                        properties:
                          address:
                            type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    visitor:
                      _id: sGtcfEYz852uguxaS
                      username: guest-7
                      _updatedAt: '2018-09-21T14:10:56.529Z'
                      token: iNKE8a6k6cjbqWhWd
                      phone:
                        - phoneNumber: 55 51 5555-5555
                      visitorEmails:
                        - address: visitor@rocket.chat
                      name: Livechat Visitor
                      livechatData:
                        address: Rocket.Chat street
                    success: true
      description: Get the details of a specific visitor.
      tags:
        - Omnichannel Visitors
    delete:
      summary: Delete Visitor
      tags:
        - Omnichannel Visitors
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  visitor:
                    type: object
                    properties:
                      _id:
                        type: string
                      ts:
                        type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    visitor:
                      _id: 47Dajwh9DjpnTAugW
                      ts: '2021-07-18T13:28:38.962Z'
                    success: true
      operationId: delete-api-v1-livechat-visitor-token
  /api/v1/livechat/visitors.info:
    parameters: []
    get:
      summary: Get Visitor Information by ID
      operationId: get-api-v1-livechat-visitor.info
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  visitor:
                    type: object
                    properties:
                      _id:
                        type: string
                      username:
                        type: string
                      status:
                        type: string
                      ts:
                        type: string
                      _updatedAt:
                        type: string
                      name:
                        type: string
                      phone:
                        type: array
                        items:
                          type: object
                          properties:
                            phoneNumber:
                              type: string
                      token:
                        type: string
                      visitorEmails:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                      department:
                        type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    visitor:
                      _id: 642fc15452492a08c3a756de
                      username: guest-19
                      status: online
                      ts: '2023-04-07T07:08:04.375Z'
                      _updatedAt: '2023-11-03T08:23:23.449Z'
                      name: Livechat Visitor
                      phone:
                        - phoneNumber: 55 51 5555-5555
                      token: iNKE8a6k6cjbqWhWd
                      visitorEmails:
                        - address: visitor@rocket.chat
                      department: 64181a0728384134ed600dcc
                    success: true
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''visitorId'' [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
      description: Get the information of a specific visitor.
      parameters:
        - schema:
            type: string
          in: query
          name: visitorId
          description: The visitor ID.
          required: true
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      tags:
        - Omnichannel Visitors
  '/api/v1/livechat/visitor/{token}/room':
    parameters:
      - schema:
          type: string
        name: token
        in: path
        required: true
        description: The visitor token.
    get:
      summary: Get Open Conversation of a Visitor
      tags:
        - Omnichannel Visitors
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  rooms:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        t:
                          type: string
                        cl:
                          type: boolean
                        servedBy:
                          type: object
                          properties:
                            _id:
                              type: string
                            username:
                              type: string
                            ts:
                              type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    rooms:
                      - _id: D2hej3mmvkwyB4HR6
                        t: l
                        cl: false
                        servedBy:
                          _id: XycfA5CetCPuEjqxw
                          username: kim.jane
                          ts: '2021-07-18T11:50:38.822Z'
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
      operationId: get-api-v1-livechat-visitor-token-room
      description: Retrieve open conversations associated with a particular visitor.
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
  /api/v1/livechat/visitors.search:
    parameters: []
    get:
      summary: Search Visitors by Term
      tags:
        - Omnichannel Visitors
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  visitors:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        username:
                          type: string
                        name:
                          type: string
                        visitorEmails:
                          type: array
                          items:
                            type: object
                            properties:
                              address:
                                type: string
                        lastChat:
                          type: object
                          properties:
                            _id:
                              type: string
                            ts:
                              type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    visitors:
                      - _id: 6410749f28384134ed600ce4
                        username: guest-14
                        name: James
                        visitorEmails:
                          - address: pilebe6631@kaudat.com
                        lastChat:
                          _id: eJ5ZzeT2XkLtcBkMM
                          ts: '2023-03-14T13:21:02.239Z'
                      - _id: 63db8d4990fe6eda42ad429a
                        username: guest-3
                        name: James
                        visitorEmails:
                          - address: f.r@rocket.chat
                        lastChat:
                          _id: 82htiMFZLCtvRFqZi
                          ts: '2023-02-06T12:34:53.392Z'
                    count: 2
                    offset: 0
                    total: 2
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''term'' [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
      operationId: get-api-v1-livechat-visitors-search
      description: Search Livechat visitors using a specific term.
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - schema:
            type: string
          in: query
          name: term
          description: 'The visitor''s name, username, email, or phone.'
          required: true
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/sort'
  '/api/v1/livechat/visitors.pagesVisited/{roomId}':
    parameters:
      - schema:
          type: string
        name: roomId
        in: path
        required: true
        description: The room ID.
    get:
      summary: Get Pages Visited by Livechat Visitor
      tags:
        - Omnichannel Visitors
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  pages:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        t:
                          type: string
                        ts:
                          type: string
                        msg:
                          type: string
                        u:
                          type: object
                          properties:
                            _id:
                              type: string
                            username:
                              type: string
                            name:
                              type: string
                        groupable:
                          type: boolean
                        navigation:
                          type: object
                          properties:
                            page:
                              type: object
                              properties:
                                change:
                                  type: string
                                title:
                                  type: string
                                location:
                                  type: object
                                  properties:
                                    href:
                                      type: string
                            token:
                              type: string
                        expireAt:
                          type: integer
                        _updatedAt:
                          type: string
                        rid:
                          type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    pages:
                      - _id: 6523fbf5a2f73c7460e18d60
                        t: livechat_navigation_history
                        ts: '2023-10-09T13:11:17.968Z'
                        msg: 'Document - https://s3.amazonaws.com/uploads.use1.cloud.rocket.cht.html%22'
                        u:
                          _id: rocket.cat
                          username: rocket.cat
                          name: Rocket.Cat
                        groupable: false
                        navigation:
                          page:
                            change: url
                            title: Document
                            location:
                              href: 'https://s3.amazonaws.com/uploads.use1.cloud.rocket.cht.html%22'
                          token: 54fc5544030bcecda053311cb6b98920bdf953f242c12
                        expireAt: 1699449077968
                        _updatedAt: '2023-10-09T13:12:00.608Z'
                        rid: MmGnqizEa8pvc9LRg
                    count: 1
                    offset: 0
                    total: 1
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
      operationId: get-api-v1-livechat-visitors.pagesVisited-roomId
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
  '/api/v1/livechat/visitors.chatHistory/room/{roomId}/visitor/{visitorId}':
    parameters:
      - schema:
          type: string
        name: roomId
        in: path
        required: true
        description: The room ID.
      - schema:
          type: string
        name: visitorId
        in: path
        required: true
        description: The visitor ID.
    get:
      summary: Get Livechat Visitor Chat History
      tags:
        - Omnichannel Visitors
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  history:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        msgs:
                          type: integer
                        usersCount:
                          type: integer
                        lm:
                          type: string
                        fname:
                          type: string
                        t:
                          type: string
                        ts:
                          type: string
                        departmentId:
                          type: string
                        v:
                          type: object
                          properties:
                            _id:
                              type: string
                            username:
                              type: string
                            token:
                              type: string
                            status:
                              type: string
                            lastMessageTs:
                              type: string
                        cl:
                          type: boolean
                        open:
                          type: boolean
                        _updatedAt:
                          type: string
                        departmentAncestors:
                          type: array
                          items:
                            type: string
                        lastMessage:
                          type: object
                          properties:
                            _id:
                              type: string
                            rid:
                              type: string
                            msg:
                              type: string
                            token:
                              type: string
                            alias:
                              type: string
                            ts:
                              type: string
                            u:
                              type: object
                              properties:
                                _id:
                                  type: string
                                username:
                                  type: string
                                name:
                                  type: string
                            unread:
                              type: boolean
                            _updatedAt:
                              type: string
                            urls:
                              type: array
                              items:
                                type: object
                                properties: {}
                            mentions:
                              type: array
                              items:
                                type: object
                                properties: {}
                            channels:
                              type: array
                              items:
                                type: object
                                properties: {}
                            md:
                              type: array
                              items:
                                type: object
                                properties:
                                  type:
                                    type: string
                                  value:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                        value:
                                          type: string
                            newRoom:
                              type: boolean
                            showConnecting:
                              type: boolean
                        metrics:
                          type: object
                          properties:
                            reaction:
                              type: object
                              properties:
                                fd:
                                  type: string
                                ft:
                                  type: number
                                tt:
                                  type: number
                            response:
                              type: object
                              properties:
                                avg:
                                  type: number
                                fd:
                                  type: string
                                ft:
                                  type: number
                                total:
                                  type: integer
                                tt:
                                  type: number
                            v:
                              type: object
                              properties:
                                lq:
                                  type: string
                        waitingResponse:
                          type: boolean
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    history:
                      - _id: hhMKhHnnbY79mGs9K
                        msgs: 2
                        usersCount: 1
                        lm: '2021-07-22T17:17:04.937Z'
                        fname: Maria
                        t: l
                        ts: '2021-07-22T17:17:04.216Z'
                        departmentId: CAJioQNAvLnYWTy8i
                        v:
                          _id: QyBAKC5Wc8tcv6cco
                          username: guest-537
                          token: 8s7e9ony6ctl27e1qf8kue
                          status: online
                          lastMessageTs: '2021-07-22T17:17:04.937Z'
                        cl: false
                        open: true
                        _updatedAt: '2021-07-22T17:17:05.078Z'
                        departmentAncestors:
                          - sriw2wmP2Zz2pPrre
                        lastMessage:
                          _id: YfrxZ6gmaYLpPTxFP
                          rid: hhMKhHnnbY79mGs9K
                          msg: hi
                          token: 8s7e9ony6ctl27e1qf8kue
                          alias: Maria
                          ts: '2021-07-22T17:17:04.937Z'
                          u:
                            _id: QyBAKC5Wc8tcv6cco
                            username: guest-537
                            name: Maria
                          unread: true
                          _updatedAt: '2021-07-22T17:17:05.044Z'
                          urls: []
                          mentions: []
                          channels: []
                          md:
                            - type: PARAGRAPH
                              value:
                                - type: PLAIN_TEXT
                                  value: hi
                          newRoom: false
                          showConnecting: true
                        metrics:
                          reaction:
                            fd: '2021-07-22T17:17:04.449Z'
                            ft: 0.233
                            tt: 0.233
                          response:
                            avg: 0.233
                            fd: '2021-07-22T17:17:04.449Z'
                            ft: 0.233
                            total: 1
                            tt: 0.233
                          v:
                            lq: '2021-07-22T17:17:04.937Z'
                        waitingResponse: true
                    count: 1
                    offset: 0
                    total: 1
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
      operationId: get-api-v1-livechat-visitors.chatHistory-room-roomId-visitor-visitorId
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/sort'
  '/api/v1/livechat/visitors.searchChats/room/{roomId}/visitor/{visitorId}':
    parameters:
      - schema:
          type: string
        name: roomId
        in: path
        required: true
        description: The room ID.
      - schema:
          type: string
        name: visitorId
        in: path
        required: true
        description: The visitor ID.
    get:
      summary: Search Visitor Chat
      tags:
        - Omnichannel Visitors
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  history:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        msgs:
                          type: integer
                        fname:
                          type: string
                        ts:
                          type: string
                        v:
                          type: object
                          properties:
                            _id:
                              type: string
                            username:
                              type: string
                            token:
                              type: string
                            status:
                              type: string
                            lastMessageTs:
                              type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    history:
                      - _id: hhMKhHnnbY79mGs9K
                        msgs: 2
                        fname: Maria
                        ts: '2021-07-22T17:17:04.216Z'
                        v:
                          _id: QyBAKC5Wc8tcv6cco
                          username: guest-537
                          token: 8s7e9ony6ctl27e1qf8kue
                          status: online
                          lastMessageTs: '2021-07-22T17:17:04.937Z'
                    count: 1
                    offset: 0
                    total: 1
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
      operationId: get-api-v1-livechat-visitors.searchChats-room-roomId-visitor-visitorId
      description: Get the Livechat information of a visitor. This endpoint returns only those chats that are served and closed.
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
  /api/v1/livechat/visitors.autocomplete:
    parameters: []
    get:
      summary: Autocomplete Visitors
      tags:
        - Omnichannel Visitors
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        username:
                          type: string
                        name:
                          type: string
                        custom_name:
                          type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    items:
                      - _id: 6400be90fa0ed7dd90509300
                        username: guest-5
                        name: Jane
                        custom_name: guest-5 - An agent
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''selector'' [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
      operationId: get-api-v1-livechat-visitors.autocomplete
      description: Autocomplete a visitor's name.
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - schema: {}
          in: query
          name: selector
          description: 'Enter the exceptions or the conditions that you want to search for. For example, { "exceptions" : [], "conditions" : {"username": "guest-5"}}'
          required: true
  /api/v1/livechat/visitors.status:
    parameters: []
    post:
      summary: Set Visitor's Status
      operationId: post-api-v1-livechat-visitors.status
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  status:
                    type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    token: 54fc5544030bcecda0533
                    status: busy
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'Match error: Missing key ''token'''
                Example 2:
                  value:
                    success: false
                    error: 'Match error: Missing key ''status'''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: The visitor token.
                status:
                  type: string
                  description: The visitor status.
              required:
                - token
                - status
            examples:
              Example 1:
                value:
                  token: 54fc5544030bcecda0533
                  status: busy
      tags:
        - Omnichannel Visitors
  /api/v1/omnichannel/extensions:
    get:
      tags:
        - Voice Channel Extensions
      summary: Get List of Call Center Extensions
      description: 'Permission required: `manage-agent-extension-association`'
      operationId: get-api-v1-omnichannel-extensions
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: status
          in: query
          description: The status of the extension.
          schema:
            type: string
            example: free
        - name: agentId
          in: query
          description: The agent ID.
          schema:
            type: string
        - name: queues
          in: query
          description: The queues associated with the extension.
          schema:
            type: string
        - name: extension
          in: query
          description: Extension number.
          schema:
            type: string
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/omnichannel/extension:
    get:
      tags:
        - Voice Channel Extensions
      summary: Get Call Center Extension
      description: 'Permission required: `manage-agent-extension-association`'
      operationId: get-api-v1-omnichannel-extension
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: userId
          in: query
          description: 'The value of the user ID. Alternatively, you can enter the `username` parameter.'
          schema:
            type: string
          required: true
        - name: type
          in: query
          description: 'The type of extension. The values can be: `free`, `allocated`, and  `available`'
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  extensions:
                    type: string
              examples:
                Success Example:
                  value:
                    extensions: '10023'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'Match error: Failed Match.OneOf, Match.Maybe or Match.Optional validation'
                Example 2:
                  value:
                    success: false
                    error: Connection error
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: Extension not found
  '/api/v1/omnichannel/agent/extension/{username}':
    get:
      tags:
        - Agent Extensions
      summary: Get Omnichannel Agent Extension
      description: 'Permission required: `view-agent-extension-association`'
      operationId: get-api-v1-omnichannel-agent-extension-username
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: username
          in: path
          description: The user name of the agent.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: {}
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
    delete:
      tags:
        - Agent Extensions
      summary: Delete Omnichannel Agent Extension
      description: 'Permission required: `manage-agent-extension-association`'
      operationId: delete-api-v1-omnichannel-agent-extension-username
      parameters:
        - name: username
          in: path
          description: The user name of the agent.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
    parameters:
      - schema:
          type: string
          example: agent5
        name: username
        in: path
        required: true
        description: The agent's username
  /api/v1/omnichannel/agent/extension:
    post:
      tags:
        - Agent Extensions
      summary: Update Omnichannel Agent Extension
      description: |-
        Update the extension associated with a specific agent.
        Permission required: `manage-agent-extension-association`
      operationId: post-api-v1-omnichannel-agent-extension
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: userId
          in: query
          description: 'The value of the user ID. Alternatively, you can enter the `username` parameter.'
          schema:
            type: string
          required: true
        - name: extension
          in: query
          description: The extension number that you want to update.
          schema:
            type: string
          required: true
      responses:
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/canned-responses:
    post:
      tags:
        - Canned Responses
      summary: Create or Update or Delete a Canned Response
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        To create and update <a href='https://docs.rocket.chat/docs/canned-responses' target='_blank'>canned responses</a>, the following permissions are required:
        * `save-canned-responses`
        * `save-all-canned-responses`

        To delete a canned response, the following permission is required:
        * `remove-canned-responses`

        ### Changelog
        | Version      | Description |
        | ------------ | ------------|
        |1.0.0         | Added       |
      operationId: post-api-v1-canned-responses
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - shortcut
                - text
                - scope
              properties:
                shortcut:
                  type: string
                  description: The shortcut to trigger the message snippet.
                text:
                  type: string
                  description: The message snippet.
                scope:
                  type: string
                  description: 'The scope of the canned response. It can either be global, user or department.'
                tags:
                  type: array
                  description: The tags for your canned response.
                  items:
                    type: string
                departmentId:
                  type: string
                  description: The departmentId where the canned response belongs to. It is required if the scope is department.
                _id:
                  type: string
                  description: The canned response's ID.
            examples:
              Example 1:
                value:
                  shortcut: test-canned
                  text: This is an example test for canned response
                  scope: global
                  tags:
                    - tag1
                    - tag2
        description: |-
          Note:
            * To update a canned response, the `_id` parameter is required along with the other required parameters. This parameter is not used to create a canned response.
            * To delete a canned response, enter the `_id` of the canned response that you want to delete. No other parameter is required.
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''shortcut'' [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: 'must have required property ''scope'' [invalid-params]'
                    errorType: invalid-params
                Example 3:
                  value:
                    success: false
                    error: 'Shortcut provided already exists [error-invalid-shortcut]'
                    errorType: error-invalid-shortcut
                    details:
                      method: saveCannedResponse
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
    get:
      tags:
        - Canned Responses
      summary: List All Canned Responses
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Get a list of all canned responses in the workspace.

        Permissions required:
        - `view-canned-responses`
        - `view-all-canned-responses`

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |1.0.0            | Added       |
      operationId: get-api-v1-canned-responses
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
        - name: shortcut
          in: query
          description: The shortcut to trigger the message snippet.
          schema:
            type: string
        - name: text
          in: query
          description: The message snippet.
          schema:
            type: string
        - name: scope
          in: query
          description: 'The scope of the canned response. It can either be `global`, `user`, or `department`.'
          schema:
            type: string
        - name: tags
          in: query
          description: The tags for your canned response.
          schema:
            type: string
        - name: departmentId
          in: query
          description: The department ID where the canned response belongs to. It is required if the `scope` is `department`.
          schema:
            type: string
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/fields'
        - schema:
            type: string
          in: query
          name: createdBy
          description: The user ID who created the canned response.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  cannedResponses:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        shortcut:
                          type: string
                        text:
                          type: string
                        scope:
                          type: string
                        createdBy:
                          type: object
                          properties:
                            _id:
                              type: string
                            username:
                              type: string
                        _createdAt:
                          type: string
                        _updatedAt:
                          type: string
                        tags:
                          type: array
                          items:
                            type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    cannedResponses:
                      - _id: 646c747ca8c3a3ba32d0e2e8
                        shortcut: Denied
                        text: This is an example
                        scope: global
                        createdBy:
                          _id: rbAXPnMktTFbNpwtJ
                          username: kim.jane
                        _createdAt: '2023-05-23T08:08:28.241Z'
                        _updatedAt: '2023-05-23T08:08:28.241Z'
                      - _id: 646c6ed9a8c3a3ba32d0e2db
                        shortcut: my-new-canned
                        text: This is an example
                        scope: global
                        tags:
                          - failed
                          - card
                        createdBy:
                          _id: rbAXPnMktTFbNpwtJ
                          username: doe.john
                        _createdAt: '2023-05-23T07:44:25.912Z'
                        _updatedAt: '2023-05-23T07:44:25.912Z'
                      - _id: 646c7350a8c3a3ba32d0e2e0
                        shortcut: my-new-canned-
                        text: This is an example
                        scope: hi
                        tags:
                          - failed
                          - card
                        createdBy:
                          _id: rbAXPnMktTFbNpwtJ
                          username: jane.mary
                        _createdAt: '2023-05-23T08:03:28.148Z'
                        _updatedAt: '2023-05-23T08:03:28.148Z'
                    count: 3
                    offset: 0
                    total: 3
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
  /api/v1/canned-responses.get:
    get:
      tags:
        - Canned Responses
      summary: Get User Canned Responses
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Get a list of all canned responses in the workspace that belong to the current user scope. <br>

        Permission required: `view-canned-responses`

        ### Changelog
        | Version      | Description |
        | ------------ | ------------|
        |1.0.0         | Added       |
      operationId: get-api-v1-canned-responses.get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  responses:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        shortcut:
                          type: string
                        text:
                          type: string
                        scope:
                          type: string
                        departmentId:
                          type: string
                        createdBy:
                          type: object
                          properties:
                            _id:
                              type: string
                            username:
                              type: string
                        _createdAt:
                          type: string
                        _updatedAt:
                          type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    responses:
                      - _id: 6470086ba8c3a3ba32d0fb1b
                        shortcut: department-checking
                        text: This is check test for departmental canned response
                        scope: global
                        departmentId: 64181a0728384134ed600dcc
                        createdBy:
                          _id: 2tTEqR7ZNMJ4HGGNa
                          username: testroxie
                        _createdAt: '2023-05-26T01:16:27.848Z'
                        _updatedAt: '2023-05-26T01:16:27.848Z'
                      - _id: 647009e1a8c3a3ba32d0fb1f
                        shortcut: admin-checking
                        text: This is check test for departmental canned response
                        scope: department
                        departmentId: 64181a0728384134ed600dcc
                        createdBy:
                          _id: rbAXPnMktTFbNpwtJ
                          username: kim.jane
                        _createdAt: '2023-05-26T01:22:41.104Z'
                        _updatedAt: '2023-05-26T01:22:41.104Z'
                      - _id: 647009fba8c3a3ba32d0fb21
                        shortcut: admin-checking3
                        text: This is check test for departmental canned response
                        scope: global
                        departmentId: 64181a0728384134ed600dcc
                        createdBy:
                          _id: rbAXPnMktTFbNpwtJ
                          username: doe.john
                        _createdAt: '2023-05-26T01:23:07.374Z'
                        _updatedAt: '2023-05-26T01:23:07.374Z'
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
  '/api/v1/canned-responses/{_id}':
    get:
      tags:
        - Canned Responses
      summary: Get a Canned Response
      description: |-
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>

        Get a specific canned response. <br>

        Permission required: `view-canned-responses`

        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |1.0.0            | Added       |
      operationId: get-api-v1-canned-responses-_id
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  cannedResponse:
                    type: object
                    properties:
                      _id:
                        type: string
                      shortcut:
                        type: string
                      text:
                        type: string
                      scope:
                        type: string
                      userId:
                        type: string
                      createdBy:
                        type: object
                        properties:
                          _id:
                            type: string
                          username:
                            type: string
                      _createdAt:
                        type: string
                      _updatedAt:
                        type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    cannedResponse:
                      _id: EwmbZ9nLSx7kFamYB
                      shortcut: user
                      text: Meu 32423423423423423
                      scope: user
                      userId: 9L3wuBXKpbAWdfgx8
                      createdBy:
                        _id: 9L3wuBXKpbAWdfgx8
                        username: rafael.ferreira
                      _createdAt: '2021-05-26T18:59:17.929Z'
                      _updatedAt: '2021-05-26T18:59:17.929Z'
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/permissionError'
    parameters:
      - schema:
          type: string
        example: EwmbZ9nLSx7kFamYB
        name: _id
        in: path
        required: true
        description: The canned response's ID.
  /api/v1/livechat/message:
    parameters: []
    post:
      summary: Send New Livechat Message
      operationId: post-api-v1-livechat-message
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      _id:
                        type: string
                      rid:
                        type: string
                      msg:
                        type: string
                      token:
                        type: string
                      alias:
                        type: string
                      ts:
                        type: string
                      u:
                        type: object
                        properties:
                          _id:
                            type: string
                          username:
                            type: string
                          name:
                            type: string
                      _updatedAt:
                        type: string
                      urls:
                        type: array
                        items:
                          type: object
                          properties: {}
                      mentions:
                        type: array
                        items:
                          type: object
                          properties: {}
                      channels:
                        type: array
                        items:
                          type: object
                          properties: {}
                      md:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            value:
                              type: array
                              items:
                                type: object
                                properties:
                                  type:
                                    type: string
                                  value:
                                    type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    message:
                      _id: djsajdkscks787
                      rid: hGFwSKA28nRKut3pD
                      msg: Hello World!
                      token: 54fc5544030bcecda053311cb6b98920bdf953f242c129d7b8065000b1f9b2e9
                      alias: Baek
                      ts: '2023-10-31T13:14:29.804Z'
                      u:
                        _id: 6523dc0ba2f73c7460e18d4d
                        username: guest-35
                        name: Baek
                      _updatedAt: '2023-10-31T13:14:29.960Z'
                      urls: []
                      mentions: []
                      channels: []
                      md:
                        - type: PARAGRAPH
                          value:
                            - type: PLAIN_TEXT
                              value: Hello World!
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''token'' [invalid-params]'
                    errorType: invalid-params
      description: Send a new message in a Livechat room.
      tags:
        - Livechat Messages
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: The visitor token.
                  example: iNKE8a6k6cjbqWhWd
                rid:
                  type: string
                  description: The room ID.
                  example: zRAeTszXor8CCPceB
                msg:
                  type: string
                  description: The message to send to the visitor.
                  example: Hello World!
                _id:
                  type: string
                  description: |-
                    If you do not enter any value, a message ID is automatically generated. If you want to override the message ID in the database with your own, enter a random unique string.
                  example: abcdje928390
                agent:
                  type: object
                  description: Enter the ID and the username of the agent to whom you want to send the message.
                  properties:
                    agentId:
                      type: string
                    username:
                      type: string
              required:
                - token
                - rid
                - msg
            examples:
              Example 1:
                value:
                  token: 54fc5544030bcecda053311cb6b
                  rid: hGFwSKA28nRKut3pD
                  msg: Hello World!
                  agent:
                    agentId: CkCPNcvsvCDfmWLqC
                    username: kim.jane
      parameters: []
  /api/v1/livechat/messages:
    parameters: []
    post:
      summary: Send Array of Messages
      operationId: post-api-v1-livechat-messages
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        username:
                          type: string
                        msg:
                          type: string
                        ts:
                          type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    messages:
                      - username: guest-35
                        msg: test
                        ts: '2023-10-31T08:41:29.724Z'
                      - username: guest-35
                        msg: hello
                        ts: '2023-10-31T08:41:29.725Z'
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''visitor'' [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
      description: Send an array of messsages in a Livechat room.
      tags:
        - Livechat Messages
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                visitor:
                  type: object
                  description: The vistor token.
                  properties:
                    token:
                      type: string
                messages:
                  type: array
                  description: The array of messages.
                  items:
                    type: object
                    properties:
                      msg:
                        type: string
              required:
                - visitor
                - messages
            examples:
              Example 1:
                value:
                  visitor:
                    token: 54fc5544030bcecda053311cb6b98920b
                  messages:
                    - msg: test
                    - msg: hello
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
  '/api/v1/livechat/message/{_id}':
    parameters:
      - schema:
          type: string
        example: ZKWP8LfGnRHQ3ozWa
        name: _id
        in: path
        required: true
        description: The message ID that you want to update.
    put:
      summary: Update Livechat Message
      operationId: put-api-v1-livechat-message-_id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      _id:
                        type: string
                      msg:
                        type: string
                      u:
                        type: object
                        properties:
                          _id:
                            type: string
                          username:
                            type: string
                          name:
                            type: string
                      ls:
                        type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    message:
                      _id: ZKWP8LfGnRHQ3ozWa
                      msg: editing livechat message..
                      u:
                        _id: YgEoq2djbGdjjZnsL
                        username: guest-4
                        name: Livechat Visitor
                      ls: '2018-09-14T13:31:33.201Z'
                    success: true
      tags:
        - Livechat Messages
      description: Update a specific livechat message.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: iNKE8a6k6cjbqWhWd
                  description: The visitor token.
                rid:
                  type: string
                  description: The room ID.
                  example: zRAeTszXor8CCPceB
                msg:
                  type: string
                  description: The updated message that you want to send.
                  example: editing a livechat message...
            examples:
              Example 1:
                value:
                  token: 54fc5544030bcecda053311cb6b9892
                  rid: hGFwSKA28nRKut3pD
                  msg: editing livechat message..
    get:
      summary: Get a Livechat Message
      operationId: get-api-v1-livechat-message-_id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      _id:
                        type: string
                      rid:
                        type: string
                      msg:
                        type: string
                      token:
                        type: string
                      alias:
                        type: string
                      ts:
                        type: string
                      u:
                        type: object
                        properties:
                          _id:
                            type: string
                          username:
                            type: string
                          name:
                            type: string
                      unread:
                        type: boolean
                      _updatedAt:
                        type: string
                      urls:
                        type: array
                        items:
                          type: object
                          properties: {}
                      mentions:
                        type: array
                        items:
                          type: object
                          properties: {}
                      channels:
                        type: array
                        items:
                          type: object
                          properties: {}
                      md:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            value:
                              type: array
                              items:
                                type: object
                                properties:
                                  type:
                                    type: string
                                  value:
                                    type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    message:
                      _id: AgRFdj96mbHDPrTHq
                      rid: mmqCzYgiL8fzRYfuY
                      msg: hi
                      token: 8s7e9ony6ctl27e1qf8kue
                      alias: Mary
                      ts: '2021-07-13T16:20:26.672Z'
                      u:
                        _id: 47Dajwh9DjpnTAugW
                        username: guest-165
                        name: Mary
                      unread: true
                      _updatedAt: '2021-07-13T16:20:26.776Z'
                      urls: []
                      mentions: []
                      channels: []
                      md:
                        - type: PARAGRAPH
                          value:
                            - type: PLAIN_TEXT
                              value: hi
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''rid'' [invalid-params]'
                    errorType: invalid-params
                Example 2:
                  value:
                    success: false
                    error: 'must have required property ''token'' [invalid-params]'
                    errorType: invalid-params
      description: Retrieve specific livechat message information.
      parameters:
        - schema:
            type: string
          example: 8s7e9ony6ctl27e1qf8kue
          in: query
          name: token
          description: The visitor token.
          required: true
        - schema:
            type: string
          example: mmqCzYgiL8fzRYfuY
          in: query
          name: rid
          description: The room ID.
          required: true
      tags:
        - Livechat Messages
    delete:
      summary: Delete Livechat Message
      tags:
        - Livechat Messages
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      _id:
                        type: string
                      ls:
                        type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    message:
                      _id: ZKWP8LfGnRHQ3ozWa
                      ls: '2018-09-14T13:31:33.279Z'
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''token'' [invalid-params]'
                    errorType: invalid-params
      operationId: delete-api-v1-livechat-message-_id
      description: Remove a specific livechat message.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: The visitor token.
                rid:
                  type: string
                  description: The room ID.
              required:
                - token
                - rid
            examples:
              Example 1:
                value:
                  token: 54fc5544030bcecda053311cb6b989
                  rid: hGFwSKA28nRKut3pD
  '/api/v1/livechat/messages.history/{rid}':
    parameters:
      - schema:
          type: string
        name: rid
        in: path
        required: true
        description: The room ID.
    get:
      summary: Get Livechat Message History
      operationId: get-api-v1-livechat-messages.history-rid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        rid:
                          type: string
                        msg:
                          type: string
                        token:
                          type: string
                        alias:
                          type: string
                        ls:
                          type: string
                        u:
                          type: object
                          properties:
                            _id:
                              type: string
                            username:
                              type: string
                            name:
                              type: string
                        mentions:
                          type: array
                          items:
                            type: object
                            properties: {}
                        channels:
                          type: array
                          items:
                            type: object
                            properties: {}
                        _updatedAt:
                          type: string
                        editedAt:
                          type: string
                        editedBy:
                          type: object
                          properties:
                            _id:
                              type: string
                            username:
                              type: string
                        urls:
                          type: array
                          items:
                            type: object
                            properties: {}
                  unreadNotLoaded:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    messages:
                      - _id: ZKWP8LfGnRHQ3ozWa
                        rid: KuACMJ5MpN6SfAFWg
                        msg: editing livechat message..
                        token: iNKE8a6k6cjbqWhWd
                        alias: Livechat Visitor
                        ls: '2018-09-14T13:31:33.201Z'
                        u:
                          _id: YgEoq2djbGdjjZnsL
                          username: guest-4
                          name: Livechat Visitor
                        mentions: []
                        channels: []
                        _updatedAt: '2018-09-14T13:31:33.222Z'
                        editedAt: '2018-09-14T13:31:33.219Z'
                        editedBy:
                          _id: YgEoq2djbGdjjZnsL
                          username: guest-4
                        urls: []
                    unreadNotLoaded: 0
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''token'' [invalid-params]'
                    errorType: invalid-params
      description: Get the entire message history of a conversation.
      tags:
        - Livechat Messages
      parameters:
        - schema:
            type: string
          example: iNKE8a6k6cjbqWhWd
          in: query
          name: token
          description: The visitor token.
          required: true
        - schema:
            format: date-time
          example: '2018-09-14T13:31:33.201Z'
          in: query
          name: ls
          description: The timestamp to start loading the messages.
        - schema:
            format: date-time
          example: '2018-09-14T14:31:33.201Z'
          in: query
          name: end
        - schema:
            type: number
          example: 25
          in: query
          name: limit
          description: The number of messages to load.
  /api/v1/livechat/offline.message:
    parameters: []
    post:
      summary: Send Offline Livechat Message
      operationId: post-api-v1-livechat-offline.message
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    message: Livechat offline message sent
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Example 1:
                  value:
                    success: false
                    error: 'must have required property ''name'' [invalid-params]'
                    errorType: invalid-params
      description: Send the offline message when no agent is available to attend the omnichannel conversation.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Message name.
                email:
                  type: string
                  description: The visitor email.
                message:
                  type: string
                  description: Message text.
                department:
                  type: string
                  description: The department name.
                host:
                  type: string
                  description: The username of the agent.
              required:
                - name
                - email
                - message
                - department
                - host
            examples:
              Example 1:
                value:
                  name: Livechat Visitor
                  email: visitor@rocket.chat
                  message: I need help
                  department: Support
                  host: 'null'
      tags:
        - Livechat Messages
  /api/v1/omnichannel/integrations:
    post:
      summary: Set up Omnichannel webhook
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
      operationId: post-api-v1-omnichannel-integrations
      tags:
        - Omnichannel Webhooks
      description: 'Set up a [webhook](https://docs.rocket.chat/docs/webhooks) to easily integrate Omnichannel with your CRM. Permission required: `view-livechat-manager`.'
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                LivechatWebhookUrl:
                  type: string
                  description: The destination webhook URL where the data will be sent.
                LivechatSecretToken:
                  type: string
                  description: A secret token that can be used to verify the webhook.
                LivechatHttpTimeout:
                  type: integer
                  description: The request timeout value
                LivechatWebhookOnStart:
                  type: boolean
                  description: 'When set to true, data is sent to the configured webhook URL each time a new chat starts.'
                LivechatWebhookOnClose:
                  type: boolean
                  description: 'When set to true, data is sent to the configured webhook URL each time a chat is closed.'
                LivechatWebhookOnChatTaken:
                  type: boolean
                  description: 'When set to true, data is sent to the configured webhook URL each time a chat is taken.'
                LivechatWebhookOnChatQueued:
                  type: boolean
                  description: 'When set to true, data is sent to the configured webhook URL each time a chat is queued.'
                LivechatWebhookOnForward:
                  type: boolean
                  description: 'When set to true, data is sent to the configured webhook URL each time a chat is forwarded.'
                LivechatWebhookOnOfflineMsg:
                  type: boolean
                  description: 'When set to true, data is sent to the configured webhook URL each time offline messages are sent.'
                LivechatWebhookOnVisitorMessage:
                  type: boolean
                  description: 'When set to true, data is sent to the configured webhook URL each time a visitor sends a message.'
                LivechatWebhookOnAgentMessage:
                  type: boolean
                  description: 'When set to true, data is sent to the configured webhook URL each time an agent sends a message.'
            examples:
              WebhookData:
                value:
                  LivechatWebhookUrl: 'https://webhook/d548683u3-7f38ow-48ba-ieooefa-oejiduiw'
                  LivechatSecretToken: ''
                  LivechatHttpTimeout: 5000
                  LivechatWebhookOnStart: true
                  LivechatWebhookOnClose: true
                  LivechatWebhookOnChatTaken: true
                  LivechatWebhookOnChatQueued: false
                  LivechatWebhookOnForward: false
                  LivechatWebhookOnOfflineMsg: true
                  LivechatWebhookOnVisitorMessage: true
                  LivechatWebhookOnAgentMessage: true
  /api/v1/livechat/webhook.test:
    post:
      summary: Test the Webhook Integration
      tags:
        - Omnichannel Webhooks
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
      operationId: post-api-v1-livechat-webhook.test
      description: |-
        This endpoint sends sample data to test whether the [configured webhook URL](https://docs.rocket.chat/docs/webhooks) is functioning correctly. Permission required: `view-livechat-webhooks`.

        The data you can expect on your webhook for this test follows this format:
        ```
        {
          "type": "LivechatSession",
          "_id": "fasd6f5a4sd6f8a4sdf",
          "label": "title",
          "topic": "asiodojf",
          "createdAt": "2024-09-18T12:22:02.975Z",
          "lastMessageAt": "2024-09-18T12:22:02.975Z",
          "tags": [
            "tag1",
            "tag2",
            "tag3"
          ],
          "customFields": {
            "productId": "123456"
          },
          "visitor": {
            "_id": "",
            "name": "visitor name",
            "username": "visitor-username",
            "department": "department",
            "email": "email@address.com",
            "phone": "192873192873",
            "ip": "123.456.7.89",
            "browser": "Chrome",
            "os": "Linux",
            "customFields": {
              "customerId": "123456"
            }
          },
          "agent": {
            "_id": "asdf89as6df8",
            "username": "agent.username",
            "name": "Agent Name",
            "email": "agent@email.com"
          },
          "messages": [
            {
              "username": "visitor-username",
              "msg": "message content",
              "ts": "2024-09-18T12:22:02.975Z"
            },
            {
              "username": "agent.username",
              "agentId": "asdf89as6df8",
              "msg": "message content from agent",
              "ts": "2024-09-18T12:22:02.975Z"
            }
          ]
        }
        ```
      parameters:
        - $ref: '#/components/parameters/AuthToken'
        - $ref: '#/components/parameters/UserId'
tags:
  - name: Omnichannel Users
  - name: Omnichannel Agents
  - name: Omnichannel Monitors
  - name: Omnichannel Visitors
  - name: Omnichannel Contacts
  - name: Omnichannel Rooms
  - name: Omnichannel Departments
  - name: Omnichannel Custom Fields
  - name: Omnichannel Business Hours
  - name: Omnichannel Priorities
  - name: Omnichannel Tags
  - name: Omnichannel Units
  - name: SLA Policies
  - name: Canned Responses
  - name: Omnichannel Transcript
  - name: Omnichannel Statistics
  - name: Omnichannel Agent Stats
  - name: Omnichannel Dashboards
  - name: Reports
  - name: Omnichannel Inquiries
  - name: Omnichannel Webhooks
  - name: Agent Extensions
  - name: Livechat
  - name: Livechat Appearance
  - name: Livechat Triggers
  - name: Livechat Audio Video Calls
  - name: Livechat Messages
  - name: Livechat Page Visited
  - name: Voice Channel
  - name: Voice Channel Events
  - name: Voice Channel Extensions
  - name: Voice Channel Queue Membership
  - name: Voice Channel Rooms
  - name: Voice Channel Server Connection
components:
  parameters:
    start:
      name: start
      in: query
      description: The start date.
      required: true
      schema:
        type: string
      example: '2020-09-10T23:59:22.345Z'
    end:
      name: end
      in: query
      description: The end date.
      required: true
      schema:
        type: string
      example: '2020-09-09T00:11:22.345Z'
    departmentId:
      name: departmentId
      in: query
      description: 'The department ID. '
      required: false
      schema:
        type: string
    AuthToken:
      name: X-Auth-Token
      in: header
      description: The `authToken` of the authenticated user.
      required: true
      schema:
        type: string
      example: RScctEHSmLGZGywfIhWyRpyofhKOiMoUIpimhvheU3f
    UserId:
      name: X-User-Id
      in: header
      description: The `userId` of the authenticated user.
      required: true
      schema:
        type: string
      example: rbAXPnMktTFbNpwtJ
    offset:
      name: offset
      in: query
      required: false
      schema:
        type: integer
      example: 50
      description: 'Number of items to "skip" in the query, i.e. requests return count items, skipping the first offset items. Refer to the [official documentation](https://developer.rocket.chat/apidocs/query-parameters#pagination) to learn more.'
    count:
      name: count
      in: query
      required: false
      schema:
        type: integer
      example: 25
      description: 'The number of items to return. Refer to the [official documentation](https://developer.rocket.chat/apidocs/query-parameters#pagination) to learn more.'
    sort:
      name: sort
      in: query
      required: false
      schema:
        format: object
      description: 'List of fields to order by, and in which direction. JSON object, with properties listed in desired order, with values of 1 for ascending, or -1 for descending. For example, sort = `{"value": -1, "_id": 1}`. Refer to the [official documentation](https://developer.rocket.chat/apidocs/query-parameters#pagination) to learn more.'
    fields:
      name: fields
      in: query
      schema: {}
      description: 'This parameter accepts a JSON object with properties that have a value of 1 or 0 to include or exclude them in the response. For example, to only retrieve the usernames of users: fields = `{"username": 1}`. Refer to the [official documentation](https://developer.rocket.chat/apidocs/query-parameters#query-and-fields) to learn more.'
    query:
      name: query
      in: query
      required: false
      schema: {}
      description: 'This parameter allows you to use MongoDB query operators to search for specific data. For example, to query users with a name that contains the letter "g": query = `{ "name": { "$regex": "g" } }`. Refer to the [official documentation](https://developer.rocket.chat/apidocs/query-parameters#query-and-fields) to learn more. '
  schemas: {}
  responses:
    trueSuccess:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
          examples:
            Success:
              value:
                success: true
    authorizationError:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              message:
                type: string
          examples:
            Authorization Error:
              value:
                status: error
                message: You must be logged in to do this.
    permissionError:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
              error:
                type: string
          examples:
            Permission Error:
              value:
                success: false
                error: 'User does not have the permissions required for this action [error-unauthorized]'
            Unauthorized:
              value:
                success: false
                error: unauthorized
    startendError:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
              error:
                type: string
              errorType:
                type: string
          examples:
            Example 1:
              value:
                success: false
                error: 'must have required property ''start'' [invalid-params]'
                errorType: invalid-params
            Example 2:
              value:
                success: false
                error: The "start" query parameter must be a valid date.
            Example 3:
              value:
                success: false
                error: 'must have required property ''end'' [invalid-params]'
                errorType: invalid-params
            Example 4:
              value:
                success: false
                error: The "end" query parameter must be a valid date.
