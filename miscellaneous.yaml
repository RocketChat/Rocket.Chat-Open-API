openapi: 3.0.0
info:
  version: 1.0.0
  title: Miscellaneous
servers:
  - url: https://apiexplorer.support.rocket.chat
paths:
  /api/v1/autotranslate.getSupportedLanguages:
    get:
      tags:
        - Auto-Translate
      summary: Get Supported Languages
      description: |- 
        To learn how to enable the auto-translate feature, see the <a href="https://docs.rocket.chat/docs/message#autotranslate" target="_blank">Auto-Translate</a> user guide.
        
        Get the supported languages by the auto-translate.
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |1.3.0          | Added       |
      operationId: get-api-v1-autotranslate.getSupportedLanguages
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
        - name: targetLanguage
          in: query
          description: Language in which the language names will be returned.
          required: true
          schema:
            type: string
          example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  languages:
                    type: array
                    items:
                      type: object
                      properties:
                        language:
                          type: string
                        name:
                          type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    languages:
                      - language: bg
                        name: Bulgarian
                      - language: cs
                        name: Czech
                      - language: da
                        name: Danish
                      - language: de
                        name: German
                      - language: el
                        name: Greek
                      - language: en
                        name: English
                      - language: es
                        name: Spanish
                      - language: et
                        name: Estonian
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
              examples:
                Target Language Required:
                  value:
                    success: false
                    error: 'must have required property ''targetLanguage'' [invalid-params]'
                    errorType: invalid-params
        '401':
          $ref: '#/components/responses/authorizationError'
  /api/v1/autotranslate.saveSettings:
    post:
      tags:
        - Auto-Translate
      summary: Save Auto-Translate  Settings
      description: |- 
        Saves autotranslate settings for a room.
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |1.3.0          | Added       |
      operationId: post-api-v1-autotranslate.saveSettings
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                roomId:
                  type: string
                  description: The room's id to apply setting.
                field:
                  type: string
                  description: The setting to apply to user's subscription.
                value:
                  type: boolean
                  description: Boolean if the setting is autoTranslate and a string (the language) if the setting is autoTranslateLanguage.
                defaultLanguage:
                  type: string
                  description: The default language.
              required:
                - roomId
                - field
                - value
            examples:
              Example:
                value:
                  roomId: 7aDSXtjMA3KPLxLjt
                  field: autoTranslate
                  value: true
                  defaultLanguage: en
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '401':
          $ref: '#/components/responses/authorizationError'
  /api/v1/autotranslate.translateMessage:
    post:
      tags:
        - Auto-Translate
      summary: Translate Message
      description: |- 
        Auto-translates the provided message.
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |1.3.0          | Added       |
      operationId: post-api-v1-autotranslate.translateMessage
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                messageId:
                  type: string
                  description: The message's id to be translated.
                targetLanguage:
                  type: string
                  description: The target language that the message will be translated.
              required:
                - messageId
            examples:
              Example:
                value:
                  messageId: Fq7sQNSnDEfzj8qoS
                  targetLanguage: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      _id:
                        type: string
                      rid:
                        type: string
                      msg:
                        type: string
                      ts:
                        type: string
                      u:
                        type: object
                        properties:
                          _id:
                            type: string
                          username:
                            type: string
                          name:
                            type: string
                      _updatedAt:
                        type: string
                      mentions:
                        type: array
                        items:
                          type: object
                      channels:
                        type: array
                        items:
                          type: object
                      translations:
                        type: object
                        properties:
                          en:
                            type: string
                  success:
                    type: boolean
              examples:
                Success:
                  value:
                    message:
                      _id: Fq7sQNSnDEfzj8qoS
                      rid: GENERAL
                      msg: Isso Ã© um teste
                      ts: '2019-06-27T15:35:20.753Z'
                      u:
                        _id: pC6Z2N2ijivxdsYSu
                        username: marcos
                        name: marcos
                      _updatedAt: '2019-06-27T15:47:01.486Z'
                      mentions: []
                      channels: []
                      translations:
                        en: This is a test
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
  /api/v1/email-inbox.list:
    get:
      tags:
        - Email Inbox
      summary: List Email Inbox
      description: |- 
        Gets email inbox list.
        
        Permissions required:- `manage-email-inbox`
        
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |3.11.0-rc.0         | Added       |
      operationId: get-api-v1-email-inbox.list
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  emailInboxes:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        active:
                          type: boolean
                        name:
                          type: string
                        email:
                          type: string
                        description:
                          type: string
                        senderInfo:
                          type: string
                        department:
                          type: string
                        smtp:
                          type: object
                          properties:
                            server:
                              type: string
                            port:
                              type: integer
                            username:
                              type: string
                            password:
                              type: string
                            secure:
                              type: boolean
                        imap:
                          type: object
                          properties:
                            server:
                              type: string
                            port:
                              type: integer
                            username:
                              type: string
                            password:
                              type: string
                            secure:
                              type: boolean
                        _createdAt:
                          type: string
                        _updatedAt:
                          type: string
                        _createdBy:
                          type: object
                          properties:
                            _id:
                              type: string
                            username:
                              type: string
                  count:
                    type: integer
                  offset:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success:
                  value:
                    emailInboxes:
                      - _id: 60197e8ff82d6c83b96c53ff
                        active: false
                        name: Rocket.Chat sample account
                        email: info@rocket.chat
                        description: ''
                        senderInfo: ''
                        department: GgYvrkAF63aeQmsh4
                        smtp:
                          server: smtp.gmail.com
                          port: 465
                          username: info@rocket.chat
                          password: kkviepoenakbccwf
                          secure: true
                        imap:
                          server: imap.gmail.com
                          port: 993
                          username: info@rocket.chat
                          password: kkviepoenakbccwf
                          secure: true
                        _createdAt: '2021-02-02T16:32:15.069Z'
                        _updatedAt: '2021-09-06T17:43:49.257Z'
                        _createdBy:
                          _id: JxemcN9PDCdfzJeZr
                          username: renato.becker
                    count: 1
                    offset: 0
                    total: 1
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/forbiddenError'
  /api/v1/email-inbox:
    post:
      tags:
        - Email Inbox
      summary: Set Email Inbox
      description: |- 
        Sets the email inbox for your server.
        
        Permissions required:- `manage-email-inbox`
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |3.11.0-rc.0         | Added       |
      operationId: post-api-v1-email-inbox
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                _id:
                  type: string
                  description: Email Id
                name:
                  type: string
                  description: The name you wish to set for your email.
                email:
                  type: string
                  description: The email to be used
                active:
                  type: boolean
                  description: Set whether or not the email is active.
                description:
                  type: string
                  description: The description for this entry.
                senderInfo:
                  type: string
                  description: Sender info to be attached on outgoing emails.
                department:
                  type: string
                  description: The department to which the email will be available.
                smtp:
                  type: object
                  description: An object with your SMTP credentials to be used for outgoing emails.
                  properties:
                    password:
                      type: string
                    port:
                      type: integer
                    secure:
                      type: boolean
                    server:
                      type: string
                    username:
                      type: string
                imap:
                  type: object
                  description: An object having your IMAP credentials to be used for incomming emails.
                  properties:
                    password:
                      type: string
                    port:
                      type: integer
                    secure:
                      type: boolean
                    server:
                      type: string
                    username:
                      type: string
              required:
                - name
                - email
                - active
                - smtp
                - imap
            examples:
              Example:
                value:
                  name: new email
                  email: mdyemaasil@rocket.chat
                  active: false
                  description: This email has been set
                  senderInfo: email sender
                  department: awesome department
                  smtp:
                    password: 10fae4dc374fb87d
                    port: 25
                    secure: true
                    server: smtp.mailtrap.io
                    username: b5ef5safd6cb806c
                  imap:
                    password: 10fae4374sdfb87d
                    port: 993
                    secure: true
                    server: imap.mailtrap.io
                    username: b5ef5aafd6cb806c
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  success:
                    type: boolean
              examples:
                Success:
                  value:
                    _id: JdVkn_dkOlms_
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Duplicate:
                  value:
                    success: false
                    error: 'E11000 duplicate key error index: rocketchat.rocketchat_email_inbox.$email_1 dup key: { : "mdyemail@rocket.chat" }'
                Invalid Inbox:
                  value:
                    success: false
                    error: error-invalid-email-inbox
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/forbiddenError'
  '/api/v1/email-inbox/{_id}':
    get:
      tags:
        - Email Inbox
      summary: Email Inbox by ID
      description: |- 
        Gets email inbox by ID.
        
        Permissions required: `manage-email-inbox`
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |5.3.0       | Not Found Error Added       |
        |3.11.0-rc.0         | Added       |
        
      operationId: get-api-v1-email-inbox-id
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
        - name: _id
          in: path
          description: Email inbox ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  active:
                    type: boolean
                  name:
                    type: string
                  email:
                    type: string
                  description:
                    type: string
                  senderInfo:
                    type: string
                  department:
                    type: string
                  smtp:
                    type: object
                    properties:
                      server:
                        type: string
                      port:
                        type: integer
                      username:
                        type: string
                      password:
                        type: string
                      secure:
                        type: boolean
                  imap:
                    type: object
                    properties:
                      server:
                        type: string
                      port:
                        type: integer
                      username:
                        type: string
                      password:
                        type: string
                      secure:
                        type: boolean
                  _createdAt:
                    type: string
                  _updatedAt:
                    type: string
                  _createdBy:
                    type: object
                    properties:
                      _id:
                        type: string
                      username:
                        type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    _id: 60197e8ff82d6c83b96c53ff
                    active: false
                    name: Rocket.Chat sample account
                    email: info@rocket.chat
                    description: ''
                    senderInfo: ''
                    department: GgYvrkAF63aeQmsh4
                    smtp:
                      server: smtp.gmail.com
                      port: 465
                      username: info@rocket.chat
                      password: kkviepoenakbccwf
                      secure: true
                    imap:
                      server: imap.gmail.com
                      port: 993
                      username: info@rocket.chat
                      password: kkviepoenakbccwf
                      secure: true
                    _createdAt: '2021-02-02T16:32:15.069Z'
                    _updatedAt: '2021-09-06T17:43:49.257Z'
                    _createdBy:
                      _id: JxemcN9PDCdfzJeZr
                      username: ren.be
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Resource not found:
                  value:
                    success: false
                    error: Resource not found
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/forbiddenError'
    delete:
      tags:
        - Email Inbox
      summary: Delete Email Inbox by ID
      description: |- 
        Deletes email inbox using ID.
        
        Permissions required: `manage-email-inbox`
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |3.11.0-rc.0         | Added       |
      operationId: delete-api-v1-email-inbox-_id
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
        - name: _id
          in: path
          description: Email inbox ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    _id: 61717dd1066bc500096cb36d
                    success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
              examples:
                Email not found:
                  value:
                    success: false
                    error: Resource not found
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/forbiddenError'
  /api/v1/email-inbox.search:
    get:
      tags:
        - Email Inbox
      summary: Search Email Inbox
      description: |- 
        Searches email inbox by email address.
        
        Permissions required: `manage-email-inbox`
        
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |3.11.0-rc.0         | Added       |
      operationId: get-api-v1-email-inbox.search
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
        - name: email
          in: query
          description: Email inbox address
          required: true
          schema:
            type: string
          example: info@rockt.chat
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  emailInbox:
                    type: object
                    properties:
                      _id:
                        type: string
                      active:
                        type: boolean
                      name:
                        type: string
                      email:
                        type: string
                      description:
                        type: string
                      senderInfo:
                        type: string
                      department:
                        type: string
                      smtp:
                        type: object
                        properties:
                          server:
                            type: string
                          port:
                            type: integer
                          username:
                            type: string
                          password:
                            type: string
                          secure:
                            type: boolean
                      imap:
                        type: object
                        properties:
                          server:
                            type: string
                          port:
                            type: integer
                          username:
                            type: string
                          password:
                            type: string
                          secure:
                            type: boolean
                      _createdAt:
                        type: string
                      _updatedAt:
                        type: string
                      _createdBy:
                        type: object
                        properties:
                          _id:
                            type: string
                          username:
                            type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    emailInbox:
                      _id: 60197e8ff82d6c83b96c53ff
                      active: false
                      name: Rocket.Chat sample account
                      email: info@rocket.chat
                      description: ''
                      senderInfo: ''
                      department: GgYvrkAF63aeQmsh4
                      smtp:
                        server: smtp.gmail.com
                        port: 465
                        username: info@rocket.chat
                        password: kkviepoenakbccwf
                        secure: true
                      imap:
                        server: imap.gmail.com
                        port: 993
                        username: info@rocket.chat
                        password: kkviepoenakbccwf
                        secure: true
                      _createdAt: '2021-02-02T16:32:15.069Z'
                      _updatedAt: '2021-09-06T17:43:49.257Z'
                      _createdBy:
                        _id: JxemcN9PDCdfzJeZr
                        username: renato.becker
                    success: true
        '403':
          $ref: '#/components/responses/forbiddenError'
  '/api/v1/email-inbox.send-test/{_id}':
    get:
      tags:
        - Email Inbox
      summary: Send test email to email inbox
      description: |- 
        Send a test email to the inbox.
        Permissions required: `manage-email-inbox`
        
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |3.11.0-rc.0         | Added       |
      operationId: get-api-v1-email-inbox.send-test-id
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
        - name: _id
          in: path
          description: Email inbox id
          required: true
          schema:
            type: string
          example: 60197e8ff82d6c83b96c53ff
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    _id: 60197e8ff82d6c83b96c53ff
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/forbiddenError'
  /api/v1/shield.svg:
    get:
      summary: Shield SVG
      description: |-  
        A simple method, requires no authentication, that returns the shield svg(badge) to add in your website. It must have `API_Enable_Shields` enabled.
        
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |0.55.0        | Added       |
      operationId: get-api-v1-shield.svg
      parameters:
        - name: type
          in: query
          description: 'Can either be `online`, `user`, `channel`'
          schema:
            type: string
          example: online
        - name: icon
          in: query
          schema:
            type: string
          example: 'false'
        - name: channel
          in: query
          description: Name of the channel
          required: true
          schema:
            type: string
          example: general
        - name: name
          in: query
          description: Name to show
          required: true
          schema:
            type: string
          example: Rocket.Chat
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: object
              examples:
                Example:
                  value: '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="141" height="20"> <linearGradient id="b" x2="0" y2="100%"> <stop offset="0" stop-color="#bbb" stop-opacity=".1"/> <stop offset="1" stop-opacity=".1"/> </linearGradient> <mask id="a"> <rect width="141" height="20" rx="3" fill="#fff"/> </mask> <g mask="url(#a)"> <path fill="#555" d="M0 0h67v20H0z"/> <path fill="#4c1" d="M67 0h74v20H67z"/> <path fill="url(#b)" d="M0 0h141v20H0z"/> </g> <image x="5" y="3" width="14" height="14" xlink:href="/assets/favicon.svg"/> <g fill="#fff" font-family="DejaVu Sans,Verdana,Geneva,sans-serif" font-size="11"> <text x="24" y="15" fill="#010101" fill-opacity=".3">Rocket</text> <text x="24" y="14">Rocket</text> <text x="74" y="15" fill="#010101" fill-opacity=".3">JOIN CHAT</text> <text x="74" y="14">JOIN CHAT</text> </g> </svg>'
          headers:
            Content-Type:
              schema:
                type: string
                example: image/svg+xml;charset=utf-8
              description: image/svg+xml;charset=utf-8
  /api/v1/spotlight:
    get:
      summary: Spotlight
      description: |- 
        Searches for users or rooms that are visible to the user. It will only return rooms that user didn't join yet.
        
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |0.64.0       | Added support to '#' and '@' searches, for channels and users respectively.       |
        |0.61.0      | Added       |
      operationId: get-api-v1-spotlight
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
        - name: query
          in: query
          description: The term to be searched. Supports '#' for channels and '@' for users
          required: true
          schema:
            type: string
          example: john
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                        username:
                          type: string
                        status:
                          type: string
                        avatarETag:
                          type: string
                  rooms:
                    type: array
                    items:
                      type: object
                  success:
                    type: boolean
              examples:
                Success:
                  value:
                    users:
                      - _id: rocket.cat
                        name: Rocket.Cat
                        username: rocket.cat
                        status: online
                        avatarETag: 5BB9B5ny5DkKdrwkq
                    rooms: []
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
  /api/v1/stdout.queue:
    get:
      summary: Get stdout queue
      description: |- 
        Retrieves last 1000 lines of server logs
        
        Permissions required: `view-logs`
      operationId: get-api-v1-stdout.queue
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  queue:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        string:
                          type: string
                        ts:
                          type: string
                  success:
                    type: boolean
              examples:
                Success:
                  value:
                    queue:
                      - id: logid-0
                        string: |
                          LocalStore: store created at 
                        ts: '2024-01-26T13:16:11.945Z'
                      - id: logid-1
                        string: |
                          LocalStore: store created at 
                        ts: '2024-01-26T13:16:11.946Z'
                      - id: logid-2
                        string: |
                          LocalStore: store created at 
                        ts: '2024-01-26T13:16:11.947Z'
                      - id: logid-3
                        string: |
                          {"level":40,"time":"2024-01-26T13:16:12.803Z","pid":1,"hostname":"cb52a01481fa","name":"VoIPService","msg":"Voip is not enabled. Cant start the service"}
                        ts: '2024-01-26T13:16:12.804Z'
                      - id: logid-4
                        string: |
                          {"level":51,"time":"2024-01-26T13:16:16.856Z","pid":1,"hostname":"cb52a01481fa","name":"Migrations","msg":"Not migrating, already at version 304"}
                        ts: '2024-01-26T13:16:16.856Z'
                      - id: logid-5
                        string: |
                          [2024-01-26T13:16:16.929Z] INFO  5da8aab5-e32e-4a0a-b53e-62b027b331cf/BROKER: Moleculer v0.14.31 is starting...
                        ts: '2024-01-26T13:16:16.929Z'
                      - id: logid-6
                        string: |
                          [2024-01-26T13:16:16.929Z] INFO  5da8aab5-e32e-4a0a-b53e-62b027b331cf/BROKER: Namespace: <not defined>
                        ts: '2024-01-26T13:16:16.929Z'
                      - id: logid-7
                        string: |
                          [2024-01-26T13:16:16.929Z] INFO  5da8aab5-e32e-4a0a-b53e-62b027b331cf/BROKER: Node ID: 5da8aab5-e32e-4a0a-b53e-62b027b331cf
                        ts: '2024-01-26T13:16:16.930Z'
                      - id: logid-8
                        string: |
                          [2024-01-26T13:16:16.931Z] INFO  5da8aab5-e32e-4a0a-b53e-62b027b331cf/REGISTRY: Strategy: RoundRobinStrategy
                        ts: '2024-01-26T13:16:16.931Z'
                      - id: logid-9
                        string: |
                          [2024-01-26T13:16:16.932Z] INFO  5da8aab5-e32e-4a0a-b53e-62b027b331cf/REGISTRY: Discoverer: LocalDiscoverer
                        ts: '2024-01-26T13:16:16.932Z'
                      - id: logid-10
                        string: |
                          [2024-01-26T13:16:16.933Z] INFO  5da8aab5-e32e-4a0a-b53e-62b027b331cf/BROKER: Serializer: JSONSerializer
                        ts: '2024-01-26T13:16:16.933Z'
                      - id: logid-11
                        string: |
                          [2024-01-26T13:16:16.965Z] INFO  5da8aab5-e32e-4a0a-b53e-62b027b331cf/BROKER: Validator: FastestValidator
                        ts: '2024-01-26T13:16:16.965Z'
                      - id: logid-12
                        string: |
                          [2024-01-26T13:16:16.968Z] INFO  5da8aab5-e32e-4a0a-b53e-62b027b331cf/BROKER: Registered 13 middleware(s).
                        ts: '2024-01-26T13:16:16.968Z'
                      - id: logid-13
                        string: |
                          [2024-01-26T13:16:16.970Z] INFO  5da8aab5-e32e-4a0a-b53e-62b027b331cf/BROKER: Transporter: TcpTransporter
                        ts: '2024-01-26T13:16:16.970Z'
                      - id: logid-14
                        string: |
                          {"level":51,"time":"2024-01-26T13:16:17.015Z","pid":1,"hostname":"cb52a01481fa","name":"DatabaseWatcher","msg":"Using change streams"}
                        ts: '2024-01-26T13:16:17.016Z'
                      - id: logid-15
                        string: |
                          [2024-01-26T13:16:17.031Z] INFO  5da8aab5-e32e-4a0a-b53e-62b027b331cf/TRANSIT: Connecting to the transporter...
                        ts: '2024-01-26T13:16:17.032Z'
                      - id: logid-16
                        string: |
                          [2024-01-26T13:16:17.261Z] INFO  5da8aab5-e32e-4a0a-b53e-62b027b331cf/TRANSPORTER: TCP server is listening on port 32911
                        ts: '2024-01-26T13:16:17.262Z'
                      - id: logid-17
                        string: |
                          [2024-01-26T13:16:17.263Z] INFO  5da8aab5-e32e-4a0a-b53e-62b027b331cf/TRANSPORTER: UDP Discovery is disabled.
                        ts: '2024-01-26T13:16:17.263Z'
                      - id: logid-18
                        string: |
                          [2024-01-26T13:16:17.263Z] INFO  5da8aab5-e32e-4a0a-b53e-62b027b331cf/TRANSPORTER: TCP Transporter started.
                        ts: '2024-01-26T13:16:17.264Z'
                      - id: logid-19
                        string: |
                          [2024-01-26T13:16:17.786Z] INFO  5da8aab5-e32e-4a0a-b53e-62b027b331cf/REGISTRY: '$node' service is registered.
                        ts: '2024-01-26T13:16:17.787Z'
                      - id: logid-20
                        string: |
                          [2024-01-26T13:16:17.788Z] INFO  5da8aab5-e32e-4a0a-b53e-62b027b331cf/REGISTRY: 'matrix' service is registered.
                        ts: '2024-01-26T13:16:17.788Z'
                      - id: logid-21
                        string: |
                          [2024-01-26T13:16:17.790Z] INFO  5da8aab5-e32e-4a0a-b53e-62b027b331cf/$NODE: Service '$node' started.
                        ts: '2024-01-26T13:16:17.791Z'
                      - id: logid-22
                        string: |
                          [2024-01-26T13:16:17.791Z] INFO  5da8aab5-e32e-4a0a-b53e-62b027b331cf/MATRIX: Service 'matrix' started.
                        ts: '2024-01-26T13:16:17.791Z'
                      - id: logid-23
                        string: |
                          [2024-01-26T13:16:17.793Z] INFO  5da8aab5-e32e-4a0a-b53e-62b027b331cf/BROKER: â ServiceBroker with 2 service(s) started successfully in 788ms.
                        ts: '2024-01-26T13:16:17.793Z'
                      - id: logid-24
                        string: |
                          +----------------------------------------------+
                        ts: '2024-01-26T13:16:18.723Z'
                      - id: logid-25
                        string: |
                          |                SERVER RUNNING                |
                        ts: '2024-01-26T13:16:18.723Z'
                      - id: logid-26
                        string: |
                          +----------------------------------------------+
                        ts: '2024-01-26T13:16:18.724Z'
                      - id: logid-27
                        string: |
                          |                                              |
                        ts: '2024-01-26T13:16:18.726Z'
                      - id: logid-28
                        string: |
                          |  Rocket.Chat Version: 6.5.3                  |
                        ts: '2024-01-26T13:16:18.726Z'
                      - id: logid-29
                        string: |
                          |       NodeJS Version: 14.21.3 - x64          |
                        ts: '2024-01-26T13:16:18.726Z'
                      - id: logid-30
                        string: |
                          |      MongoDB Version: 5.0.23                 |
                        ts: '2024-01-26T13:16:18.726Z'
                      - id: logid-31
                        string: |
                          |       MongoDB Engine: wiredTiger             |
                        ts: '2024-01-26T13:16:18.726Z'
                      - id: logid-32
                        string: |
                          |             Platform: linux                  |
                        ts: '2024-01-26T13:16:18.726Z'
                      - id: logid-33
                        string: |
                          |         Process Port: 3000                   |
                        ts: '2024-01-26T13:16:18.726Z'
                      - id: logid-34
                        string: |
                          |             Site URL: http://localhost:3000  |
                        ts: '2024-01-26T13:16:18.727Z'
                      - id: logid-35
                        string: |
                          |     ReplicaSet OpLog: Enabled                |
                        ts: '2024-01-26T13:16:18.727Z'
                      - id: logid-36
                        string: |
                          |          Commit Hash: 726574cfe3             |
                        ts: '2024-01-26T13:16:18.730Z'
                      - id: logid-37
                        string: |
                          |        Commit Branch: HEAD                   |
                        ts: '2024-01-26T13:16:18.730Z'
                      - id: logid-38
                        string: |
                          |                                              |
                        ts: '2024-01-26T13:16:18.731Z'
                      - id: logid-39
                        string: |
                          +----------------------------------------------+
                        ts: '2024-01-26T13:16:18.731Z'
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
  /api/v1/licenses.get:
    get:
      tags:
        - Licenses
      summary: Get Licenses
      description: |- 
        > This endpoint has been deprecated and is scheduled for removal in the 7.0.0 <a href="https://github.com/RocketChat/Rocket.Chat/releases" target="_blank">release</a>. Use the <a href="https://developer.rocket.chat/apidocs/get-licenses-1" target="_blank">/licenses.info</a> endpoint instead.
        
        Retrieves a list of all registered licenses in the workspace.
        
        Permission required: `view-privileged-setting`
        
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |6.5.0         | Deprecated       |
        |3.10.0         | Added       |
      operationId: get-api-v1-licenses.get
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  licenses:
                    type: array
                    items:
                      type: object
                      properties:
                        version:
                          type: integer
                        url:
                          type: string
                        expiry:
                          type: string
                        maxActiveUsers:
                          type: integer
                        maxGuestUsers:
                          type: integer
                        maxRoomsPerGuest:
                          type: integer
                        modules:
                          type: array
                          items:
                            type: string
                        tag:
                          type: object
                          properties:
                            name:
                              type: string
                            color:
                              type: string
                        meta:
                          type: object
                          properties:
                            trial:
                              type: boolean
                            trialEnd:
                              type: string
                            workspaceId:
                              type: string
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    licenses:
                      - version: 2
                        url: 'localhost:3000'
                        expiry: '2023-07-13'
                        maxActiveUsers: 25
                        maxGuestUsers: 125
                        maxRoomsPerGuest: 1
                        modules:
                          - auditing
                          - canned-responses
                          - ldap-enterprise
                          - livechat-enterprise
                          - voip-enterprise
                          - omnichannel-mobile-enterprise
                          - engagement-dashboard
                          - push-privacy
                          - scalability
                          - teams-mention
                          - saml-enterprise
                          - oauth-enterprise
                          - device-management
                          - federation
                          - videoconference-enterprise
                          - message-read-receipt
                        tag:
                          name: Enterprise
                          color: '#F3BE08'
                        meta:
                          trial: false
                          trialEnd: '2023-04-27T23:00:00Z'
                          workspaceId: 63cfe8550c95db00013d7798
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
      deprecated: true
  /api/v1/licenses.info:
    get:
      tags:
        - Licenses
      summary: Get Licenses
      description: |-
        Retrieves a list of all registered licenses and the details in the workspace.

        Permission required: `view-privileged-setting`
      operationId: get-api-v1-licenses.info
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  license:
                    type: object
                    properties:
                      license:
                        type: object
                        properties:
                          version:
                            type: string
                          information:
                            type: object
                            properties:
                              id:
                                type: string
                              autoRenew:
                                type: boolean
                              createdAt:
                                type: string
                              visualExpiration:
                                type: string
                              notifyAdminsAt:
                                type: string
                              notifyUsersAt:
                                type: string
                              trial:
                                type: boolean
                              cancellable:
                                type: boolean
                              offline:
                                type: boolean
                              grantedBy:
                                type: object
                                properties: {}
                              grantedTo:
                                type: object
                                properties: {}
                              tags:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    color:
                                      type: string
                          validation:
                            type: object
                            properties:
                              serverUrls:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    value:
                                      type: string
                                    type:
                                      type: string
                              cloudWorkspaceId:
                                type: string
                              serverUniqueId:
                                type: string
                              validPeriods:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    validUntil:
                                      type: string
                                    invalidBehavior:
                                      type: string
                              legalTextAgreement:
                                type: object
                                properties:
                                  type:
                                    type: string
                                  acceptedVia:
                                    type: string
                              statisticsReport:
                                type: object
                                properties:
                                  required:
                                    type: boolean
                                  allowedStaleInDays:
                                    type: integer
                          grantedModules:
                            type: array
                            items:
                              type: object
                              properties:
                                module:
                                  type: string
                          limits:
                            type: object
                            properties:
                              guestUsers:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    max:
                                      type: integer
                                    behavior:
                                      type: string
                              roomsPerGuest:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    max:
                                      type: integer
                                    behavior:
                                      type: string
                              monthlyActiveContacts:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    max:
                                      type: integer
                                    behavior:
                                      type: string
                          cloudMeta:
                            type: object
                            properties: {}
                      activeModules:
                        type: array
                        items:
                          type: string
                      preventedActions:
                        type: object
                        properties:
                          activeUsers:
                            type: boolean
                          guestUsers:
                            type: boolean
                          roomsPerGuest:
                            type: boolean
                          privateApps:
                            type: boolean
                          marketplaceApps:
                            type: boolean
                          monthlyActiveContacts:
                            type: boolean
                      limits:
                        type: object
                        properties:
                          activeUsers:
                            type: object
                            properties:
                              max:
                                type: integer
                          guestUsers:
                            type: object
                            properties:
                              max:
                                type: integer
                          privateApps:
                            type: object
                            properties:
                              max:
                                type: integer
                          marketplaceApps:
                            type: object
                            properties:
                              max:
                                type: integer
                          monthlyActiveContacts:
                            type: object
                            properties:
                              max:
                                type: integer
                      tags:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            color:
                              type: string
                      trial:
                        type: boolean
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    license:
                      license:
                        version: '3.0'
                        information:
                          id: 6569155ab286e50001b78ec1
                          autoRenew: true
                          createdAt: '2024-03-17T00:51:43.529361607Z'
                          visualExpiration: '2024-03-10T00:00:00Z'
                          notifyAdminsAt: '2024-03-10T00:00:00Z'
                          notifyUsersAt: '2024-03-10T00:00:00Z'
                          trial: true
                          cancellable: true
                          offline: false
                          grantedBy: {}
                          grantedTo: {}
                          tags:
                            - name: Enterprise trial
                              color: '#F3BE08'
                        validation:
                          serverUrls:
                            - value: testspace.rocket.chat
                              type: url
                          cloudWorkspaceId: 64df890111e1f20001d201b4
                          serverUniqueId: tgxSuzXmWe68S3kWR
                          validPeriods:
                            - validUntil: '2024-03-24T00:00:00Z'
                              invalidBehavior: invalidate_license
                          legalTextAgreement:
                            type: required
                            acceptedVia: cloud
                          statisticsReport:
                            required: true
                            allowedStaleInDays: 2
                        grantedModules:
                          - module: auditing
                          - module: canned-responses
                          - module: ldap-enterprise
                          - module: livechat-enterprise
                          - module: voip-enterprise
                          - module: omnichannel-mobile-enterprise
                          - module: engagement-dashboard
                          - module: push-privacy
                          - module: scalability
                          - module: teams-mention
                          - module: saml-enterprise
                          - module: oauth-enterprise
                          - module: device-management
                          - module: federation
                          - module: videoconference-enterprise
                          - module: message-read-receipt
                          - module: outlook-calendar
                          - module: hide-watermark
                          - module: custom-roles
                          - module: accessibility-certification
                        limits:
                          guestUsers:
                            - max: 235
                              behavior: start_fair_policy
                            - max: 235
                              behavior: prevent_action
                          roomsPerGuest:
                            - max: 1
                              behavior: start_fair_policy
                            - max: 1
                              behavior: prevent_action
                          monthlyActiveContacts:
                            - max: -1
                              behavior: start_fair_policy
                            - max: -1
                              behavior: prevent_action
                        cloudMeta: {}
                      activeModules:
                        - auditing
                        - canned-responses
                        - ldap-enterprise
                        - livechat-enterprise
                        - voip-enterprise
                        - omnichannel-mobile-enterprise
                        - engagement-dashboard
                        - push-privacy
                        - scalability
                        - teams-mention
                        - saml-enterprise
                        - oauth-enterprise
                        - device-management
                        - federation
                        - videoconference-enterprise
                        - message-read-receipt
                        - outlook-calendar
                        - hide-watermark
                        - custom-roles
                        - accessibility-certification
                      preventedActions:
                        activeUsers: false
                        guestUsers: false
                        roomsPerGuest: false
                        privateApps: false
                        marketplaceApps: false
                        monthlyActiveContacts: false
                      limits:
                        activeUsers:
                          max: -1
                        guestUsers:
                          max: 235
                        privateApps:
                          max: -1
                        marketplaceApps:
                          max: -1
                        monthlyActiveContacts:
                          max: -1
                      tags:
                        - name: Enterprise trial
                          color: '#F3BE08'
                      trial: true
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
  /api/v1/licenses.add:
    post:
      tags:
        - Licenses
      summary: Add License
      description: |- 
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>
        
        You may want to <a href="https://docs.rocket.chat/docs/rocketchat-air-gapped-deployment" target="_blank">deploy your workspace in an air-gapped environment</a>. Since the server has no internet to communicate with the cloud, we provide a license for your subscribed plan that you can apply manually to upgrade your workspace.
        
        Permission required: `edit-privileged-setting`.
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |3.10.0         | Added       |
        
        A successful response only means the license provided follows the accepted format. Check your <a href="https://docs.rocket.chat/docs/reports" target="_blank">workspace log</a> or <a href="https://docs.rocket.chat/docs/workspace" target="_blank">administration info</a> to confirm if the license is valid and was applied to your workspace. Alternatively, you can check <b><a href="https://developer.rocket.chat/apidocs/get-licenses-1" target="_blank">Confirm Enterprise License</a></b> endpoint.
        
      operationId: post-api-v1-licenses.add
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                license:
                  type: string
            examples:
              Example:
                value:
                  license: VFJ0vHf3Jm9AR0minB342MLaHRlZdc3Du5nf0E5Sv0QJ4SUkEIaU2boCYaDsxQ2N1UL4uhLjCF9M7iCZ/yxafJjxbHvOu1D5rOfdgO4RKlAGE9tGHDidJR9crJyXVb16jPHHvLSkUFzb7HoIq/nUXxU8gEgT3uJ9u2+Dw5ukDLX3SG2AFq1hLoPSZqsP6g2AQo=
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '401':
          $ref: '#/components/responses/authorizationError'
        '403':
          $ref: '#/components/responses/forbiddenError'
  /api/v1/licenses.isEnterprise:
    get:
      tags:
        - Licenses
      summary: Confirm Enterprise License
      description: |- 
        > This endpoint has been deprecated and is scheduled for removal in the 7.0.0 <a href="https://github.com/RocketChat/Rocket.Chat/releases" target="_blank">release</a>. Use the <a href="https://developer.rocket.chat/apidocs/get-licenses-1" target="_blank">/licenses.info</a> endpoint instead.

        Confirm if the current workspace is subscribed to the <a href="https://docs.rocket.chat/docs/our-plans#enterprise-plan" target="_blank">Enterprise plan</a>.
        
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |6.5.0         | Deprecated       |
        |5.0.0         | Added       |
      operationId: get-api-v1-licenses.isEnterprise
      parameters:
        - name: X-Auth-Token
          in: header
          description: The `authToken` of the authenticated user.
          schema:
            type: string
        - name: X-User-Id
          in: header
          description: The `userId` of the authenticated user.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  isEnterprise:
                    type: boolean
                  success:
                    type: boolean
              examples:
                  Success Example:
                    value: 
                      isEnterprise: true
                      success: true
        '401':
          $ref: '#/components/responses/authorizationError'
      deprecated: true
  /licenses.maxActiveUsers:
    get:
      tags:
        - Licenses
      summary: Get Maximum Active User
      description: |- 
        <div style="text-align: center; margin: 1rem 0 1rem 0;"><img src="https://raw.githubusercontent.com/RocketChat/Rocket.Chat-Open-API/main/images/premium.svg" alt="Premium tag" style="display: block; margin: auto;"></div>
        
        Retrieves a list of the maximum active users.
        
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |4.0.0         | Added       |
      operationId: get-licenses.maxActiveUsers
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  maxActiveUsers:
                    type: integer
                  activeUsers:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success Example:
                  value:
                    maxActiveUsers: 25
                    activeUsers: 0
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
  /api/v1/video-conference/jitsi.update-timeout:
    post:
      tags:
        - Video Conference
      summary: Update Jitsi Timeout
      description: |- 
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |0.74.0        | Added       |
      operationId: post-api-v1-video-conference-jitsi.update-timeout
      parameters:
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/Auth-Token'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                roomId:
                  type: string
                  description: The room Id of the room to update the jitsi timeout.
              required:
                - roomId
            examples:
              Example:
                value:
                  roomId: hyoM5JSQi94RwqPE7
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  jitsiTimeout:
                    type: string
                  success:
                    type: boolean
              examples:
                Success:
                  value:
                    jitsiTimeout: '2019-01-16T13:17:11.951Z'
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
  /api/v1/commands.get:
    get:
      tags:
        - Commands
      summary: Get Slash Commands
      description: |- 
        Get specification of the slash command.
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |0.60.2       | Added       |
      operationId: get-api-v1-commands.get
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
        - name: command
          in: query
          description: The name of the command.
          required: true
          schema:
            type: string
          example: me
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  command:
                    type: object
                    properties:
                      command:
                        type: string
                      params:
                        type: string
                      description:
                        type: string
                      clientOnly:
                        type: boolean
                  success:
                    type: boolean
              examples:
                Success:
                  value:
                    command:
                      command: me
                      params: your_message
                      description: Displays_action_text
                      clientOnly: false
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
  /api/v1/commands.list:
    get:
      tags:
        - Commands
      summary: List Slash Commands
      description: |- 
        Lists all available slash commands.
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |0.60.2      | Added       |
      operationId: get-api-v1-commands.list
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commands:
                    type: array
                    items:
                      type: object
                      properties:
                        command:
                          type: string
                        clientOnly:
                          type: boolean
                  offset:
                    type: integer
                  count:
                    type: integer
                  total:
                    type: integer
                  success:
                    type: boolean
              examples:
                Success:
                  value:
                    commands:
                      - command: invite-all-from
                        clientOnly: false
                      - command: slackbridge-import
                        clientOnly: false
                      - command: gimme
                        params: your_message_optional
                        description: Slash_Gimme_Description
                        clientOnly: false
                      - command: lennyface
                        params: your_message_optional
                        description: Slash_LennyFace_Description
                        clientOnly: false
                      - command: shrug
                        params: your_message_optional
                        description: Slash_Shrug_Description
                        clientOnly: false
                      - command: tableflip
                        params: your_message_optional
                        description: Slash_Tableflip_Description
                        clientOnly: false
                      - command: unflip
                        params: your_message_optional
                        description: Slash_TableUnflip_Description
                        clientOnly: false
                      - command: create
                        clientOnly: false
                      - command: help
                        clientOnly: false
                      - command: invite
                        clientOnly: false
                      - command: invite-all-to
                        clientOnly: false
                      - command: archive
                        clientOnly: false
                      - command: join
                        clientOnly: false
                      - command: kick
                        clientOnly: false
                      - command: leave
                        clientOnly: false
                      - command: part
                        clientOnly: false
                      - command: me
                        params: your_message
                        description: Displays_action_text
                        clientOnly: false
                      - command: msg
                        clientOnly: false
                      - command: mute
                        clientOnly: false
                      - command: unmute
                        clientOnly: false
                      - command: topic
                        params: Slash_Topic_Params
                        description: Slash_Topic_Description
                        clientOnly: false
                      - command: unarchive
                        clientOnly: false
                    offset: 0
                    count: 22
                    total: 22
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
  /api/v1/commands.preview:
    get:
      tags:
        - Commands
      summary: Get Command's Preview Data
      description: Fetches the command's preview data or executes the preview item
      operationId: get-api-v1-commands.preview
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
        - name: command
          in: query
          description: The name of the command to be executed.
          required: true
          schema:
            type: string
          example: unmute
        - name: roomId
          in: query
          description: The ID of the room.
          required: true
          schema:
            type: string
          example: ByehQjC44FwMeiLbX
        - name: params
          in: query
          description: Parameters of the command if required. It is `undefined` by default.
          schema:
            type: string
          example: '@user123'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Commands
      summary: Execute command's preview item
      description: |- 
        ### Changelog
        | Version      | Description |
        | ---------------- | ------------|
        |3.0.0      | Added `tmid` and `triggerId` fields       |
        |0.65.0      | Added|
      operationId: post-api-v1-commands.preview
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                command:
                  type: string
                  description: The name of the command to be executed.
                roomId:
                  type: string
                  description: The ID of the room.
                tmid:
                  type: string
                  description: The ID of the thread to run the command.
                params:
                  type: string
                  description: Parameters of the command if required. It is `undefined` by default.
                triggerId:
                  type: string
                  description: The triggerId generated by the client that allows the command to interact with the UI
                previewItem:
                  type: object
                  description: The data of the preview item to be executed by the command
                  properties:
                    id:
                      type: string
                      description: The ID of the selected preview item
                    type:
                      type: string
                      description: The type of the selected preview item
                    value:
                      type: string
                      description: The value of the selected preview item
                  required:
                    - id
                    - type
                    - value
              required:
                - command
                - roomId
                - tmid
                - previewItem
            examples:
              Example:
                value:
                  command: unmute
                  roomId: ByehQjC44FwMeiLbX
                  tmid: Hsj2435g4bvrj4bjh
                  params: '@user123'
                  triggerId: awovufbukuefzuper
                  previewItem:
                    id: nucobdipokaikazia
                    type: image
                    value: 'https://dev.null/gif'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /api/v1/commands.run:
    post:
      tags:
        - Commands
      summary: Execute a Slash Command
      description: |- 
          Execute a slash command in the specified room.
          ### Changelog
          | Version      | Description |
          | ---------------- | ------------|
          |3.0.0      | Added `triggerId` property       |
          |2.0.0      | Added `tmid` property      |
          |0.60.2      | Added        |
      operationId: post-api-v1-commands.run
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                command:
                  type: string
                  description: The name of the command to be executed.
                roomId:
                  type: string
                  description: The ID of the room.
                params:
                  type: string
                  description: Parameters of the command if required. It is `undefined` by default
                tmid:
                  type: string
                  description: The ID of the thread to run the command.
                triggerId:
                  type: string
                  description: The triggerId generated by the client that allows the command to interact with the UI
              required:
                - command
                - roomId
            examples:
              Success:
                value:
                  command: unmute
                  roomId: ByehQjC44FwMeiLbX
                  params: '@user123'
                  tmid: Hsj2435g4bvrj4bjh
                  triggerId: awovufbukuefzuper
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
  /api/v1/mailer:
    post:
      tags:
        - Mailer
      summary: Send Mailer Endpoint
      description: |- 
        Send emails to users from your workspace.
        
        | Version      | Description |
        | ---------------- | ------------|
        |5.4.0      | Added      |
      operationId: post-api-v1-mailer
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: A valid email address to send mails from.
                subject:
                  type: string
                  description: The subject of the email.
                body:
                  type: string
                  description: 'The body of the email. You must use `[unsubscribe]` for the unsubscription link. You may use `[name]`, `[fname]`, `[lname]` for the user''s full name, first name or last name, respectively. You may use `[email]` for the user''s email.'
                dryrun:
                  type: string
                  description: 'A boolean value. If true, will only send one email to the same address as in the `From` parameter.'
              required:
                - from
                - subject
            examples:
              Example:
                value:
                  from: test.test@test.com
                  subject: Welcome to the Test Newsletter
                  body: 'Thank you for subscribing to the Test Newsletter. If this was not you feel free to unsubscribe by hitting the following button [unsubscribe]'
                  dryrun: 'true'
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
                  details:
                    type: object
                    properties:
                      function:
                        type: string
              examples:
                Invalid From Address:
                  value:
                    success: false
                    error: 'Invalid from address [error-invalid-from-address]'
                    errorType: error-invalid-from-address
                    details:
                      function: Mailer.sendMail
        '401':
          $ref: '#/components/responses/authorizationError'
  /api/v1/mailer.unsubscribe:
    post:
      tags:
        - Mailer
      summary: Mailer Unsubscribe Endpoint
      description: |- 
        Send emails to users from your workspace.
        
        ### Changelog
        | Version      | Description |
        | ------------ | ------------|
        |5.4.0         | Added      |
      operationId: post-api-v1-mailer.unsubscribe
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                _id:
                  type: string
                  description: The user id of the user that created the mailer
                createdAt:
                  type: string
                  description: The time the mailer was created
              required:
                - _id
                - createdAt
            examples:
              Example:
                value:
                  _id: c6Lsa9SFVFxJLR56H
                  createdAt: '1692284808957'
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '401':
          $ref: '#/components/responses/authorizationError'
  /api/v1/findOrCreateInvite:
    post:
      tags:
        - Invite
      summary: Find or Create Invite
      description: |- 
        Creates or return an existing invite with the specified parameters. 
        
        <a href="https://docs.rocket.chat/docs/permissions" target="_blank">Permission</a> required: `create-invite-links`
      operationId: post-api-v1-findOrCreateInvite
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rid:
                  type: string
                  description: The room ID that the invite is being created for.
                days:
                  type: integer
                  description: The number of days that the invite will be valid for. Send `0` for unlimited.
                maxUses:
                  type: integer
                  description: The number of times that the invite can be used. Send `0` for unlimited.
              required:
                - rid
                - days
                - maxUses
            examples:
              Example:
                value:
                  rid: csFYrDeixJG7PnrAh
                  days: 10
                  maxUses: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    days:
                      type: integer
                    maxUses:
                      type: integer
                    rid:
                      type: string
                    userId:
                      type: string
                    createdAt:
                      type: string
                    expires:
                      type: string
                      nullable: true
                    uses:
                      type: integer
                    _updatedAt:
                      type: string
              examples:
                Success:
                  value:
                    - _id: kDKQ3H
                      days: 1
                      maxUses: 1
                      rid: s7CE842q9WtvLctD7
                      userId: sNiDqHit5nGAGFg8X
                      createdAt: '2019-12-20T03:31:56.774Z'
                      expires: '2019-12-21T03:31:56.774Z'
                      uses: 1
                      _updatedAt: '2019-12-20T03:33:40.065Z'
                    - _id: 99ScEP
                      days: 1
                      maxUses: 0
                      rid: s7CE842q9WtvLctD7
                      userId: sNiDqHit5nGAGFg8X
                      createdAt: '2019-12-20T03:38:20.485Z'
                      expires: '2019-12-21T03:38:20.485Z'
                      uses: 0
                      _updatedAt: '2019-12-20T03:38:20.485Z'
                    - _id: Y5JKM4
                      days: 0
                      maxUses: 1
                      rid: s7CE842q9WtvLctD7
                      userId: sNiDqHit5nGAGFg8X
                      createdAt: '2019-12-20T03:38:25.313Z'
                      expires: null
                      uses: 1
                      _updatedAt: '2019-12-20T03:38:40.116Z'
        '401':
          $ref: '#/components/responses/authorizationError'
  /api/v1/listInvites:
    get:
      tags:
        - Invite
      summary: List Invites
      description: |- 
        Lists all of the invites on the workspace. 
        
        <a href="https://docs.rocket.chat/docs/permissions" target="_blank">Permission</a> required: `create-invite-links`
      operationId: get-api-v1-listInvites
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    days:
                      type: integer
                    maxUses:
                      type: integer
                    rid:
                      type: string
                    userId:
                      type: string
                    createdAt:
                      type: string
                    expires:
                      type: string
                      nullable: true
                    uses:
                      type: integer
                    _updatedAt:
                      type: string
              examples:
                Success:
                  value:
                    - _id: kDKQ3H
                      days: 1
                      maxUses: 1
                      rid: s7CE842q9WtvLctD7
                      userId: sNiDqHit5nGAGFg8X
                      createdAt: '2019-12-20T03:31:56.774Z'
                      expires: '2019-12-21T03:31:56.774Z'
                      uses: 1
                      _updatedAt: '2019-12-20T03:33:40.065Z'
                    - _id: 99ScEP
                      days: 1
                      maxUses: 0
                      rid: s7CE842q9WtvLctD7
                      userId: sNiDqHit5nGAGFg8X
                      createdAt: '2019-12-20T03:38:20.485Z'
                      expires: '2019-12-21T03:38:20.485Z'
                      uses: 0
                      _updatedAt: '2019-12-20T03:38:20.485Z'
                    - _id: Y5JKM4
                      days: 0
                      maxUses: 1
                      rid: s7CE842q9WtvLctD7
                      userId: sNiDqHit5nGAGFg8X
                      createdAt: '2019-12-20T03:38:25.313Z'
                      expires: null
                      uses: 1
                      _updatedAt: '2019-12-20T03:38:40.116Z'
        '401':
          $ref: '#/components/responses/authorizationError'
  /api/v1/removeInvite/{_id}:
    delete:
      tags:
        - Invite
      summary: Delete Invite by ID
      description: "Deletes an invite from the workspace.\r\n\r\n<a href='https://docs.rocket.chat/docs/permissions' target='_blank'>Permission</a> required: `create-invite-links`"
      operationId: delete-api-v1-removeInvite-_id
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
        - name: _id
          in: path
          description: The invite ID to be deleted.
          required: true
          schema:
            type: string
          example: kDKQ3H
      responses:
        '200':
          $ref: '#/components/responses/trueSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  errorType:
                    type: string
                  details:
                    type: object
                    properties:
                      method:
                        type: string
              examples:
                Invalid Invitation Id:
                  value:
                    success: false
                    error: 'Invalid Invitation _id [invalid-invitation-id]'
                    errorType: invalid-invitation-id
                    details:
                      method: removeInvite
        '401':
          $ref: '#/components/responses/authorizationError'
  /api/v1/useInviteToken:
    post:
      tags:
        - Invite
      summary: Report Invite Token Usage
      description: Report to the workspace that an invite token was used.
      operationId: post-api-v1-useInviteToken
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: The invite ID being used.
              required:
                - token
            examples:
              Example:
                value:
                  token: iS7pza
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  room:
                    type: object
                    properties:
                      rid:
                        type: string
                      fname:
                        type: string
                      name:
                        type: string
                      t:
                        type: string
                  success:
                    type: boolean
              examples:
                Success:
                  value:
                    room:
                      rid: QqsWiqNH2TnxtvZQq
                      fname: a-room-name
                      name: a-room-name
                      t: p
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
  /api/v1/validateInviteToken:
    post:
      tags:
        - Invite
      summary: Validate Invite Token
      description: Checks if an invite token is valid.
      operationId: post-api-v1-validateInviteToken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: The invite ID being validated.
              required:
                - token
            examples:
              Example:
                value: iS7pza
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                  success:
                    type: boolean
              examples:
                Success:
                  value:
                    valid: true
                    success: true
        '401':
          $ref: '#/components/responses/authorizationError'
tags:
  - name: Auto-Translate
  - name: Commands
  - name: Email Inbox
  - name: Invite
  - name: Licenses
  - name: Mailer
  - name: Video Conference
components:
  parameters:
    offset:
      name: offset
      in: query
      description: 'Number of items to "skip" in the query, i.e. requests return count items, skipping the first offset items.'
      required: false
      schema:
        type: integer
      example: 50
    count:
      name: count
      in: query
      description: The number of items to return.
      required: false
      schema:
        type: integer
      example: 50
    sort:
      name: sort
      in: query
      description: 'List of fields to order by, and in which direction. This is a JSON object, with properties listed in desired order, with values of 1 for ascending, or -1 for descending. For example, {"value": -1, "_id": 1}'
      required: false
      schema: {}
    query:
      name: query
      in: query
      description: 'This parameter allows you to use MongoDB query operators to search for specific data. For example, to query users with a name that contains the letter "g": query={ "name": { "$regex": "g" } }'
      required: false
      schema: {}
    fields:
      name: fields
      in: query
      description: 'This parameter accepts a JSON object with properties that have a value of 1 or 0 to include or exclude them in the response. For example, to only retrieve the usernames of users: fields={ "username": 1 }'
      required: false
      schema:
        type: string
    Auth-Token:
      name: X-Auth-Token
      in: header
      description: The `authToken` of the authenticated user.
      required: true
      schema:
        type: string
      example: RScctEHSmLGZGywfIhWyRpyofhKOiMoUIpimhvheU3f
    UserId:
      name: X-User-Id
      in: header
      description: The `userId` of the authenticated user.
      required: true
      schema:
        type: string
      example: rbAXPnMktTFbNpwtJ
  responses:
    trueSuccess:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
          examples:
            Success:
              value:
                success: true
    authorizationError:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              message:
                type: string
          examples:
            Authorization Error:
              value:
                status: error
                message: You must be logged in to do this.
    forbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
              error:
                type: string
          examples:
            Permission Error:
              value:
                success: false
                error: 'User does not have the permissions required for this action [error-unauthorized]'
